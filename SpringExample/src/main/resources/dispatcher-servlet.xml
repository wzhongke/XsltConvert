<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd"
>

    <bean class="spring.configuration.BeanConfig" />
    <context:component-scan base-package="spring.configuration" />
    <mvc:annotation-driven />
    <!-- **************************************************************** -->
    <!--  CONVERSION SERVICE                                              -->
    <!--  Standard Spring formatting-enabled implementation               -->
    <!-- **************************************************************** -->
    <!--<bean id="conversionService"-->
          <!--class="org.springframework.format.support.FormattingConversionServiceFactoryBean">-->
        <!--<property name="formatters">-->
            <!--<set>-->
                <!--<bean class="com.wang.conversion.VarietyFormatter" />-->
                <!--<bean class="thymeleafexamples.stsm.web.conversion.DateFormatter" />-->
            <!--</set>-->
        <!--</property>-->
    <!--</bean>-->

    <!-- first destion to go -->
    <!--<mvc:view-controller path="/" view-caption="index"/>-->
    <!-- if you use annotation you must configure following setting -->

    <!--<bean id="tweet" class="com.wang.websocket.TweetWebSocket"/>-->

    <!--<websocket:handlers>-->
        <!--<websocket:mapping path="/tweets/list" handler="tweet"/>-->
    <!--</websocket:handlers>-->

    <!-- **************************************************************** -->
    <!--  THYMELEAF-SPECIFIC ARTIFACTS                                    -->
    <!--  TemplateResolver <- TemplateEngine <- ViewResolver              -->
    <!-- **************************************************************** -->
    <!--<bean id="templateResolver" class="org.thymeleaf.templateresolver.ServletContextTemplateResolver">-->
    <!--<property name="prefix" value="/WEB-INF/templates" />-->
    <!--<property name="suffix" value=".html" />-->
    <!--<property name="templateMode" value="HTML5" />-->

    <!--</bean>-->
    <!--<bean id="templateEngine" class="org.thymeleaf.spring4.SpringTemplateEngine">-->
        <!--<property name="templateResolver" ref="templateResolver" />-->
    <!--</bean>-->
    <!--<bean class="org.thymeleaf.spring4.view.ThymeleafViewResolver">-->
        <!--<property name="templateEngine" ref="templateEngine" />-->
        <!--<property name="order" value="1"/>-->
        <!--<property name="viewNames"  value="*.html, *.xhtml" />-->
    <!--</bean>-->

    <bean id="mappingJacksonHttpMessageConverter"
          class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
        <property name="supportedMediaTypes">
            <list>
                <value>text/html;charset=UTF-8</value>
                <value>application/json;charset=utf-8</value>
            </list>
        </property>
    </bean>

    <!-- As a best practice, we strongly encourage placing your JSP files in a directory under the 'WEB-INF' directory,
       so there can be no direct access by clients-->
    <!-- 不应给予UrlBasedViewResolver以及子类过高的优先级，因为其checkResource总是返回true，找不到不会再继续查找
        自定义的MultiView在查询不到时返回false，可以进行下一步-->
    <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="viewClass" value="spring.view.MultiView"/>
        <property name="prefix" value="/WEB-INF/jsp/"/>
        <property name="suffix" value=".jsp"/>
    </bean>
    <bean id="templateResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/html/" />
        <property name="suffix" value=".html" />
        <property name="contentType" value="text/html" />
    </bean>
    <bean id="xlstViewResolver" class="org.springframework.web.servlet.view.xslt.XsltViewResolver">
        <property name="prefix" value="/WEB-INF/xsl/" />
        <property name="suffix" value=".xsl" />
    </bean>
    <!-- 多文件上传 MultipartResolver -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="maxUploadSizePerFile" value="526002600"/>
    </bean>
    <!-- HTTP 缓存对于静态资源的支持 -->
    <mvc:resources mapping="/static/**" location="/static/">
        <mvc:cache-control max-age="3600" cache-public="true" />
    </mvc:resources>
    <mvc:default-servlet-handler />


    <bean id="handlerMapping" class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping">
        <property name="interceptors">
            <list><ref bean="officeHoursInterceptor" /> </list>
        </property>
    </bean>
    <bean id="officeHoursInterceptor" class="spring.intercepting.TimeBasedAccessInterceptor">
        <property name="openingTime" value="9" />
        <property name="closingTime" value="18" />
    </bean>

</beans>
