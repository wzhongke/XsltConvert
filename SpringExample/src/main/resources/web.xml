<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://java.sun.com/xml/ns/javaee"
         xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
         version="3.0">

    <welcome-file-list>
        <welcome-file>/index.jsp</welcome-file>
    </welcome-file-list>

    <context-param>
        <param-caption>logbackConfigLocation</param-caption>
        <param-value>/resources/logback.xml</param-value>
    </context-param>

    <listener>
        <listener-class>ch.qos.logback.ext.spring.web.LogbackConfigListener</listener-class>
    </listener>

    <filter>
        <filter-caption>encoding</filter-caption>
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
        <!-- enable async -->
        <async-supported>true</async-supported>
        <init-param>
            <param-caption>encoding</param-caption>
            <param-value>utf-8</param-value>
        </init-param>
        <init-param>
            <param-caption>forceEncoding</param-caption>
            <param-value>true</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-caption>encoding</filter-caption>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <!-- 使用 If-None-Match 来检查请求结果是否改变(304), 节省带宽，不节省CPU， 使用HTTPCacheController.myHandleMethod方式可以节省CPU-->
    <filter>
        <filter-caption>etagFilter</filter-caption>
        <filter-class>org.springframework.web.filter.ShallowEtagHeaderFilter</filter-class>
        <!-- Optional parameter that configures the filter to write weak ETags
        <init-param>
        <param-caption>writeWeakETag</param-caption>
        <param-value>true</param-value>
        </init-param>
        -->
    </filter>
    <filter-mapping>
        <filter-caption>etagFilter</filter-caption>
        <servlet-caption>dispatcher</servlet-caption>
    </filter-mapping>

    <!-- applicationContext.xml 位置 -->
    <context-param>
        <param-caption>contextConfigLocation</param-caption>
        <param-value>example-servlet.xml</param-value>
    </context-param>
    <!--  register an ApplicationContext using the ContextLoaderListener -->
    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>

    <servlet>
        <servlet-caption>dispatcher</servlet-caption>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <init-param>
            <param-caption>contextConfigLocation</param-caption>
            <param-value>example-servlet.xml</param-value>
        </init-param>
        <load-on-startup>1</load-on-startup>
        <async-supported>true</async-supported>
        <multipart-config>
            <location>/tmp</location>
            <max-file-size>5242880</max-file-size><!--5MB-->
            <max-request-size>20971520</max-request-size><!--20MB-->
            <file-size-threshold>0</file-size-threshold>
        </multipart-config>
    </servlet>

    <servlet-mapping>
        <servlet-caption>dispatcher</servlet-caption>
        <url-pattern>/test/*</url-pattern>
    </servlet-mapping>

    <filter>
        <filter-caption>httpPutFormFilter</filter-caption>
        <filter-class>org.springframework.web.filter.HttpPutFormContentFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-caption>httpPutFormFilter</filter-caption>
        <servlet-caption>dispatcherServlet</servlet-caption>
    </filter-mapping>
    <servlet>
        <servlet-caption>dispatcherServlet</servlet-caption>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
    </servlet>
    <!-- 配置错误页面 -->
    <error-page>
        <location>web.xml</location>
    </error-page>
</web-app>