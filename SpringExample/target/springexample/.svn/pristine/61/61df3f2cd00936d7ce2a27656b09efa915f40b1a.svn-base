<%@ page language="java" contentType="text/html; charset=GBK"
    pageEncoding="GBK"%>

<html>
<head>
	<meta http-equiv="Content-Type" content="text/html; charset=GBK">
	<title>域名表记录列表</title>
	
</head>
<script type="text/javascript">
	Ext.namespace('Ext.exampledata');
	Ext.exampledata.extra_attr_list = [
		['普通', '普通', 'The Heart of Dixie'],
        ['无价值', '无价值', 'The Heart of Dixie'],
        ['死链', '死链', 'The Land of the Midnight Sun'],
        ['非中文', '非中文', 'The Grand Canyon State']
    ];

	Ext.apply(Ext.form.VTypes, {
	    daterange : function(val, field) {
	        var date = field.parseDate(val);
	        if(!date){
	            return;
	        }
	        if (field.startDateField && (!this.dateRangeMax || (date.getTime() != this.dateRangeMax.getTime()))) {
	            var start = Ext.getCmp(field.startDateField);
	            start.setMaxValue(date);
	            start.validate();
	            this.dateRangeMax = date;
	        } 
	        else if (field.endDateField && (!this.dateRangeMin || (date.getTime() != this.dateRangeMin.getTime()))) {
	            var end = Ext.getCmp(field.endDateField);
	            end.setMinValue(date);
	            end.validate();
	            this.dateRangeMin = date;
	        }
	        return true;
	    }
	});
	
	Ext.onReady(function(){
		//定义数据集对象
		var store = new Ext.data.Store({//配置分组数据集
			//autoLoad :true,
			reader: new Ext.data.XmlReader({
				totalRecords: "results",
				record: "Log",
				id: "id"
			},
			Ext.data.Record.create([
				{name: 'id'},
				{name: 'db_name'},
				{name: 'db_type'},
				{name: 'db_url'},
				{name: 'db_user'},
				{name: 'act'},
				{name: 'sub_date', type: 'date', dateFormat: 'Y-m-d H:i:s'},
				{name: 'ip'},
				{name: 'info'},
				{name: 'info_after'}
			])
			),
			proxy : new Ext.data.HttpProxy({
				url : 'log.do?method=getLogList'
			}),
			sortInfo: {field: 'id', direction: 'DESC'},
	  		remoteSort: true
		})
		//将 是否封禁首页和是否留首封站 的代码解析成 文本
		function acttype(val){
			//$arract=array('1'=>'添加','2'=>'删除','3'=>'修改','4'=>'命中白名单');
	        switch(val){
	        case '1':
		        return '添加';
	        case '2':    
	        	return '删除';
	        case '3':
		        return '修改';
	        case '4':    
	        	return '命中保护白名单';
	        
	        }
    	}
		function tabletype(val){
			//'domain'=>'域名表','deadlink'=>'死链表','white'=>'白名单','novalue'=>'无价值表','url'=>'前缀表','domain,url'=>'域名表，前缀表','blacklist'=>'实时表'
	        if(val=='domain')
		        return '域名表';
	        if(val=='deadlink')  
	        	return '死链表';
	        if(val=='white')
		        return '白名单';
	        if(val=='novalue')    
	        	return '无价值表';
	        if(val=='url')   
	        	return '前缀表';
	        if(val=='domain,url')
		        return '域名表，前缀表';
	        if(val=='blacklist')   
	        	return '实时表';
        	return val;
    	}
    	//创建分页工具栏
    	var pagingBar = new Ext.PagingToolbar({
	        pageSize: 18,
	        store: store,
	        displayInfo: true,
	        displayMsg: '显示 {0} - {1} , 共 {2} 条记录',
	        emptyMsg: "没有任何记录",
	        items:['-']
    	});
		//创建Grid表格组件
		var recordGrid = new Ext.grid.GridPanel({
			//applyTo : 'grid-div',
			region: 'north',
			frame:true,
			loadMask: true,
			store: store,
			autoScroll: true,
			autoWidth:true,
			//width: 960,
			height: 350,
			columns: [//配置表格列
				new Ext.grid.RowNumberer({
					header : '行号',
					width : 50
				}),//表格行号组件
				{header: "编号", width: 50, dataIndex: 'id', sortable: true},
				{header: "最终关键字段", width: 200, dataIndex: 'db_url', sortable: true},
				{header: "操作类型", width: 100, dataIndex: 'act',renderer: acttype,  sortable: true},
				{header: "黑名单类型", width: 100, dataIndex: 'db_name',renderer: tabletype, sortable: true},
				{header: "提交用户", width: 100, dataIndex: 'db_user', sortable: true},
				{header: "IP", width: 100, dataIndex: 'ip', sortable: true},
				{header: "提交日期", width: 100, dataIndex: 'sub_date', renderer: Ext.util.Format.dateRenderer('Y-m-d H:i:s'), sortable: true},
				{header: "操作前", width: 80, dataIndex: 'info', sortable: true},
				{header: "操作后", width: 80, dataIndex: 'info_after', sortable: true}
			],
			
	        // paging bar on the bottom
	        bbar: pagingBar
		});
			
		// trigger the data store load
    	store.load({params:{start:0, limit:18}});
    	
		//创建新增或修改域名表记录信息的form表单
		Ext.QuickTips.init();
		Ext.form.Field.prototype.msgTarget = 'side';//统一指定错误信息提示方式
		//开始查询代码
		function query(){
			//新增域名表记录信息
			var startdt = document.getElementById("startdt").value;
			var enddt = document.getElementById("enddt").value;
			var actfieldstr = "";
			if(document.getElementById('actfield1').checked)
				actfieldstr = actfieldstr + "1";
			if(document.getElementById('actfield0').checked)
				if( actfieldstr != "1" )
					actfieldstr = actfieldstr + "0";
				else
					actfieldstr = actfieldstr + "-0";
			var url = "log.do?method=getLogList&actfield="+actfieldstr+"&startdt=" + startdt + "&enddt=" + enddt;
			store.proxy.conn.url = url;
			store.load({params:{start:0, limit:18}});
		}
	    var dr = new Ext.FormPanel({
	    	labelWidth: 125,
	        frame: true,
	        autoWidth:true,
	        //width: 960,
	  	  	bodyStyle:'padding:5px 5px 0',
	        defaults: {width: 175},
	      	//增加表单键盘事件
	        keys:[
	         {
	             key: [10,13],
	             fn:query
	         } ],
	        items: [{
				fieldLabel: '开始日期',
				xtype: 'datefield',
				name: 'startdt',
				id: 'startdt',
				format : 'Y-m-d',
				vtype: 'daterange',
                style: { width: "350px"},
				endDateField: 'enddt' // id of the end date field
	        },{
				fieldLabel: '结束日期',
				xtype: 'datefield',
				name: 'enddt',
				id: 'enddt',
				format : 'Y-m-d',
				vtype: 'daterange',
                style: { width: "350px"},
				startDateField: 'startdt' // id of the start date field
	        },
	        {
	            layout:'column',
	            width : 500,
	            border:false,
	            items:[
	                {
	                    columnWidth:.5,
	                    layout: 'form',
	                    border:false,
	                    items: [{
	                    	xtype: 'checkbox',
	                        fieldLabel: '操作类型:',
	                        checked: true,
	                        labelSeparator: '',
	                        boxLabel: '命中白名单',
	                        id: 'actfield1',
	                        inputValue: 1
	                    }]
	                },
	                {   
	                    columnWidth:.5,
	                    layout: 'form',
	                    border:false,
	                    items: [{
	                    	xtype: 'checkbox',
	                        fieldLabel: '',
	                        checked: true,
	                        labelSeparator: '',
	                        boxLabel: '增删改',
	                        id: 'actfield0',
	                        inputValue: 0
	                    }]
	                }
	              ]
	        }],
			buttons:[
				{
					text : '查询',
					handler : query
				}
			]
	      });
	      dr.render('dr');


	      var ct = new Ext.Panel({
	  		renderTo: 'grid-div',
	  		frame: true,
	  		autoWidth:true,
	  		//width: 960,
	  		height: 400,
	  		layout: 'border',
	  		items: [
	  			recordGrid,
	  			{
	  				id: 'detailPanel',
	  				region: 'center',
	  				bodyStyle: {
	  					background: '#ffffff',
	  					padding: '7px'
	  				},
	  				html: '请选择一条日志记录查看其详细信息.'
	  			}
	  		]
	  	})

	   // define a template to use for the detail view
	  	var bookTplMarkup = [
	  		'操作前: {info}<br/>',
	  		'操作后: {info_after}<br/>'
	  	];
	  	var bookTpl = new Ext.Template(bookTplMarkup);
	  	recordGrid.getSelectionModel().on('rowselect', function(sm, rowIdx, r) {
			var detailPanel = Ext.getCmp('detailPanel');
			bookTpl.overwrite(detailPanel.body, r.data);
		});
 
	});


</script>
<body>
<div id="dr" style="width:100%;height:22%;"></div>
<div id='grid-div' style="width:100%; height:78%;"/>
</body>
</html>