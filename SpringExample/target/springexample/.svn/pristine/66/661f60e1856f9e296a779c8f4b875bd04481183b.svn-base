//这里放一个进度条
var pbar1=null;
var processPDiv = { 
    progressRate:0,
    progressCode:1,
    progresstimer:null,
    progressCount:0,
    getProgressRate:function(){               
        Ext.Ajax.request({
            url : 'progress.do?method=getProgress&c='+(new Date().getTime()),
            method : 'POST',
            params:{tablename:tablename,requestId:requestId},
            async:false,
            success : function(response,options){
                var result;
                eval("result="+response.responseText);
                var success = result.success;
                if(success){ 
                    processPDiv.progressRate = result.progress;
                    processPDiv.progressCode = result.code;
                }
            },
            failure:function(response,options){
                processPDiv.progressRate=-1;
            }
        });
        return processPDiv.progressRate;
    },
    
    progressFunc:function(callback){
        if(pbar1==null){
            var progressDiv = Ext.get("progress-div");
            progressDiv.show();
            
            pbar1= new Ext.ProgressBar({ // 实例化进度条
                renderTo : "progress-div",
                width : 800, 
                text : "同步进度...0%"
            });
        }
        processPDiv.progressRate = processPDiv.getProgressRate(); 
        if(processPDiv.progressRate==-1){
            if(processPDiv.progressCount<10){
                processPDiv.progressCount++;
                processPDiv.progresstimer=setTimeout(function(){processPDiv.progressFunc();},500);
            }else{
                clearTimeout(processPDiv.progresstimer);
            }
        }else{
            pbar1.updateProgress(processPDiv.progressRate/100.0);
            pbar1.updateText("同步进度..."+processPDiv.progressRate+"%")
            processPDiv.progresstimer=setTimeout(function(){processPDiv.progressFunc();},500);
            if(processPDiv.progressCode==2||processPDiv.progressCode==3){
                clearTimeout(processPDiv.progresstimer);
                setTimeout(function(){
                    //执行完成的进度条去掉
                    processPDiv.clearPDiv();
                },2000);
                if(callback)callback();
                //store.load({params:{start:0, limit:pageSize}});
            }
        }
    },
    clearPDiv:function(){
        var progressDiv = Ext.get("progress-div");
        progressDiv.hide();
    },
    hidePDiv:function(){
        if(processPDiv.progresstimer!=null)
            clearTimeout(processPDiv.progresstimer);
        var progressDiv = Ext.get("progress-div");
        progressDiv.hide();
    },
    init:function(callback){
        var progressDiv = Ext.get("progress-div");
        if(progressDiv){
            var children = progressDiv.dom.children;
            var len = children.length;
            for(var i=0;i<len;i++)
            progressDiv.dom.removeChild(children[i]);
        }
        pbar1 = null;
        processPDiv.progressRate = 0;
        processPDiv.progressCode = 1;
        processPDiv.progresstimer=null;
        processPDiv.progressFunc(callback);
        
    }    
}
var requestId=null;
var dataId=null;
function cancel_synchronize(callback){
    var confirmTip = Ext.MessageBox.confirm("提示","您确定取消同步操作吗？",function(){
        Ext.Ajax.request({
            url : 'progress.do?method=canceldeploy',
            params : {tablename:tablename,requestId:requestId},
            method : 'POST',
            success : function(response,options){
                var result;
                eval("result="+response.responseText);
                var success = result.success;
                if(success){ 
                    processPDiv.hidePDiv();
                }
                Ext.Msg.alert('提示',result.msg);
                if(callback)callback();
                //store.load({params:{start:0, limit:pageSize}});
            }
        });               
    });
}
//线上同步词表
function new_synchronize(callback){
	var msgTip = Ext.MessageBox.show({
		title:'提示',
		width : 250,
		msg:'正在向线上发送同步信号，请稍候......'
	});
	Ext.Ajax.request({
		url : 'progress.do?method=newdeploy',
		params : {tablename:tablename,requestType:syncHubType},
		method : 'POST',
		success : function(response,options){
            msgTip.hide();
            var result;
            eval("result="+response.responseText);
            var success = result.success;
            if(success){ 
                requestId = result.requestId;
                dataId = result.dataId;
                processPDiv.init(callback);
            }
            Ext.Msg.alert('提示',result.msg);
            if(callback)callback();
            //store.load({params:{start:0, limit:pageSize}}); 
		}
	});
}
//线上同步词表
function new_synchronize_all(callback){
	var msgTip = Ext.MessageBox.show({
		title:'提示',
		width : 250,
		msg:'正在向线上发送同步信号，请稍候......'
	});
	Ext.Ajax.request({
		url : 'progress.do?method=newdeploy',
		params : {tablename:tablename,requestType:syncHubType,deploytype:"all"},
		method : 'POST',
		success : function(response,options){
            msgTip.hide();
            var result;
            eval("result="+response.responseText);
            var success = result.success;
            if(success){ 
                requestId = result.requestId;
                dataId = result.dataId;
                processPDiv.init(callback);
            }
            Ext.Msg.alert('提示',result.msg);
            if(callback)callback();
            //store.load({params:{start:0, limit:pageSize}}); 
		}
	});
}