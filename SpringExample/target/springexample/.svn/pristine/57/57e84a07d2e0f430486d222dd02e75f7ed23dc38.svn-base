<%@ page language="java" contentType="text/html; charset=GBK"
    pageEncoding="GBK"%>
<%@ page import=" java.sql.Connection"%>
<%@ page import="java.sql.PreparedStatement" %>
<%@ page import="java.sql.ResultSet" %>
<%@ page import="com.sohu.frontweb.blacklist.service.DBService" %> 
<%@ page import="com.sohu.frontweb.base.action.UmisAction"%>
    
<%
String user = (String)request.getSession().getAttribute("user");
String category = "信产部";

String sql = "select id from front_webpage_grouplist where keyword = '"+category+"'";
Connection conn = null;
PreparedStatement stat = null;
ResultSet rs = null;
int groupnameId = 0 ;

try{
	conn = DBService.getInstance().getConnection_group();
	//获得记录总数
	stat = conn.prepareStatement(sql);
	rs = stat.executeQuery();
	if( rs.next() ){
		groupnameId = rs.getInt("id");
	}
	
}catch(Exception e){
	e.printStackTrace();
}finally{
	DBService.closeAll(rs, stat, conn);
}
 %>
<html>
<head>
	<meta http-equiv="Content-Type" content="text/html; charset=GBK">
	<title>网页前台限制词记录列表</title>
    <script type="text/javascript">
    tablename = "front_webpage_blacklist";
    syncHubType = "web";
    pageSize = 50;
    </script>
    <script type="text/javascript" src="/js/quickSync.js"></script>
    <script type="text/javascript" src="/js/tabinsert.js"></script>
</head>

<script type="text/javascript">

	Ext.namespace('Ext.exampledata');
	
	Ext.exampledata.status_list = [
		//['2','无','The Heart of Dixie'],
		['1','生效','The Heart of Dixie'],
		['0','失效','The Heart of Dixie']
	];
	
	Ext.exampledata.sogouRank_list = [
		['-3','健康', 'The Heart of Dixie'],
 		['-2','不干涉（不影响工信部级别）', 'The Heart of Dixie'],
 		['-1','无结果', 'The Heart of Dixie'],
		['0','0级:结果限定在新闻办&0级站点', 'The Heart of Dixie'],
	    ['1', '1级:结果限定在新闻办&1级站点', 'The Heart of Dixie'],
	    ['2', '2级:结果限定在0级站点', 'The Land of the Midnight Sun'],
	    ['3', '3级:结果限定在1级站点', 'The Grand Canyon State'],
	    ['4', '4级:结果限定在2级站点', 'The Land of the Midnight Sun'],
	    ['6', '5级:结果限定在3级站点', 'The Grand Canyon State']
     ];
     
	Ext.exampledata.masklevel_list = [
		['-1','-1级:无结果', 'The Heart of Dixie'],
		['0','0级:结果限定在新闻办&0级站点', 'The Heart of Dixie'],
	    ['1', '1级:结果限定在新闻办&1级站点', 'The Heart of Dixie'],
	    ['2', '2级:结果限定在0级站点', 'The Land of the Midnight Sun'],
	    ['3', '3级:结果限定在1级站点', 'The Grand Canyon State'],
	    ['4', '4级:结果限定在2级站点', 'The Land of the Midnight Sun'],
	    ['6', '5级:结果限定在3级站点', 'The Grand Canyon State'],
	    ['7', '6级:不限制站点', 'The Grand Canyon State']
	];
	
	Ext.exampledata.matchrule_list = [
		['1','1级:组合词（多个词模糊匹配）','The Heart of Dixie'],
		['2','2级:模糊文字匹配', 'The Heart of Dixie'],
	    ['4','3级:精确文字匹配', 'The Land of the Midnight Sun'],
	    ['3','4级:精确文字匹配(过滤特殊符号)', 'The Land of the Midnight Sun']
	 ];

	Ext.exampledata.encombox_list = [
		['0','不屏蔽', 'The Heart of Dixie'],
	    ['1','条件词封禁', 'The Land of the Midnight Sun'],
	    ['2','结果词封禁', 'The Land of the Midnight Sun'],
	    ['3','两者都屏蔽', 'The Land of the Midnight Sun']
	 ];

	 
	Ext.exampledata.batch_masklevel_list = [
		['-99','保持原值', 'The Heart of Dixie'],
		['-1','-1级:无结果', 'The Heart of Dixie'],
		['0','0级:结果限定在新闻办&0级站点', 'The Heart of Dixie'],
	    ['1', '1级:结果限定在新闻办&1级站点', 'The Heart of Dixie'],
	    ['2', '2级:结果限定在0级站点', 'The Land of the Midnight Sun'],
	    ['3', '3级:结果限定在1级站点', 'The Grand Canyon State'],
	    ['4', '4级:结果限定在2级站点', 'The Land of the Midnight Sun'],
	    ['6', '5级:结果限定在3级站点', 'The Grand Canyon State'],
	    ['7', '6级:不限制站点', 'The Grand Canyon State']
	];
	Ext.exampledata.batch_matchrule_list = [
		['-99','保持原值', 'The Heart of Dixie'],
		['1','1级:组合词（多个词模糊匹配）','The Heart of Dixie'],
		['2','2级:模糊文字匹配', 'The Heart of Dixie'],
	    ['4','3级:精确文字匹配', 'The Land of the Midnight Sun'],
	    ['3','4级:精确文字匹配(过滤特殊符号)', 'The Land of the Midnight Sun']
	 ];
	Ext.exampledata.batch_yesno= [
   	    ['-99','保持原值', 'The Heart of Dixie'],
   		['1','是', 'The Heart of Dixie'],
   		['0','否', 'The Heart of Dixie']
   	];
	Ext.exampledata.batch_encombox_list = [
		['-99','保持原值', 'The Heart of Dixie'],
		['0','不屏蔽', 'The Heart of Dixie'],
	    ['1','条件词封禁', 'The Land of the Midnight Sun'],
	    ['2','结果词封禁', 'The Land of the Midnight Sun'],
	    ['3','两者都屏蔽', 'The Land of the Midnight Sun']

	];   	
   	

   	
	Ext.exampledata.query_masklevel_list = [
		['-100','全部', 'The Heart of Dixie'],
		['-1','-1级:无结果', 'The Heart of Dixie'],
		['0','0级:结果限定在新闻办&0级站点', 'The Heart of Dixie'],
	 	['1', '1级:结果限定在新闻办&1级站点', 'The Heart of Dixie'],
	  	['2', '2级:结果限定在0级站点', 'The Land of the Midnight Sun'],
	  	['3', '3级:结果限定在1级站点', 'The Grand Canyon State'],
	  	['4', '4级:结果限定在2级站点', 'The Land of the Midnight Sun'],
	  	['6', '5级:结果限定在3级站点', 'The Grand Canyon State'],
	  	['7', '6级:不限制站点', 'The Grand Canyon State']
	];
	Ext.exampledata.query_matchrule_list = [
		['-100','全部', 'The Heart of Dixie'],
		['1','1级:组合文字匹配', 'The Heart of Dixie'],
		['2','2级:模糊文字匹配', 'The Heart of Dixie'],
	    ['4','3级:精确文字匹配', 'The Land of the Midnight Sun'],
	    ['3','4级:精确文字匹配(过滤特殊符号)', 'The Land of the Midnight Sun']		
	];
	
	Ext.exampledata.query_encombox_list = [
		['-100','全部', 'The Heart of Dixie'],
		['0','不屏蔽', 'The Heart of Dixie'],
	    ['1','条件词封禁', 'The Land of the Midnight Sun'],
	    ['2','结果词封禁', 'The Land of the Midnight Sun'],
	    ['3','两者都屏蔽', 'The Land of the Midnight Sun']

	 ];	
	
	Ext.onReady(function(){
		var exportConditionUrl = 'frontWebpage.do?method=getFrontWebpageList';
		
		//创建新增或单独修改表记录信息的form表单
		Ext.QuickTips.init();
		Ext.form.Field.prototype.msgTarget = 'side';//统一指定错误信息提示方式
		//定义数据集对象
		var store = new Ext.data.Store({//配置分组数据集
			//autoLoad :true,
			reader: new Ext.data.XmlReader({
				totalRecords: "results",
				record: "FrontWebpageRecord",
				id: "id"
			},
			Ext.data.Record.create([
				{name: 'id'},
				{name: 'keyword'},
				{name: 'type'},
				{name: 'match_type'},
				{name: 'groupname'},
				
				{name: 'submitter'},
				{name: 'start_time', type: 'date', dateFormat: 'Y-m-d H:i:s'},
				{name: 'end_time', type: 'date', dateFormat: 'Y-m-d H:i:s'},
				{name: 'validate_time', type: 'date', dateFormat: 'Y-m-d H:i:s'},

				{name: 'extendhint'},
				{name: 'beijing'},
				{name: 'enhint'},
				{name: 'ensugg'},
				{name: 'note'},
				
				{name: 'sogou_rank'},
				{name: 'status'},
				<%if(UmisAction.UMIS_FRONT_USE_NEW_SYNC){%>
				{name: 'start_date'},
				
				{name: 'sync_status'},
                {name: 'sync_message'},
                {name: 'sync_modify_time',type:'date',dateFormat:'Y-m-d H:i:s'}
                <%}else{%>
                {name: 'start_date'}
                <%}%>
			])
			),
			proxy : new Ext.data.HttpProxy({
				url : 'frontWebpage.do?method=getFrontWebpageList'
			}),
			sortInfo: {field: 'start_time', direction: 'DESC'},
	  		remoteSort: true
		})
		//定义分组数据集对象
		var groupStore = new Ext.data.Store({//配置分组数据集
			autoLoad :true,
			reader: new Ext.data.XmlReader({
				totalRecords: "results",
				record: "FrontWebpageGroupRecord",
				id: "id"
			},
			Ext.data.Record.create([
				{name: 'id'},
				{name: 'keyword'},
				{name: 'note'}
			])
			),
			proxy : new Ext.data.HttpProxy({
				url : 'frontWebpageGroup.do?method=getFrontWebpageGroupList'
			}),
			sortInfo: {field: 'id', direction: 'DESC'},
	  		remoteSort: true
		})
		groupStore.load();
		
		var query_groupStore = new Ext.data.Store({//配置分组数据集
			autoLoad :true,
			reader: new Ext.data.XmlReader({
				totalRecords: "results",
				record: "FrontWebpageGroupRecord",
				id: "id"
			},
			Ext.data.Record.create([
				{name: 'id'},
				{name: 'keyword'},
				{name: 'note'}
			])
			),
			proxy : new Ext.data.HttpProxy({
				url : 'frontWebpageGroup.do?method=getFrontWebpageGroupList4query'
			}),
			sortInfo: {field: 'id', direction: 'DESC'},
	  		remoteSort: true
		})
		var batch_groupStore = new Ext.data.Store({//配置分组数据集
			autoLoad :true,
			reader: new Ext.data.XmlReader({
				totalRecords: "results",
				record: "FrontWebpageGroupRecord",
				id: "id"
			},
			Ext.data.Record.create([
				{name: 'id'},
				{name: 'keyword'},
				{name: 'note'}
			])
			),
			proxy : new Ext.data.HttpProxy({
				url : 'frontWebpageGroup.do?method=getFrontWebpageGroupList4batch'
			}),
			sortInfo: {field: 'id', direction: 'DESC'},
	  		remoteSort: true
		})



		
		//定义分组数据集对象
		var popupStore = new Ext.data.Store({//配置分组数据集
			reader: new Ext.data.JsonReader({
				totalProperty: "results",
				root: "items",
				id: "id"
			},
			Ext.data.Record.create([
			    /*原有记录*/
				{name: 'id'},
				{name: 'keyword'},
				{name: 'type'},
				{name: 'match_type'},
				{name: 'groupname'},
				
				{name: 'submitter'},
				{name: 'start_time_string', type: 'date', dateFormat: 'Y-m-d H:i:s'},
				{name: 'end_time_string', type: 'date', dateFormat: 'Y-m-d H:i:s'},
				{name: 'validate_time_string', type: 'date', dateFormat: 'Y-m-d H:i:s'},
				{name: 'extendhint'},
				{name: 'beijing'},
				{name: 'enhint'},
				{name: 'ensugg'},
				{name: 'note'},

			    /*新纪录*/      			
				{name: 'confirm_type'},
				{name: 'confirm_match_type'},
				{name: 'confirm_groupname'},
				
				{name: 'confirm_extendhint'},
				{name: 'confirm_beijing'},
				{name: 'confirm_enhint'},
				
				{name: 'confirm_start_time_string'},
				{name: 'confirm_end_time_string'},
				{name: 'confirm_validate_time_string'},
				{name: 'confirm_note'}
			])
			),
			sortInfo: {field: 'id', direction: 'DESC'}
		})

		<%//根据权限信息显示工具栏
		StringBuffer toolbar_str = new StringBuffer();
    	toolbar_str.append("{text : '新增',iconCls:'add',handler : showAdd},");
    	toolbar_str.append("{text : '修改',iconCls:'option',handler : showModify},");
    	toolbar_str.append("{text : '恢复信产部级别',iconCls:'option',handler : showRecovery},");
    	toolbar_str.append("{text : '删除',iconCls:'remove',handler : showDelete},");
    	//toolbar_str.append("{text : '同步词表',iconCls:'batch-remove',handler : synchronize},");
    	toolbar_str.append("'-',");
    	if(UmisAction.UMIS_FRONT_USE_NEW_SYNC){
    	    toolbar_str.append("{text : '快速同步词表',iconCls:'batch-remove',handler : doSync},");
    	    toolbar_str.append("{text : '取消同步',iconCls:'batch-remove',handler : doCancel},");
    	    toolbar_str.append("'-',");
    	}	    
	    toolbar_str.append("{text: '过期提醒',enableToggle: true,iconCls:'batch-add',toggleHandler: tixing,pressed: false},");
	    
	    toolbar_str.deleteCharAt(toolbar_str.length()-1);
	    %>
		//创建工具栏组件
		var toolbar = new Ext.Toolbar([
		    <%=toolbar_str.toString()%>
		]);
		//创建工具栏组件
		var popupToolbar = new Ext.Toolbar([
			{text : '覆盖',iconCls:'option',handler : showConfirm},
			{text : '返回',iconCls:'batch-remove',handler : function (){
				popupWin.hide();
				store.load({params:{start:0, limit:50}});
				}}
		]);
		//popupToolbar.addText('hehe');
		//将 是否封禁首页和是否留首封站 的代码解析成 文本
		function booleantag(val){
	        if(val == 1){
	            return '是';
	        }else if(val == 0){
	            return '否';
	        }else
		        return '';
    	}
    	//rendererid=1限制级别渲染器;	rendererid=2匹配规则渲染器
		function superRenderer(val,rendererid){
			if( rendererid == 1 )
				var datalist = Ext.exampledata.masklevel_list;
			else if(rendererid == 2) 
				var datalist = Ext.exampledata.matchrule_list;
			else if(rendererid == 3 )
				var datalist = Ext.exampledata.encombox_list;
			else if(rendererid == 4){
				var datalist = Ext.exampledata.sogouRank_list;
			}
			var num = datalist.length;
			for(var i=0;i<num;i++){
				var tmpobj = datalist[i];
				if(tmpobj[0]==val)
					return tmpobj[1];
			}
		}
		function sogouRankRenderer(val){
			return superRenderer(val,4);
		}
		
		function typeRenderer(val){
			return superRenderer(val,1);
		}
		function match_typeRenderer(val){
			return superRenderer(val,2);
		}
		
		function en_Renderer(val){
			return superRenderer(val,3);
		}
		
		function statusRenderer(val) {
			if(val ==0) {
				return "失效";
			}else if(val == 1) {
				return "生效";
			}
		}

  /* UTF8UrlEncode(input)*/  
 function UTF8UrlEncode(input){   
   
         var output = "";   
   
         var currentChar = '';   
   
         for(var counter = 0; counter < input.length; counter++){   
   
             currentChar = input.charCodeAt(counter);   
   
             if((0 <= currentChar) && (currentChar <= 127))   
   
                 output = output + UTF8UrlEncodeChar(currentChar);   
   
             else  
                 //output = output + encodeURIComponent(input.charAt(counter));   
   				 output = output + input.charAt(counter);   
   
         }   
   
         var reslut = output.toUpperCase();   
         return reslut.replace(/%26/, "%2526");    
     }   
   
     
   
     function UTF8UrlEncodeChar(input){   
   
         if(input <= 0x7F) return "%" + input.toString(16);   
   
         var leadByte = 0xFF80;   
   
         var hexString = "";   
   
         var leadByteSpace = 5;   
   
         while(input > (Math.pow(2, leadByteSpace + 1) - 1)){   
   
             hexString = "%" + ((input & 0x3F) | 0x80).toString(16) + hexString;   
   
             leadByte = (leadByte >> 1);   
   
             leadByteSpace--;   
   
             input = input >> 6;   
   
         }   
   
         return ("%" + (input | (leadByte & 0xFF)).toString(16) + hexString).toUpperCase();   
   
     }  
     
     
   String.prototype.trim=function(){
　　 return this.replace(/(^\s*)|(\s*$)/g, "");
　　}
 
 /*end*/  

		function showRecovery(){
    	
			var recordIdList = getCheckedIdGroupNameList();
			var num = recordIdList.length;
			
			var message = "确认恢复到信产部最新级别？";
			if(num == 0){
				message = "将全部已干涉项恢复到信产部最新级别<br>本操作不可恢复，请谨慎操作";					
			}
    	
			Ext.MessageBox.show({
	                title: '预览效果',
	                msg: message ,
	                buttons: Ext.MessageBox.YESNO,
	                icon: Ext.MessageBox.QUESTION,
	                fn: function(btnId){
	                    if(btnId == 'yes'){
	                    	Ext.MessageBox.show({
			                title: '预览效果',
			                msg: message ,
			                buttons: Ext.MessageBox.YESNO,
			                icon: Ext.MessageBox.QUESTION,
			                fn: function(btnId1){
				                	 if(btnId1	 == 'yes'){
				                	 	/************/
										Ext.Ajax.request({
											url : 'frontWebpage.do?method=recoveryRecord',
											params : {recordIdList : recordIdList.toString()},
											method : 'GET',
											success : function(response,options){
												
												var result = Ext.util.JSON.decode(response.responseText);
												if(result.success){
													//服务器端数据成功删除后，同步删除客户端列表中的数据
													store.load({params:{start:0, limit:50}});
													Ext.MessageBox.show({
											           title: '提示',
											           msg: '共选中' + result.selectedNumber + '条记录;<br>成功恢复信产部有效记录' + result.recoveryNumber + '条;<br>其它类别无效记录'+result.invalidNumber+'条',
											           buttons: Ext.MessageBox.OK,
											           icon: Ext.MessageBox.INFO
											        });
												}else{
													Ext.Msg.alert('提示','恢复记录失败！');
												}
											},
											failure : function(response,options){
												msgTip.hide();
												Ext.Msg.alert('提示','恢复记录失败！');
											}
										});	
					
										/**************/			                	 
				                	 
				                	 }
			                
			                	}
			                })
	                    	
	                    
	                    

						}else{
	                    	//   Ext.getCmp('btn_submmit').disable();
	                	}
	                }
	         })   		
    	
    	}

    	//返回搜狗百度的搜索结果页链接
		function sogoubaidulink(val){
		    val = val.replace("\r","");
		    val = val.trim();
			//baiduVal = encodeURI(val.replace(" ","+"));
			var link = '<a target=_blank href=http:\/\/www.sogou.com\/web?query='+encodeURIComponent(val)+'>搜狗</a>&nbsp;&nbsp;'
				+'<a target=_blank href=http:\/\/www.baidu.com\/s?wd='+UTF8UrlEncode(val)+'>百度</a>';
			return link;
    	}
    	//返回nake屏蔽平台链接
		function nakelink(val){
			var link = '<a target="_blank" href="http:\/\/10.12.131.227\/nake\/policy.jsp?query='+val+'&num=100">'+val+'</a>';
			return link;
    	}
		//将 是否封禁首页和是否留首封站 的代码解析成 文本,并为新值着色
		function booleantag_confirm(val){
	        if(val == 1){
	            return '<span style="color:red;">是</span>';
	        }else if(val == 0){
	            return '<span style="color:red;">否</span>';
	        }else
		        return '';
    	}
		function confirm(val){
	        return '<span style="color:red;">'+val+'</span>';
    	}
    	//创建分页工具栏
    	var pagingBar = new Ext.PagingToolbar({
        	id : 'pagingBar',
	        pageSize: 50,
	        store: store,
	        displayInfo: true,
	        displayMsg: '<strong><font color="red">封禁总数：${blocknum}</font></strong>&nbsp;&nbsp;显示 {0} - {1} , 共 {2} 条记录    ',
	        emptyMsg: "没有任何记录",
	        items:[{text : '导出',iconCls:'option',handler : exportExcel}]
    	});
		//创建Grid表格组件
		var cb = new Ext.grid.CheckboxSelectionModel();
		//创建Grid表格组件
		var popupCb = new Ext.grid.CheckboxSelectionModel();
		//创建过滤器
		var filters = new Ext.grid.GridFilters({
		  filters:[
		    {type: 'numeric',  dataIndex: 'id'},
		    {type: 'string',  dataIndex: 'url'},
		    {type: 'boolean', dataIndex: 'tag_block'},
		    {type: 'boolean', dataIndex: 'tag_reversible'},
		    {
		      type: 'list',  
		      dataIndex: 'extra_attr', 
		      options: ['无价值', '死链', '非中文'],
		      phpMode: true
		    },
		    {type: 'string',  dataIndex: 'user'},
		    {type: 'date',  dataIndex: 'sub_date'},
		    {type: 'string',  dataIndex: 'info'}
		]});


		//开始查询表单部分
		var dr = new Ext.FormPanel({
	    	labelWidth: 125,
	        frame: true,
	  	  	bodyStyle:'padding:5px 5px 0',
	  	  	labelAlign: 'left',
	  	  	autoScroll: true,
			width: 960,
	        defaults: {width: 175},
	      	//增加表单键盘事件
	        keys:[
	         {
	             key: [10,13],
	             fn:query
	         } ],
	         items: [{
			        	xtype:'textfield',
						width : 400,
						id : 'query_keyword',
						name : 'query_keyword',
						fieldLabel:'关键词'
			        },
			        {
			            layout:'column',
			            width : 800,
			            border:false,
			            items:[
			                {
			                    columnWidth:.5,
			                    layout: 'form',
			                    border:false,
			                    items: [{
			                        xtype:'radio',
			                        fieldLabel:'查找方式',
			                        checked: true,
			                        boxLabel:'精确查找',
			                        name:'query_matchType',
			                        anchor:'100%',
			                        inputValue: 1
			                    }]
			                },
			                {   
			                    columnWidth:.5,
			                    layout: 'form',
			                    border:false,
			                    items: [{
			                        xtype:'radio',
			                        boxLabel:'模糊查找',
			                        hideLabel: true,
			                        name:'query_matchType',
			                        anchor:'100%',
			                        inputValue: 0
			                    }]
			                }
			              ]
		            },{
			            layout:'column',
			            width : 930,
			            border:false,
			            items:[
			                    {
			                        layout:'form',
			                        columnWidth:.36,
			                        border:false,
			                        items:[
			                            {
			                                xtype:'combo',
			                                fieldLabel:'限制级别',
			                                name : 'query_type',
			                                allowBlank : false,
			                                blankText : '限制级别为必填项',
			                                hiddenName : 'query_type',
			                                store: Ext.exampledata.query_masklevel_list,
			                                typeAhead: true,
			                                forceSelection: true,
			                                triggerAction: 'all',
			                                emptyText:'请选择其中一种...',
			                                selectOnFocus:true,
			                                value: '-100'
			                            }
			                          ]
			                    },
			                    {
			                        layout:'form',
			                        columnWidth:.3,
			                        border:false,
			                        items:[
			                                {
			                                    xtype:'combo',
			                                    fieldLabel:'匹配规则',
			                                    name : 'query_match_type',
			                                    allowBlank : false,
			                                    blankText : '匹配规则为必填项',
			                                    hiddenName : 'query_match_type',
			                                    width :130,
			                                    store: Ext.exampledata.query_matchrule_list,
			                                    typeAhead: true,
			                                    forceSelection: true,
			                                    triggerAction: 'all',
			                                    emptyText:'请选择其中一种...',
			                                    selectOnFocus:true,
			                                    value: '-100'
			                                }
			                            ]
			                    },
			                    {
			                        layout:'form',
			                        columnWidth:.3,
			                        border:false,
			                        items:[
			                                {
			                                	xtype:'combo',
			                                	fieldLabel:'设定分类',
			                                	name : 'query_groupname',
			                                	allowBlank : false,
			                                	blankText : '分类为必填项',
			                                	hiddenName : 'query_groupname',
			                                	width :130,
			                                	store: query_groupStore,
			                                	tpl: '<tpl for="."><div ext:qtip="[{keyword}] {note}" class="x-combo-list-item">{keyword}</div></tpl>',
			                                	displayField:'keyword',
			                                	valueField: 'id',
			                                	typeAhead: true,
			                                	forceSelection: true,
			                                	triggerAction: 'all',
			                                	emptyText:'请选择其中一种...',
			                                	selectOnFocus:true,
			                                	value: '全部',
			                                	mode: 'remote'
			                                }
			                            ]
			                    }
			                ]
			        },
		        	{
					    layout:'column',
					    width : 930,
					    border:false,
					    items:[
								{
								    layout:'column',
								    columnWidth:.33,
								    border:false,
								    items:[
								        {
								            columnWidth:.6,
								            layout: 'form',
								            border:false,
								            items: [{
								                xtype: 'radio',
								                fieldLabel: '仅限北京生效:',
								                labelSeparator: '',
								                checked : true,
								                labelStyle: 'width: 95px;',
								                boxLabel: '全部',
								                name: 'query_beijing',
								                inputValue: -100
								            }]
								        },
								        {   
								            columnWidth:.2,
								            layout: 'form',
								            border:false,
								            items: [{
								                xtype: 'radio',
								                fieldLabel: '',
								                hideLabel: true,
								                labelSeparator: '',
								                boxLabel: '是',
								                name: 'query_beijing',
								                inputValue: 1
								            }]
								        },
								        {   
								            columnWidth:.2,
								            layout: 'form',
								            border:false,
								            items: [{
								                xtype: 'radio',
								                fieldLabel: '',
								                hideLabel: true,
								                labelSeparator: '',
								                boxLabel: '否',
								                name: 'query_beijing',
								                inputValue: 0
								            }]
								        }
								      ]
								}
//								,
//				                    {
//				                        layout:'form',
//				                        columnWidth:.5,
//				                        border:false,
//				                        items:[
//				                            {
//												xtype:'combo',
//												fieldLabel:'限制hint:',
//												name : 'query_enhint',
//												allowBlank : false,
//												blankText : '限制级别为必填项',
//												hiddenName : 'query_enhint',
//											    store: Ext.exampledata.query_encombox_list,
//											    typeAhead: true,
//										        forceSelection: true,
//											    triggerAction: 'all',
//											    emptyText:'请选择其中一种...',
//											    selectOnFocus:true,
//											    value:-100
//				                            }
//				                          ]
//				                    },								
//				                    {
//				                        layout:'form',
//				                        columnWidth:.5,
//				                        border:false,
//				                        items:[
//				                            {
//												xtype:'combo',
//												fieldLabel:'限制sugg:',
//												name : 'query_ensugg',
//												allowBlank : false,
//												blankText : '限制级别为必填项',
//												hiddenName : 'query_ensugg',
//											    store: Ext.exampledata.query_encombox_list,
//											    typeAhead: true,
//										        forceSelection: true,
//											    triggerAction: 'all',
//											    emptyText:'请选择其中一种...',
//											    selectOnFocus:true,
//											    value: -100
//				                            }
//				                          ]
//				                    }									
															
							]
		        	},
			        {
	        	    layout:'column',
	        	    width : 620,
	        	    border:false,
	        	    items:[
	        	        {
	        	            columnWidth:.5,
	        	            layout: 'form',
	        	            border:false,
	        	            items: [{
	        	            	xtype:'textfield',
	    						id : 'query_start_time_1',
	    						name : 'query_start_time_1',
	    						fieldLabel:'生效日期',
	    						cls:'Wdate'
	        	            }]
	        	        },
	        	        {
	        	            columnWidth:.5,
	        	            layout: 'form',
	        	            border:false,
	        	            items: [{
	        	            	xtype:'textfield',
	    						id : 'query_start_time_2',
	    						name : 'query_start_time_2',
	    						fieldLabel:'到',
	    						cls:'Wdate'
	        	            }]
	        	        }
	        	      ]
	        	},
	        	{
	        	    layout:'column',
	        	    width : 620,
	        	    border:false,
	        	    items:[
	        	        {
	        	            columnWidth:.5,
	        	            layout: 'form',
	        	            border:false,
	        	            items: [{
	        	            	xtype:'textfield',
	    						id : 'query_end_time_1',
	    						name : 'query_end_time_1',
	    						fieldLabel:'截止日期',
	    						cls:'Wdate'
	        	            }]
	        	        },
	        	        {
	        	            columnWidth:.5,
	        	            layout: 'form',
	        	            border:false,
	        	            items: [{
	        	            	xtype:'textfield',
	    						id : 'query_end_time_2',
	    						name : 'query_end_time_2',
	    						fieldLabel:'到',
	    						cls:'Wdate'
	        	            }]
	        	        }
	        	      ]
	        	},{
		            layout:'column',
		            width : 930,
		            border:false,
		            items:[
		                    {
		                        layout:'form',
		                        columnWidth:.6,
		                        border:false,
		                        items:[
		                            {
		                                xtype:'textfield',
                                        width : 400,
                                        id : 'query_note',
                                        name : 'query_note',
                                        fieldLabel:'描述'
		                            }
		                          ]
		                    },
		                    {
		                        layout:'form',
		                        columnWidth:.4,
		                        border:false,
		                        items:[
		                                {
		                                    xtype:'textfield',
                                            id : 'query_submitter',
                                            name : 'query_submitter',
                                            fieldLabel:'提交人'
		                                }
		                            ]
		                    }
		                ]
		        }],
			buttons:[
				{
					text : '查询',
					handler : function(){
						query(true);
					}
				},
				{
					text : '返回',
					handler : function(){
						query(false);
					}
				}
			]
	      });

		
		var recordGrid = new Ext.grid.GridPanel({
			applyTo : 'grid-div',
			tbar : toolbar,
			frame:true,
			loadMask: true,
			//plugins: filters,
			autoScroll: true,
			//width: 960,
			autoWidth:true,
			store: store,
			viewConfig : {
				autoFill : true
			},
			sm : cb,
			columns: [//配置表格列
				cb,
				{header: "关键词", width: 100, dataIndex: 'keyword', renderer: nakelink, sortable: true},
				{header: "结果链接", width: 60, dataIndex: 'keyword', renderer: sogoubaidulink},
				{header: "限制级别", width: 130, dataIndex: 'type', renderer: typeRenderer, sortable: true},
				{header: "匹配规则", width: 100, dataIndex: 'match_type', renderer: match_typeRenderer, sortable: true},
				{header: "分类", width: 60, dataIndex: 'groupname', renderer: groupname_tag, sortable: true},
				
				{header: "提交者", width: 100, dataIndex: 'submitter', sortable: true},
				{header: "summary生效日期", width: 100, dataIndex: 'validate_time', renderer: Ext.util.Format.dateRenderer('Y-m-d H:i:s'), sortable: true},			
				{header: "生效日期", width: 100, dataIndex: 'start_time', renderer: Ext.util.Format.dateRenderer('Y-m-d H:i:s'), sortable: true},
				{header: "截止日期", width: 100, dataIndex: 'end_time', renderer: Ext.util.Format.dateRenderer('Y-m-d H:i:s') , sortable: true},

				//{header: "限制扩展hint", width: 60, dataIndex: 'extendhint', renderer: booleantag, sortable: true},
				{header: "仅限北京 ", width: 60, dataIndex: 'beijing', renderer: booleantag, sortable: true},
//				{header: "限制hint", width: 60, dataIndex: 'enhint', renderer: en_Renderer, sortable: true},
//				{header: "限制sugg", width: 60, dataIndex: 'ensugg',renderer: en_Renderer, sortable: true},
				{header: "描述", width: 60, dataIndex: 'note', sortable: true},
				{header: "sogou干涉级别", width: 60, dataIndex: 'sogou_rank', renderer: sogouRankRenderer,sortable: true},
				{header: "sogou干涉时间", width: 60, dataIndex: 'start_date', sortable: true},
				<%if(UmisAction.UMIS_FRONT_USE_NEW_SYNC){%>
				{header: "信产部状态", width: 60, dataIndex: 'status', renderer:statusRenderer, sortable: true},
				
				{header: "快速同步状态", width: 75, dataIndex: 'sync_status',sortable: true,renderer:function(value,cellmeta,record){                  
                    if(value==1){cellmeta.attr="style=background-color:red";return "新增";}
                    if(value==2){cellmeta.attr="style=background-color:yellow";return "待同步";}
                    if(value==3){
                        var sync_modify_time = record.data['sync_modify_time'];
                        cellmeta.attr="style=background-color:yellow";
                        return "同步中";}
                    if(value==4){cellmeta.attr="style=background-color:green";return "同步成功";}
                    if(value==5){cellmeta.attr="style=background-color:red";return "同步失败";}
                    
                    var sync_modify_time = record.data['sync_modify_time'];
                    //return Ext.util.Format.date(sync_modify_time, 'Y-m-d H:i:s');
                    cellmeta.attr="style=background-color:red";
                    return "数据错误";}},
                {header: "同步信息", width: 75, dataIndex: 'sync_message'},
                {header: "同步修改时间", width: 75, dataIndex: 'sync_modify_time', renderer: Ext.util.Format.dateRenderer('Y-m-d H:i:s')}
				<%}else{%>
				{header: "信产部状态", width: 60, dataIndex: 'status', renderer:statusRenderer, sortable: true}
				<%}%>
			],
			
	        // paging bar on the bottom
	        bbar: pagingBar
			
		});
		// trigger the data store load
    	store.load({params:{start:0, limit:50}});

		/*为弹出选择窗口准备的grid*/
    	var popupGrid = new Ext.grid.GridPanel({
    		autoHeight: true,
			tbar : popupToolbar,
			frame:true,
			loadMask: true,
			store: popupStore,
			viewConfig : {
				autoFill : true
			},
			sm : popupCb,
			columns: [//配置表格列
				popupCb,
				{header: "关键词", width: 100, dataIndex: 'keyword'},
				{header: "限制级别", width: 130, dataIndex: 'type', renderer: typeRenderer},
				{header: "匹配规则", width: 100, dataIndex: 'match_type', renderer: match_typeRenderer},
				{header: "分类", width: 60, dataIndex: 'groupname', renderer: groupname_tag},
				{header: "生效日期", width: 100, dataIndex: 'start_time_string', renderer: Ext.util.Format.dateRenderer('Y-m-d H:i:s')},
				{header: "截止日期", width: 100, dataIndex: 'end_time_string', renderer: Ext.util.Format.dateRenderer('Y-m-d H:i:s')},
				
				{header: "<font color=red>限制级别</font>", width: 50, dataIndex: 'confirm_type', renderer: typeRenderer},
				{header: "<font color=red>匹配规则</font>", width: 70, dataIndex: 'confirm_match_type', renderer: match_typeRenderer},
				{header: "<font color=red>分类</font>",width: 60, dataIndex: 'confirm_groupname', renderer: groupname_tag},
				{header: "<font color=red>生效日期</font>", width: 100, dataIndex: 'confirm_start_time_string'},
				{header: "<font color=red>截止日期</font>", width: 100, dataIndex: 'confirm_end_time_string'}
			]
		});
		
		/*提示信息form展示*/
		var infoForm = new Ext.FormPanel({
			labelSeparator : ":",
			frame:true,
			border:false,
			autoHeight: true,
			items : [
						{
							xtype:'textfield',
							width : 50,
							height : 20,
							id: 'ikNumber',
							name : 'ikNumber',
							fieldLabel:'总共处理记录',
							disabled:true
				        },
				        {
							xtype:'textfield',
							width : 50,
							height: 20,
							id : 'existNumber',
							name : 'existNumber',
							fieldLabel:'命中前台记录',
							disabled:true
						},
						{
							xtype:'textfield',
							width : 50,
							height : 20,
							id : 'processNum',
							name : 'processNum',
							fieldLabel:'新增有效记录',
							disabled:true
				        },
				        {
							xtype:'textarea',
							width : 500,
							height: 150,
							id : 'existKeyword',
							name : 'existKeyword',
							fieldLabel:'新增有效记录数据<font color=red>(每一行为一条记录)</font>',
							disabled:true
						},
						{
							xtype:'textfield',
							width : 50,
							height: 20,
							id : 'xcbExistNumber',
							name : 'xcbExistNumber',
							fieldLabel:'命中信产部记录',
							disabled:true
						},
						{
							xtype:'textarea',
							width : 500,
							height: 150,
							id : 'xcbExistKeyword',
							name : 'xcbExistKeyword',
							fieldLabel:'命中信产部记录数据<font color=red>(每一行为一条记录)</font>',
							disabled:true
						}
			]
		});
		
		
		var inputForm = new Ext.FormPanel({
		    id:'myinputForm',
			labelSeparator : ":",
			frame:true,
			border:false,
			autoHeight: true,
			items : [
						{
							xtype:'textarea',
							width : 500,
							height : 150,
							name : 'keyword',
							cls:'tabclass',
							fieldLabel:'<font color=red>*</font>关键词<br><font color=red>（输入条目上限为100条，每条归一化后长度超过255为不合法）</font>',
							allowBlank : false
				        },
						{
				            layout:'column',
				            width : 850,
				            border:false,
				            items:[
				                    {
				                        layout:'form',
				                        columnWidth:.5,
				                        border:false,
				                        items:[
				                            {
												xtype:'combo',
												fieldLabel:'<font color=red>*</font>限制级别',
												name : 'type',
												id:'add_type',
												allowBlank : false,
												blankText : '限制级别为必填项',
												hiddenName : 'type',
												hiddenId:'addtype',
											    store: Ext.exampledata.masklevel_list,
											    typeAhead: true,
										        forceSelection: true,
											    triggerAction: 'all',
											    emptyText:'请选择其中一种...',
											    selectOnFocus:true,
											    value: 4
				                            }
				                          ]
				                    },
				                    {
				                        layout:'form',
				                        columnWidth:.5,
				                        border:false,
				                        items:[
				                                {
													xtype:'combo',
													fieldLabel:'<font color=red>*</font>匹配规则',
													name : 'match_type',
													allowBlank : false,
													blankText : '匹配规则为必填项',
													hiddenName : 'match_type',
												    store: Ext.exampledata.matchrule_list,
												    typeAhead: true,
											        forceSelection: true,
												    triggerAction: 'all',
												    emptyText:'请选择其中一种...',
												    selectOnFocus:true,
												    value: 4
				                                }
				                            ]
				                    }
				                ]
				        },		        
			        	{
						    layout:'column',
						    width : 850,
						    border:false,
						    items:[
						    	  {
			                        	layout:'form',
				                        columnWidth:.5,
				                        border:false,
				                        items:[
				                                {
													xtype:'combo',
								                	fieldLabel:'<font color=red>*</font>设定分类',
								                	id : 'xcb_groupname',
								                	name : 'groupname',
								                	allowBlank : false,
								                	blankText : '分类为必填项',
								                	hiddenName : 'groupname',
								                	store: groupStore,
								                	tpl: '<tpl for="."><div ext:qtip="[{keyword}] {note}" class="x-combo-list-item">{keyword}</div></tpl>',
								                	displayField:'keyword',
								                	valueField: 'id',
								                	typeAhead: true,
								                	forceSelection: true,
								                	triggerAction: 'all',
								                	emptyText:'请选择其中一种...',
								                	selectOnFocus:true,
								                	value: '无',
								                	mode: 'remote'
				                                }
				                            ]						    
						    		},
						    
						   			{
									    layout:'column',
									    columnWidth:.33,
									    border:false,
									    items:[
									        {   
									            columnWidth:.6,
									            layout: 'form',
									            border:false,
									            items: [{
								                	xtype: 'radio',
								                    fieldLabel: '<font color=red>*</font>仅限北京生效:',
								                    labelSeparator: '',
								                    boxLabel: '是',
								                    name: 'beijing',
								                    inputValue: 1
									            }]
									        },
									        {   
									            columnWidth:.2,
									            layout: 'form',
									            border:false,
									            items: [{
									                xtype: 'radio',
									                fieldLabel: '',
									                hideLabel: true,
									                labelSeparator: '',
									             	checked: true,
									                boxLabel: '否',
									                name: 'beijing',
									                inputValue: 0
									            }]
									        }
									      ]
									}
								]
			        	},
			        	
						{
				            layout:'column',
				            width : 850,
				            border:false,
				            id:"hint_sugg",
				            items:[
				                    {
				                        layout:'form',
				                        columnWidth:.5,
				                        border:false,
				                        items:[
				                            {
												xtype:'combo',
												//xtype:'hidden',
												fieldLabel:'<font color=red>*</font>同时限制hint:',
												name : 'enhint',
												id:'addenhint',
												allowBlank : false,
												blankText : '限制级别为必填项',
												hiddenName : 'enhint',
											    store: Ext.exampledata.encombox_list,
											    typeAhead: true,
										        forceSelection: true,
											    triggerAction: 'all',
											    emptyText:'请选择其中一种...',
											    selectOnFocus:true,
											    value: 0
				                            }
				                          ]
				                    },
				                    {
				                        layout:'form',
				                        columnWidth:.5,
				                        border:false,
				                        items:[
				                                {
													//xtype:'combo',
													xtype:'hidden',
													fieldLabel:'<font color=red>*</font>同时限制sugg:',
													name : 'ensugg',
													id:'addensugg',
													allowBlank : false,
													blankText : '匹配规则为必填项',
													hiddenName : 'ensugg',
												    store: Ext.exampledata.encombox_list,
												    typeAhead: true,
											        forceSelection: true,
												    triggerAction: 'all',
												    emptyText:'请选择其中一种...',
												    selectOnFocus:true,
												    value: 0
				                                }
				                            ]
				                    }
				                ]
				        },	
				        {
				            layout:'column',
				            width : 850,
				            border:false,
				            items:[
				                    {
				                        layout:'form',
				                        columnWidth:.5,
				                        border:false,
				                        items:[
				                            {
												xtype:'combo',
												fieldLabel:'<font color=red>*</font>sogou干涉级别',
												name : 'sogou_rank',
												id:'m_sogouRank',
												hiddenName : 'sogou_rank',
												allowBlank : false,
												blankText : '限制级别为必填项',
											    store: Ext.exampledata.sogouRank_list,
											    typeAhead: true,
										        forceSelection: true,
											    triggerAction: 'all',
											    emptyText:'请选择其中一种...',
											    selectOnFocus:true,
											    value: -2
				                            }
				                          ]
				                    },
				                    {
				                        layout:'form',
				                        columnWidth:.5,
				                        border:false,
				                        items:[
				                                {
												xtype:'combo',
												fieldLabel:'<font color=red>*</font>信产部状态',
												name : 'xcb_status',
												id : 'm_xcbStatus',
												hiddenName : 'status',
												allowBlank : false,
												blankText : '限制级别为必填项',
											    store: Ext.exampledata.status_list,
											    typeAhead: true,
										        forceSelection: true,
											    triggerAction: 'all',
											    emptyText:'请选择其中一种...',
											    selectOnFocus:true,
											    value:2
				                                }
				                            ]
				                    }
				                ]
				        },	
				        {
				            layout:'column',
				            width : 850,
				            border:false,
				            items:[
				                    {
				                        layout:'form',
				                        columnWidth:.5,
				                        border:false,
				                        items:[
				                            {
												xtype:'textfield',
							                	allowBlank : false,
							                	id : 'start_time_string',
												name : 'start_time_string',
												fieldLabel:'<font color=red>*</font>生效日期',
												cls:'Wdate',
												value: getTimeAfterNow(0)
				                            }
				                          ]
				                    },
				                    {
				                        layout:'form',
				                        columnWidth:.5,
				                        border:false,
				                        items:[
				                                {
													xtype:'textfield',
													allowBlank : false,
													id : 'end_time_string',
													name : 'end_time_string',
													fieldLabel:'<font color=red>*</font>截止日期',
													cls:'Wdate',
													value: '2050-01-01 00:00:00'
				                                }
				                            ]
				                    }
				                ]
				        },	
				        
				         {
				            layout:'column',
				            width : 850,
				            border:false,
				            items:[
				                    {
				                        layout:'form',
				                        columnWidth:.5,
				                        border:false,
				                        items:[
				                            {
												xtype:'textfield',
							                	allowBlank : false,
							                	id : 'validate_time_string',
												name : 'validate_time_string',
												fieldLabel:'<font color=red>*</font>summary日期',
												cls:'Wdate',
												value: '1970-01-01 00:00:00'
				                            }
				                          ]
				                    }
				                    ,{
				                        layout:'form',
				                        columnWidth:.5,
				                        border:false,
				                        items:[
				                                {
												xtype:'textfield',
							                	allowBlank : false,
							                	id : 'm_startDateStr',
												name : 'startDateStr',
												fieldLabel:'<font color=red>*</font>sogou干涉时间',
												cls:'Wdate',
												value: getTimeAfterNow(30)								
				                                }
				                            ]
				                    }
				                ]
				        },				        	
						
						{
							xtype:'textarea',
							width : 500,
							name : 'note',
							maxLength : 255,
							cls:'tabclass',
							maxLengthText : '描述信息最大支持255个字符',
							fieldLabel:'描述'
						},{
							xtype:'hidden',
							name : 'id'
						}			
			],
			buttons:[
				{
					text : '提交',
					handler : submitForm
				},
				{
					text : '关闭',
					handler : function(){
						win.hide();
					}
				}
			]
		});
		/*创建批量修改表单*/
		var batchForm = new Ext.form.FormPanel({
			labelSeparator : ":",
			frame:true,
			border:false,
			autoHeight: true,
			items : [
				{
					xtype:'combo',
					fieldLabel:'限制级别',
					name : 'batch_type',
					hiddenName : 'batch_type',
				    store: Ext.exampledata.batch_masklevel_list,
				    typeAhead: true,
			        forceSelection: true,
				    triggerAction: 'all',
				    emptyText:'请选择限制级别...',
				    selectOnFocus:true,
				    value: '保持原值'
				},{
					xtype:'combo',
					fieldLabel:'匹配规则',
					name : 'batch_match_type',
					hiddenName : 'batch_match_type',
				    store: Ext.exampledata.batch_matchrule_list,
				    typeAhead: true,
			        forceSelection: true,
				    triggerAction: 'all',
				    emptyText:'请选择匹配规则...',
				    selectOnFocus:true,
				    value: '保持原值'
				},{
					xtype:'combo',
                	fieldLabel:'设定分类',
                	name : 'batch_groupname',
                	hiddenName : 'batch_groupname',
                	store: batch_groupStore,
                	tpl: '<tpl for="."><div ext:qtip="[{keyword}] {note}" class="x-combo-list-item">{keyword}</div></tpl>',
                	displayField:'keyword',
                	valueField: 'id',
                	typeAhead: true,
                	forceSelection: true,
                	triggerAction: 'all',
                	emptyText:'请选择分类...',
                	value: '保持原值',
                	selectOnFocus:true,
                	mode: 'remote'
				},
//	            {
//					xtype:'combo',
//					fieldLabel:'同时限制hint:',
//					name : 'batch_enhint',
//					allowBlank : false,
//					blankText : '限制级别为必填项',
//					hiddenName : 'batch_enhint',
//				    store: Ext.exampledata.batch_encombox_list,
//				    typeAhead: true,
//			        forceSelection: true,
//				    triggerAction: 'all',
//				    emptyText:'请选择其中一种...',
//				    selectOnFocus:true,
//				   	value: '保持原值'
//	            },
				
				/*
				{
					xtype:'combo',
					fieldLabel:'限制扩展hint',
					name : 'batch_extendhint',
					hiddenName : 'batch_extendhint',
				    store: Ext.exampledata.batch_yesno,
				    typeAhead: true,
			        forceSelection: true,
				    triggerAction: 'all',
				    emptyText:'请选择限制扩展hint...',
				    value: '保持原值',
				    selectOnFocus:true
				},
				*/
				{
					xtype:'combo',
					fieldLabel:'仅限北京生效',
					name : 'batch_beijing',
					hiddenName : 'batch_beijing',
				    store: Ext.exampledata.batch_yesno,
				    typeAhead: true,
			        forceSelection: true,
				    triggerAction: 'all',
				    emptyText:'请选择仅限北京生效...',
				    value: '保持原值',
				    selectOnFocus:true
				},
//				{
//					xtype:'combo',
//					fieldLabel:'同时限制sugg:',
//					name : 'batch_ensugg',
//					allowBlank : false,
//					blankText : '匹配规则为必填项',
//					hiddenName : 'batch_ensugg',
//				    store: Ext.exampledata.encombox_list,
//				    typeAhead: true,
//			        forceSelection: true,
//				    triggerAction: 'all',
//				    emptyText:'请选择其中一种...',
//				    selectOnFocus:true,
//				    value: '保持原值'
//                },
				{
                    xtype:'textfield',
                    id : 'batch_validate_time_string',
                    name : 'batch_validate_time_string',
                    fieldLabel:'Summary日期',
                    cls:'Wdate'
                },{
                	xtype:'textfield',
                	id : 'batch_start_time_string',
					name : 'batch_start_time_string',
					fieldLabel:'生效日期',
					cls:'Wdate'
                },{
					xtype:'textfield',
					id : 'batch_end_time_string',
					name : 'batch_end_time_string',
					fieldLabel:'截止日期',
					cls:'Wdate'
		        },{
					xtype:'textarea',
					width : 300,
					name : 'batch_note',
					maxLength : 255,
					maxLengthText : '描述信息最大支持255个字符',
					fieldLabel:'描述<br><font color=red>(日期与描述留空<br>则"保持原值")</font>'
				},{
					xtype:'hidden',
					name : 'batch_ids',
					id : 'batch_ids'
				}
			],
		    buttons:[
		        {
		            text : '提交',
		            handler: function() { 
				    	 if( batchForm.form.isValid() ){

				    		ids = document.getElementById("batch_ids");
				    		ids.value = getCheckedIdList();
				    		//alert(document.getElementById("batch_ids").value);
					    	
					    	batchForm.getForm().submit({
						    	url: "frontWebpage.do?method=batchModifyFrontWebpage",
						    	waitMsg : '正在上传数据请稍后',//提示信息
								waitTitle : '提示',//标题 
						        success: function(form, action){
					    			batchWin.hide();
					    			store.load({params:{start:0, limit:50}});
						        }, 
						        failure: function(form, action){
						        	batchWin.hide();
									var failcause = action.result.cause;
									Ext.MessageBox.show({
							           title: '提示',
							           msg: '批量操作网页前台限制词记录失败。原因是:<br><br>'+failcause,
							           buttons: Ext.MessageBox.OK,
							           icon: Ext.MessageBox.ERROR
							        });
						           store.load({params:{start:0, limit:50}});
						        }
					      	}); 
				    	 }//if( batchForm.form.isValid() ){
				     }
		        },
		        {
		            text : '关闭',
		            handler : function(){
		        		batchWin.hide();
		            }
		        }
		    ]
		});
		//删除原有窗口对象
		win = Ext.getCmp('input_window');
		if(win){
			win.destroy();
		}
		//删除原有窗口对象
		batchWin = Ext.getCmp('batchinput_window');
		if(batchWin){
			batchWin.destroy();
		}
		
		var win = new Ext.Window({
			id:'input_window',
			layout:'fit',
		    width:380,
		    closeAction:'hide',
			resizable : false,
			shadow : true,
			modal :true,
		    closable:true,
		    bodyStyle:'padding:5 5 5 5',
		    animCollapse:true,
		    constrain:true,
			items:[inputForm]
		});
		win.width = 850;
//		win.height = 490;
		
		//创建批量弹出窗口
		var batchWin = new Ext.Window({
			id: 'batchinput_window',
			layout:'fit',
		    width:470,
		    closeAction:'hide',
			resizable : false,
			shadow : true,
			modal :true,
		    closable:true,
		    bodyStyle:'padding:5 5 5 5',
		    animCollapse:true,
			items:[batchForm]
		});
		batchWin.width = 470;
//		batchWin.height = 380;
		
		//创建显示grid的弹出窗口
		var popupWin = new Ext.Window({
			maximizable : true,
			y: 50,
			autoScroll: true,
			layout:'fit',
//			height  : 500,
		    width:1000,
		    closeAction:'hide',
			resizable : false,
			shadow : true,
			modal :true,
		    closable:true,
		    bodyStyle:'padding:5 5 5 5',
		    animCollapse:true,
			items:[popupGrid,infoForm]
		});
		popupWin.width = 1000;
//		popupWin.height = 500;
		
		//显示新建网页前台限制词记录窗口
		function showAdd(){
			inputForm.form.reset();
			inputForm.isAdd = true;
			Ext.getCmp("hint_sugg").show();
			win.setTitle("新增记录信息");
			win.show();
			bindingPicker();
			bindingKeyDown();
			bindingOnChange();
			Ext.getCmp('m_startDateStr').hide();
			Ext.getCmp('m_sogouRank').hide();
			Ext.getCmp('m_xcbStatus').hide();
			Ext.getCmp('m_startDateStr').getEl().up('.x-form-item').setDisplayed(false);
			Ext.getCmp('m_sogouRank').getEl().up('.x-form-item').setDisplayed(false);
			Ext.getCmp('m_xcbStatus').getEl().up('.x-form-item').setDisplayed(false);
		}
		String.prototype.replaceAll  = function(s1,s2){    
			return this.replace(new RegExp(s1,"gm"),s2);    
		}
		//显示批量修改表记录窗口
		function showBatchModify(list){
			var keyword_string = list.toString().replaceAll(",","\n");
			//alert(keyword_string);
			batchForm.form.reset();
			batchForm.isAdd = true;
			batchWin.setTitle("批量修改记录信息");
			batchWin.show();
			bindingKeyDown();
			Ext.get('batch_start_time_string').on('click',function(){
				WdatePicker({skin:'ext',dateFmt:'yyyy-MM-dd HH:mm:ss'});
			});
			Ext.get('batch_end_time_string').on('click',function(){
				WdatePicker({skin:'ext',dateFmt:'yyyy-MM-dd HH:mm:ss',minDate: getTimeAfterNow(0)});
			});
			Ext.get('batch_validate_time_string').on('click',function(){
                WdatePicker({skin:'ext',dateFmt:'yyyy-MM-dd HH:mm:ss',minDate: getTimeAfterNow(0)});
            });
		}
		//显示修改网页前台限制词记录窗口
		function showModify(){
			//获得选中记录的id
			var recordList = getCheckedIdList();
			var num = recordList.length;
			
			//获得选中记录的groupname
			var gnList = getCheckGroupNameList();
			var batchModify = false;
			
			//获得选中一条记录的groupname
			var selModel = recordGrid.getSelectionModel();
			var srecord=selModel.getSelected();
			var sgroupname = srecord.data.groupname;
			if(num > 1){
				for(var k=0;k<num;k++){
					var srecordId = gnList[k];
					var xcbId = <%=groupnameId%>;
					if(srecordId == xcbId){
						batchModify = true;
					}
				}
				if(batchModify == true ){
					if(<%=(user.equals("wangxinfa@sogou-inc.com")
					        ||user.equals("longsiliang@sogou-inc.com")
					        ||user.equals("wangfugang@sogou-inc.com")
					        ||user.equals("haolong@sogou-inc.com")
					        ||user.equals("fangyouling@sogou-inc.com")) %>){
						showBatchModify(recordList);
					}else{
						Ext.MessageBox.show({
							title: '提示',
					        msg: '所选记录中含有信产部的数据，您的权限不够，不能修改!',
					        buttons: Ext.MessageBox.OK,
					        icon: Ext.MessageBox.INFO
						});
					}
				}else {
					showBatchModify(recordList);
				}
			}else if(num==1 && sgroupname == <%=groupnameId%>){
				if(<%=(user.equals("wangxinfa@sogou-inc.com")
				        ||user.equals("longsiliang@sogou-inc.com")
				        ||user.equals("wangfugang@sogou-inc.com")
				        ||user.equals("haolong@sogou-inc.com")
                        ||user.equals("fangyouling@sogou-inc.com")) %>){
					inputForm.isAdd = false;					
					win.setTitle("修改记录信息");
					win.show();
					bindingPicker();
					bindingKeyDown();
					var recordId = recordList[0];
					loadForm(recordId);
					Ext.getCmp('m_startDateStr').getEl().up('.x-form-item').setDisplayed(true);
					Ext.getCmp('m_sogouRank').getEl().up('.x-form-item').setDisplayed(true);
					Ext.getCmp('m_xcbStatus').getEl().up('.x-form-item').setDisplayed(true);
					Ext.getCmp('m_startDateStr').show();
					Ext.getCmp('m_sogouRank').show();
					Ext.getCmp('m_xcbStatus').show();
				}else{
					Ext.MessageBox.show({
						title: '提示',
				        msg: '此词语属于信产部类别词语，您的权限不够，不能修改!',
				        buttons: Ext.MessageBox.OK,
				        icon: Ext.MessageBox.INFO
					});
				}
			}else if(num == 1 && sgroupname != <%=groupnameId%>){
				inputForm.isAdd = false;				
				Ext.getCmp("hint_sugg").hide();
				win.setTitle("修改记录信息");
				win.show();
				bindingPicker();
				bindingKeyDown();
				var recordId = recordList[0];
				loadForm(recordId);
				Ext.getCmp('m_startDateStr').getEl().up('.x-form-item').setDisplayed(false);
				Ext.getCmp('m_sogouRank').getEl().up('.x-form-item').setDisplayed(false);
				Ext.getCmp('m_xcbStatus').getEl().up('.x-form-item').setDisplayed(false);
				Ext.getCmp('m_startDateStr').hide();
				Ext.getCmp('m_sogouRank').hide();
				Ext.getCmp('m_xcbStatus').hide();
			}
			
			
		}
		function reload(){
            store.load({params:{start:0, limit:pageSize}});
        }
        function doSync(){
            synchronize();
            new_synchronize(reload);
        }
        function doCancel(){
            cancel_synchronize(reload);
        }
        
		function bindingPicker(){
			Ext.get('validate_time_string').on('click',function(){
				WdatePicker({skin:'ext',dateFmt:'yyyy-MM-dd HH:mm:ss'});
			});
			Ext.get('start_time_string').on('click',function(){
				WdatePicker({skin:'ext',dateFmt:'yyyy-MM-dd HH:mm:ss'});
			});
			Ext.get('end_time_string').on('click',function(){
				WdatePicker({      skin:'ext',    dateFmt:'yyyy-MM-dd HH:mm:ss',    minDate: getTimeAfterNow(0)    });
			});
			Ext.get('m_startDateStr').on('click',function(){
				WdatePicker({      skin:'ext',    dateFmt:'yyyy-MM-dd HH:mm:ss',    minDate: getTimeAfterNow(0)    });
			});
			
		}
      
        function bindingKeyDown(){      
            Ext.each(Ext.query(".tabclass"),function(item){
                item.onkeydown=function(evt){
                    var keycode = getKeycode(evt);
                    if(keycode==9){
                        stopEvent(evt);
                        insertAtCursor(item,'\t');
                    }
                }
            });
        }
        function bindingOnChange(){
            Ext.getCmp("add_type").addListener('select',function(box,record,index){
                var addtype=document.getElementById("addtype");
                var value = addtype.value;
                if(value=='-1'){
                    Ext.getCmp("addenhint").setValue("1");
                    Ext.getCmp("addensugg").setValue("1");
                }
            });
        }
		//显示删除网页前台限制词记录对话框
		function showDelete(){
			var recordIdList = getCheckedIdList();
			var num = recordIdList.length;
			
			var gnList = getCheckGroupNameList();
			var batchModify = false;
			
			if(num == 0){
				return;
			}
			
			for(var k=0;k<num;k++){
				var srecordId = gnList[k];
				var xcbId = <%=groupnameId%>;
				if(srecordId == xcbId){
					batchModify = true;
				}
			}
			
			if(batchModify == true){
				Ext.MessageBox.show({
					title: '提示',
			        msg: '所选记录中含有信产部数据，不能删除!',
			        buttons: Ext.MessageBox.OK,
			        icon: Ext.MessageBox.INFO
				});
			}else{
				Ext.MessageBox.confirm("提示","您确定要删除所选记录吗？",function(btnId){
					if(btnId == 'yes')
						deleteRecord(recordIdList);
				})
			}			
		}
		//显示批量覆盖确认网页前台限制词记录对话框
		function showConfirm(){
			//二维数组：元素的格式是5个字段：id，confirm_tag_block，confirm_tag_reversible，confirm_reserve_id_str，confirm_extra_attr
			var recordIdList = getCheckedContentList();
			var num = recordIdList.length;
			var param = '';
			if(num == 0){
				return;
			}
			for(var i=0;i<num;i++){
				var tmpobj = recordIdList[i];
				param = param + tmpobj.toString() + '-=-';
			}
			Ext.MessageBox.confirm("提示","您确定要覆盖所选记录吗？",function(btnId){
				if(btnId == 'yes')
					doConfirmRecord( param );
			});
			
		}
		//显示删除网页前台限制词记录对话框
		function showBatchDelete(){
			batchForm.form.reset();
			batchForm.form.url = "frontWebpage.do?method=deleteBatchDomain";
			batchForm.isAdd = true;
			batchWin.setTitle("Domain文件上传表单");
			batchWin.show();
		}
		//删除网页前台限制词记录
		function deleteRecord(recordIdList){
			var msgTip = Ext.MessageBox.show({
				title:'提示',
				width : 250,
				msg:'正在删除网页前台限制词记录信息请稍后......'
			});
			Ext.Ajax.request({
				url : 'frontWebpage.do?method=deleteFrontWebpage',
				params : {recordIdList : recordIdList.toString()},
				method : 'GET',
				success : function(response,options){
					msgTip.hide();
					var result = Ext.util.JSON.decode(response.responseText);
					if(result.success){
						//服务器端数据成功删除后，同步删除客户端列表中的数据
						store.load({params:{start:0, limit:50}});
						Ext.Msg.alert('提示','删除网页前台限制词记录信息成功。');
					}else{
						Ext.Msg.alert('提示','该网页前台限制词记录已包含'+result.num+'本信息不能删除！');
					}
				},
				failure : function(response,options){
					msgTip.hide();
					Ext.Msg.alert('提示','删除网页前台限制词记录请求失败！');
				}
			});
		}
		//覆盖网页前台限制词记录,param的格式：3685746,1,0,,无价值-=-3685745,1,0,,普通-=-
		function doConfirmRecord(param){
			var msgTip = Ext.MessageBox.show({
				title:'提示',
				width : 250,
				msg:'正在覆盖网页前台限制词记录信息请稍后......'
			});
			Ext.Ajax.request({
				url : 'frontWebpage.do?method=confirmFrontWebpage',
				params : {confirmParam : param },
				method : 'POST',
				success : function(response,options){
					msgTip.hide();
					//var jsonResult = Ext.util.JSON.decode(response.responseText);
					Ext.Msg.alert('提示','批量新增、修改网页前台限制词记录成功。');
					popupWin.hide();
					//重新加载主列表中数据
					store.load({params:{start:0, limit:50}});
					/*
					var result = Ext.util.JSON.decode(response.responseText);
					if(result.success){
						//服务器端数据成功删除后，同步删除客户端列表中的数据
						store.load({params:{start:0, limit:50}});
						Ext.Msg.alert('提示','删除网页前台限制词记录信息成功。');
					}else{
						Ext.Msg.alert('提示','该网页前台限制词记录已包含'+result.num+'本书籍信息不能删除！');
					}*/
				},
				failure : function(response,options){
					msgTip.hide();
					Ext.Msg.alert('提示','删除网页前台限制词记录请求失败！');
				}
			});
		}
		//加载表单数据
		function loadForm(recordId){
			inputForm.form.load({
				waitMsg : '正在加载数据请稍后',//提示信息
				waitTitle : '提示',//标题
				url : 'frontWebpage.do?method=getFrontWebpageById',//请求的url地址
				params : {recordId : recordId},
				method:'GET',//请求方式
				success:function(form,action){//加载成功的处理函数
				},
				failure:function(form,action){//加载失败的处理函数
					Ext.Msg.alert('提示','数据加载失败');
				}
			});
		}
		//提交表单数据
		function submitForm(){
			//判断当前执行的提交操作，isAdd为true表示执行网页前台限制词记录新增操作，false表示执行网页前台限制词记录修改操作
			
			if( inputForm.form.isValid() ){
					if(inputForm.isAdd){
						if(Ext.getCmp('xcb_groupname').getEl().dom.value == '<%=category%>'){
							Ext.MessageBox.show({
								title: '提示',
						        msg: '不能添加信产部类别的数据!请重新选择其它类别进行添加!',
						        buttons: Ext.MessageBox.OK,
						        icon: Ext.MessageBox.INFO
							});
							win.hide();
						}else {
						//新增网页前台限制词记录信息
						inputForm.form.submit({
							clientValidation:true,//进行客户端验证
							waitMsg : '正在提交数据请稍后',//提示信息
							waitTitle : '提示',//标题
							url : 'frontWebpage.do?method=addFrontWebpage',//请求的url地址
							method:'POST',//请求方式
							success:function(form,action){//加载成功的处理函数
								win.hide();
								var failcause = action.result.cause;
								var needConfirm = action.result.needConfirm;
				    			if(needConfirm){//有重复记录，需要确认
					    			var popupData = action.result.data;
									popupStore.loadData(popupData);
									popupWin.setTitle("下列重复记录是否覆盖原有记录？");
									popupWin.show();
					    			Ext.getCmp('ikNumber').getEl().dom.value = popupData.items[0].ikNumber+'条';
					    			Ext.getCmp('processNum').getEl().dom.value = popupData.items[0].processNum+'条';
					    			Ext.getCmp('xcbExistNumber').getEl().dom.value = popupData.items[0].xcbExistNumber+'条';
					    			Ext.getCmp('existNumber').getEl().dom.value = popupData.items[0].existNumber+'条';
					    			Ext.getCmp('xcbExistKeyword').getEl().dom.value = popupData.items[0].xcbExistKeyword;
					    			Ext.getCmp('existKeyword').getEl().dom.value = popupData.items[0].existKeyword;
				    			}
				    			else//无重复记录，不需要确认
					    		{
				    				Ext.MessageBox.show({
							           title: '提示',
							           msg: '批量新增网页前台限制词成功。<br>共处理' + action.result.recordNum + '条记录;<br>成功新增有效记录' + action.result.processNum + '条;<br>有'+action.result.xcbExistNumber+'条在信产部中已经存在，直接跳过!',
							           buttons: Ext.MessageBox.OK,
							           icon: Ext.MessageBox.INFO
							        });
				    				store.load({params:{start:0, limit:50}});
					    		}
							},
							failure:function(form,action){//新增失败的处理函数
								win.hide();
								Ext.MessageBox.show({
						           title: '提示',
						           msg: '新增网页前台限制词记录失败。原因是:<br>输入限制词条数超过上限100条或提交超时',
						           buttons: Ext.MessageBox.OK,
						           icon: Ext.MessageBox.ERROR
						        });
							}
						});
					}
				}else{
					//修改网页前台限制词记录信息
					inputForm.form.submit({
						clientValidation:true,//进行客户端验证
						waitMsg : '正在提交数据请稍后',//提示信息
						waitTitle : '提示',//标题
						url : 'frontWebpage.do?method=modifyFrontWebpage',//请求的url地址
						method:'POST',//请求方式
						success:function(form,action){//加载成功的处理函数
							win.hide();
							store.load({params:{start:0, limit:50}});
							Ext.Msg.alert('提示','修改记录成功');
						},
						failure:function(form,action){//加载失败的处理函数
							var failcause = action.result.cause;
							Ext.MessageBox.show({
					           title: '提示',
					           msg: '修改网页前台限制词记录失败。<br>数据库中可能已经存在此限制词',
					           buttons: Ext.MessageBox.OK,
					           icon: Ext.MessageBox.WARNING
					        });
						}
					});
				}
				
				
			}//if( inputForm.form.isValid() )
		}
		
		//取得表单数据
		function getFormFieldsObj(domainRecordId){
			var fields = inputForm.items;
			var obj = {};
			for(var i = 0 ; i < fields.length ; i++){
				var item = 	fields.itemAt(i);
				var value = item.getValue();
				obj[item.name] = value;
			}
			if(Ext.isEmpty(obj['id'])){
				obj['id'] = domainRecordId;
			}
			//补充另外两个属性tag_block和tag_reversible
			if( Ext.getCmp('tag_block_group').items.get(0).checked )
				obj['tag_block'] = 1 ;
			else
				obj['tag_block'] = 0 ;
			if( Ext.getCmp('tag_reversible_group').items.get(0).checked )
				obj['tag_reversible'] = 1 ;
			else
				obj['tag_reversible'] = 0 ;
			return obj;
		}
		//取得所选域名记录信息
		function getCheckedIdList(){
			var recs = recordGrid.getSelectionModel().getSelections();
			var list = [];
			if(recs.length == 0){
				Ext.MessageBox.alert('提示','请选择要进行操作的记录！');
			}else{
				for(var i = 0 ; i < recs.length ; i++){
					var rec = recs[i];
					list.push(rec.get('id'));
				}
			}
			return list;
		}
		function getCheckedIdList_new(){
            var recs = recordGrid.getSelectionModel().getSelections();
            var list = [];
            if(recs.length == 0){
                //Ext.MessageBox.alert('提示','请选择要进行操作的记录！');
            }else{
                for(var i = 0 ; i < recs.length ; i++){
                    var rec = recs[i];
                    list.push(rec.get('id'));
                }
            }
            return list;
        }
		//取得所选域名记录分类信息
		function getCheckGroupNameList(){
			var recs = recordGrid.getSelectionModel().getSelections();
			var list = [];
			if(recs.length == 0){
				Ext.MessageBox.alert('提示','请选择要进行操作的记录！');
			}else{
				for(var i = 0 ; i < recs.length ; i++){
					var rec = recs[i];
					list.push(rec.get('groupname'));
				}
			}
			return list;
		}
		//取得所选域名记录ID以及分类信息
		function getCheckedIdGroupNameList(){
			var recs = recordGrid.getSelectionModel().getSelections();
			var list = [];
			if(recs.length == 0){
				Ext.MessageBox.alert('提示','请选择要进行操作的记录！');
			}else{
				for(var i = 0 ; i < recs.length ; i++){
					var rec = recs[i];
					list.push(rec.get('id')+'fg'+rec.get('groupname')+'fg'+rec.get('sogou_rank'));
				}
			}
			return list;
		}
		//取得所选域名记录信息
		function getCheckedContentList(){
			var recs = popupGrid.getSelectionModel().getSelections();
			var list = [];
			if(recs.length == 0){
				Ext.MessageBox.alert('提示','请选择要进行操作的记录！');
			}else{
				for(var i = 0 ; i < recs.length ; i++){
					var rec = recs[i];
					var tmpArray = [];
					tmpArray.push(rec.get('id'));
					
					tmpArray.push(rec.get('confirm_type'));
					tmpArray.push(rec.get('confirm_match_type'));
					tmpArray.push(rec.get('confirm_groupname'));
					
					tmpArray.push(rec.get('confirm_extendhint'));
					tmpArray.push(rec.get('confirm_beijing'));
					tmpArray.push(rec.get('confirm_enhint'));

					tmpArray.push(rec.get('confirm_start_time_string'));
					tmpArray.push(rec.get('confirm_end_time_string'));
					tmpArray.push(rec.get('confirm_note'));
					tmpArray.push(rec.get('confirm_validate_time_string'));
					list.push(tmpArray);
				}
			}
			return list;
		}

		
		//开始查询代码
		function query(tag){
			//新增网页前台限制词记录信息
			var query_keyword ;
			if(tag)
				query_keyword = document.getElementById("query_keyword").value;
			else{
				query_keyword = '';
				document.getElementById("query_keyword").value='';
			}
			
			var query_matchType;
			if(document.getElementsByName("query_matchType")[0].checked)
				query_matchType = 1;
			else
				query_matchType = 0;

			var query_type = document.getElementsByName("query_type")[0].value;
			var query_match_type = document.getElementsByName("query_match_type")[0].value;
			var query_groupname = document.getElementsByName("query_groupname")[0].value;

/*
			var query_extendhint;
			if(document.getElementsByName("query_extendhint")[0].checked)
				query_extendhint = -100;
			else if(document.getElementsByName("query_extendhint")[1].checked)
				query_extendhint = 1;
			else
				query_extendhint = 0;
*/
			
			var query_beijing;
			if(document.getElementsByName("query_beijing")[0].checked)
				query_beijing = -100;
			else if(document.getElementsByName("query_beijing")[1].checked)
				query_beijing = 1;
			else
				query_beijing = 0;

//			var query_enhint = document.getElementsByName("query_enhint")[0].value;		
//			var query_ensugg = document.getElementsByName("query_ensugg")[0].value;	
			
			var query_start_time_1 = document.getElementById("query_start_time_1").value;
			var query_start_time_2 = document.getElementById("query_start_time_2").value;
			var query_end_time_1 = document.getElementById("query_end_time_1").value;
			var query_end_time_2 = document.getElementById("query_end_time_2").value;

			var query_note = document.getElementById("query_note").value;
			var query_submitter = document.getElementById("query_submitter").value;

			//alert(query_keyword);
			var url = "frontWebpage.do?method=getFrontWebpageList&query_keyword="+escape(query_keyword)+"&query_matchType="+query_matchType
			+"&query_type=" + query_type + "&query_match_type=" + query_match_type + "&query_groupname=" + escape(query_groupname)
			+"&query_beijing=" + query_beijing + "&query_enhint=&query_ensugg="
			+"&query_start_time_1=" + query_start_time_1 + "&query_start_time_2=" + query_start_time_2
			+"&query_end_time_1=" + query_end_time_1 + "&query_end_time_2=" + query_end_time_2+ "&query_note=" + escape(query_note)
			+"&query_submitter=" + escape(query_submitter);

			//导出条件
			exportConditionUrl = "frontWebpage.do?method=getFrontWebpageList&query_keyword="+query_keyword+"&query_matchType="+query_matchType
			+"&query_type=" + query_type + "&query_match_type=" + query_match_type + "&query_groupname=" + query_groupname
		    +"&query_beijing=" + query_beijing + "&query_enhint=" 
			+"&query_start_time_1=" + query_start_time_1 + "&query_start_time_2=" + query_start_time_2
			+"&query_end_time_1=" + query_end_time_1 + "&query_end_time_2=" + query_end_time_2+ "&query_note=" + query_note
			+"&query_submitter=" + query_submitter;
			
			store.proxy.conn.url = url;
			store.load({params:{start:0, limit:50}});
		}
		//过期提醒
		function tixing(item, pressed){
			//Ext.example.msg('Button Toggled', 'Button "{0}" was toggled to {1}.', item.text, pressed);
			var url = "frontWebpage.do?method=getFrontWebpageList";
			if(pressed)
				url = "frontWebpage.do?method=getFrontWebpageList&query_end_time_1=" + getTimeAfterNow(0) + "&query_end_time_2=" + getTimeAfterNow(7*24*60);
			//导出条件
			exportConditionUrl = url;
			
			store.proxy.conn.url = url;
			store.load({params:{start:0, limit:50}});
		}
	    
		//线上同步词表
		function synchronize(){
			var msgTip = Ext.MessageBox.show({
				title:'提示',
				width : 250,
				msg:'正在向线上发送网页前台限制词同步信号，请稍候......'
			});
			Ext.Ajax.request({
				url : 'export?data=web_front_black&spliter=none',
				//params : {deploytype : 'front'},
				method : 'GET',
				timeout :300000,
				success : function(response,options){
					msgTip.hide();
					if(response.responseText=="true")
						Ext.Msg.alert('提示','词表线上同步成功...');
					else
						Ext.Msg.alert('提示','词表线上同步失败...');
				},
				failure : function(response,options){
					msgTip.hide();
					Ext.Msg.alert('提示','词表线上同步失败！');
				}
			});
		}
		//导出Excel
		function exportExcel(){
			var msgTip = Ext.MessageBox.show({
				title:'提示',
				width : 250,
				msg:'正在导出网页前台限制词记录信息请稍候（上限1w条）......'
			});
			Ext.Ajax.request({
				url : 'frontWebpage.do?method=exportFrontWebpage',
				params : {storeUrl : Ext.util.JSON.encode(exportConditionUrl) },
				method : 'POST',
				success : function(response,options){
					msgTip.hide();
					window.location = '<%=request.getContextPath()%>/exportExcel/blacklist_front.xls';
					var result = Ext.util.JSON.decode(response.responseText);
				},
				failure : function(response,options){
					msgTip.hide();
					Ext.Msg.alert('提示','导出网页前台限制词记录请求失败！');
				}
			});
			
		}
		function getTimeAfterNow(after_mnt){
		    var clock = Ext.util.Format.date(new Date().add(Date.MINUTE,after_mnt),"Y-m-d H:i:s");
		    return clock;
		}
		
//		function getTimeAfterNow(after_mnt){ //当前日期后after_mnt分钟
//			var clock = '';
//		    var now = new Date();
//		    now.setMinutes(now.getMinutes()+after_mnt);
//		    
//		    var yy = now.getFullYear(); 
//		    var month = now.getMonth()+1;
//		    var dd = now.getDate();
//
//		    clock = yy + '-';
//		    if (month < 10) clock += '0'; 
//		    clock += month+'-'; 
//		    if (dd < 10) clock += '0'; 
//		    clock += dd+' '; 
//		    
//		    var hh = now.getHours(); 
//		    var mm = now.getMinutes(); 
//		    var ss = now.getTime() % 60000; 
//		    ss = (ss - (ss % 1000)) / 1000; 
//
//		    if (hh < 10) clock += '0'; 
//		    clock += hh+':'; 
//		    if (mm < 10) clock += '0'; 
//		    clock += mm+':'; 
//		    if (ss < 10) clock += '0'; 
//		    clock += ss; 
//		    return(clock); 
//		}

		function groupname_tag(val, p, record){
			if(groupStore.getById(val)!=null)
				return groupStore.getById(val).get('keyword');
			else
				return '垃圾';
		}
		
	    dr.render('dr');

		Ext.get('query_start_time_1').on('click',function(){
			WdatePicker({skin:'ext',dateFmt:'yyyy-MM-dd HH:mm:ss',maxDate:'#F{$dp.$D(\'query_start_time_2\')}'});
		});
		Ext.get('query_start_time_2').on('click',function(){
			WdatePicker({skin:'ext',dateFmt:'yyyy-MM-dd HH:mm:ss',minDate:'#F{$dp.$D(\'query_start_time_1\')}'});
		});
		Ext.get('query_end_time_1').on('click',function(){
			WdatePicker({skin:'ext',dateFmt:'yyyy-MM-dd HH:mm:ss',maxDate:'#F{$dp.$D(\'query_end_time_2\')}'});
		});
		Ext.get('query_end_time_2').on('click',function(){
			WdatePicker({skin:'ext',dateFmt:'yyyy-MM-dd HH:mm:ss',minDate:'#F{$dp.$D(\'query_end_time_1\')}'});
		});
		/*form表单中的生效截止日期*/
		//alert(Ext.getCmp('start_time_string').xtype);
		/*Ext.get('start_time_string').on('click',function(){
			alert('haha');
			WdatePicker({skin:'whyGreen',dateFmt:'yyyy-MM-dd HH:mm:ss'});
		});
		Ext.get('form_jiezhi_date').on('click',function(){
			WdatePicker({skin:'whyGreen',dateFmt:'yyyy-MM-dd HH:mm:ss'});
		});*/
	});
</script>
<body>
<div id="dr" style="width:100%;height:40%"></div>
<div id="progress-div" style="width:100%;height:5%;display:none"></div>
<div id='grid-div' style="width:100%; height:55%;"></div>&nbsp;
</body>
</html>
