<%@ page language="java" contentType="text/html; charset=GBK"
    pageEncoding="GBK"%>
<html>
<head>
	<meta http-equiv="Content-Type" content="text/html; charset=GBK">
	<title>XML pid列表</title>
</head>
<script type="text/javascript">
	var PageSize  = 18;

	Ext.namespace('Ext.exampledata');
	
	Ext.exampledata.type_list = [
		['1','广告', 'The Heart of Dixie'],
		['2','搜索', 'The Heart of Dixie']
	];	
	
	
	Ext.onReady(function(){
		var exportConditionUrl = 'cooperation.do?method=getRecordList';
		
		//创建新增或单独修改表记录信息的form表单
		Ext.QuickTips.init();
		Ext.form.Field.prototype.msgTarget = 'side';//统一指定错误信息提示方式
		//定义数据集对象
		var store = new Ext.data.Store({//配置分组数据集
			reader: new Ext.data.XmlReader({
				totalRecords: "total",
				record: "item",
				id: "id"
			},
			Ext.data.Record.create([
				{name: 'id'},
				{name: 'pid'},
				{name: 'name'},
				{name: 'ip'},
				{name: 'isUnion'},
				{name: 'quota'},
				{name: 'remark'},
				{name: 'type'},

				{name: 'user'},
				{name: 'createTime'},
				{name: 'modifyTime'}
			])
			),
			proxy : new Ext.data.HttpProxy({
				url : 'cooperation.do?method=getRecordList'
			}),
			sortInfo: {field: 'id', direction: 'DESC'},
	  		remoteSort: true
		})
		
    	store.load({params:{start:0, limit:PageSize}});


		// 联盟合作
		var unionStore = new Ext.data.Store({//配置分组数据集
			autoLoad :true,
			reader: new Ext.data.XmlReader({
				record: "item",
				id: "id"
			},
			Ext.data.Record.create([
				{name: 'id'},
				{name: 'name'}
			])
			),
			proxy : new Ext.data.HttpProxy({
				url : 'cooperation.do?method=getUnionList'
			}),
			sortInfo: {field: 'id', direction: 'DESC'},
	  		remoteSort: true
		})


		<%//根据权限信息显示工具栏
		StringBuffer toolbar_str = new StringBuffer();
    	toolbar_str.append("{text : '新增',iconCls:'add',handler : showAdd},");
    	toolbar_str.append("{text : '批量新增',iconCls:'batch-add',handler : showBatchAdd},");
    	toolbar_str.append("{text : '修改',iconCls:'option',handler : showModify},");
    	toolbar_str.append("{text : '删除',iconCls:'remove',handler : showDelete},");
    	//toolbar_str.append("{text : '上线',iconCls:'batch-remove',handler : synchronize},");
	    
	    toolbar_str.deleteCharAt(toolbar_str.length()-1);
	    %>
		//创建工具栏组件
		var toolbar = new Ext.Toolbar([
		    <%=toolbar_str.toString()%>
		]);
		
	
    	//创建分页工具栏
    	var pagingBar = new Ext.PagingToolbar({
    		pageSize: PageSize,
	        store: store,
	        displayInfo: true,
	        displayMsg: '显示 {0} - {1} , 共 {2} 条记录',
	        emptyMsg: "没有任何记录",
	        items:['-']
    	});
		//创建Grid表格组件
		var cb = new Ext.grid.CheckboxSelectionModel();

		//开始查询表单部分
		var dr = new Ext.FormPanel({
	    	labelWidth: 125,
	        frame: true,
	  	  	bodyStyle:'padding:5px 5px 0',
	  	 	autoScroll: true,
	  	  	autoWidth: true,
	        defaults: {width: 175},
	      	//增加表单键盘事件
	        keys:[
	         {
	             key: [10,13],
	             fn:query
	         } ],
	        items: [{
	        	xtype:'textfield',
				width : 400,
				id : 'query_pid',
				name : 'query_pid',
				fieldLabel:'PID'
	        },

	        {
	            layout:'column',
	            width : 800,
	            border:false,
	            items:[
	                {
	                    columnWidth:.5,
	                    layout: 'form',
	                    border:false,
	                    items: [{
	                        xtype:'radio',
	                        fieldLabel:'查找方式',
	                        checked: true,
	                        boxLabel:'精确查找',
	                        name:'query_matchType',
	                        anchor:'100%',
	                        inputValue: 1
	                    }]
	                },
	                {   
	                    columnWidth:.5,
	                    layout: 'form',
	                    border:false,
	                    items: [{
	                        xtype:'radio',
	                        boxLabel:'模糊查找',
	                        hideLabel: true,
	                        name:'query_matchType',
	                        anchor:'100%',
	                        inputValue: 0
	                    }]
	                }
	              ]
            }],
			buttons:[
				{
					text : '查询',
					handler : function(){
						query(true);
					}
				},
				{
					text : '返回',
					handler : function(){
						query(false);
					}
				}
			]
	      });
		
		var recordGrid = new Ext.grid.GridPanel({
			applyTo : 'grid-div',
			tbar : toolbar,
			frame:true,
			loadMask: true,
			autoScroll: true,
			autoWidth: true,
			store: store,
			viewConfig : {
				autoFill : true
			},
			sm : cb,
			columns: [//配置表格列
		        new Ext.grid.RowNumberer({
					header : '行号',
					width : 40
				}),//表格行号组件
				cb,
				//{header: "编号", width: 40, dataIndex: 'id', sortable: true},
				{header: "PID", width: 130, dataIndex: 'pid'},
				{header: "站点名", width: 20, dataIndex: 'name'},
				{header: "提交者", width: 100, dataIndex: 'user'},
				{header: "创建时间", width: 60, dataIndex: 'createTime'},
				{header: "最后更新时间", width: 60, dataIndex: 'modifyTime'}
			],
			
	        // paging bar on the bottom
	        bbar: pagingBar
			
		});

		
		var inputForm = new Ext.FormPanel({
			name:"input",
			labelSeparator : ":",
			frame:true,
			border:false,
			autoHeight: true,
			labelWidth : 130, 
			items : [
				{
					xtype:'textfield',
					width : 200,
					allowBlank : false,
					blankText : 'pid不能为空',
					name : 'pid',
					id : 'pid',
					fieldLabel:'<font color=red>*</font>PID'
				},
				{
                 	xtype:'combo',
                 	fieldLabel:'合作方式',
                 	name : 'union_id',
                 	width : 150,
                 	id:"unionId",
                 	hiddenName : 'union_id',
                 	store: unionStore,
                 	displayField:'name',
                 	valueField: 'id',
                 	typeAhead: true,
                 	forceSelection: true,
                 	triggerAction: 'all',
                 	emptyText:'请选择其中一种...',
                 	selectOnFocus:true,
                 	value: 0,
                 	mode: 'remote',
                 	listeners:{
                 		"select":function(){
                 			//获取id为combo的值
                 			if(Ext.get("union_id").dom.value == 0){

 								Ext.getCmp('name').enable();
								Ext.getCmp('name').show();
								Ext.getCmp('name').getEl().up('.x-form-item').setDisplayed(true);             			
                 			
								Ext.getCmp('ip').enable();
								Ext.getCmp('ip').show();
								Ext.getCmp('ip').getEl().up('.x-form-item').setDisplayed(true);             			

								Ext.getCmp('quota').enable();
								Ext.getCmp('quota').show();
								Ext.getCmp('quota').getEl().up('.x-form-item').setDisplayed(true);   
								        			
                 			}else{
                 				
                 				Ext.getCmp('name').disable();
								Ext.getCmp('name').hide();
								Ext.getCmp('name').getEl().up('.x-form-item').setDisplayed(false);             			
                 			
								Ext.getCmp('ip').disable();
								Ext.getCmp('ip').hide();
								Ext.getCmp('ip').getEl().up('.x-form-item').setDisplayed(false);             			

								Ext.getCmp('quota').disable();
								Ext.getCmp('quota').hide();
								Ext.getCmp('quota').getEl().up('.x-form-item').setDisplayed(false);     
                 		
                 			}
                 				   
                        }
                    }		

				},
				{
					xtype:'textfield',
					width : 150,
					allowBlank : false,
					blankText : '站点名不能为空',
					name : 'name',
					id : 'name',
					fieldLabel:'XML站点名'
				},	
				{
					xtype:'textarea',
					width : 200,
					height: 50,				
					allowBlank : false,
					blankText : 'ip不能为空',
					name : 'ip',
					id : 'ip',
					fieldLabel:'IP列表'
				},		
				{
					xtype:'textfield',
					width : 100,
					allowBlank : false,
					blankText : '配额不能为空',
					name : 'quota',
					id : 'quota',
					fieldLabel:'配额'
				},												
				{
					xtype:'combo',
                    fieldLabel:'<font color=red>*</font>接口类型',
                    name : 'type',
                    allowBlank : false,
                    blankText : '限制级别为必填项',
                    hiddenName : 'type',
                    store: Ext.exampledata.type_list,
                    typeAhead: true,
                    forceSelection: true,
                    triggerAction: 'all',
                    emptyText:'请选择其中一种...',
                    selectOnFocus:true,
                    value: '2'				
				}				
				,{
					xtype:'hidden',
					name : 'id'
				}
			],
			buttons:[
				{
					text : '提交',
					id : 'btn_submmit',
					handler : submitForm
				},
				{
					text : '关闭',
					handler : function(){
						win.hide();
					}
				}
			]
		});
		
		//批量添加
		var inputBatchForm = new Ext.FormPanel({
			name:"inputBatch",
			labelSeparator : ":",
			frame:true,
			border:false,
			autoHeight: true,
			autoWidth:true,
			labelWidth : 130, 
			items : [
				{
					xtype:'textarea',
					width : 550,
					height: 200,
					allowBlank : false,
					blankText : '内容不能为空',
					name : 'batchContent',
					id : 'batchContent',
					fieldLabel:'<font color=red>*</font>pid\\t接口类型(1:广告，2:搜索)\\t联盟ID\\t站点名\\tIP\\t配额<font color=red>(中间以tab或空格分隔,每个数据占1行，以回车分隔)</font>'
				}
			],
			buttons:[
				{
					text : '提交',
					id : 'btn_bat_sub',
					handler : submitBatForm
				},
				{
					text : '关闭',
					handler : function(){
						batchWin.hide();
					}
				}
			]
		});		
		
		
		//删除原有窗口对象
		win = Ext.getCmp('input_window');
		if(win){
			win.destroy();
		}
		var win = new Ext.Window({
			id: 'input_window',
			layout:'fit',
		    width:750,
		    closeAction:'hide',
			resizable : false,
			shadow : true,
			modal :true,
		    closable:true,
		    bodyStyle:'padding:5 5 5 5',
		    animCollapse:true,
			items:[inputForm],
			y: 100
		});
		
		var batchWin = new Ext.Window({
			id: 'batch_input_window',
			layout:'fit',
		    width:750,
		    closeAction:'hide',
			resizable : false,
			shadow : true,
			modal :true,
		    closable:true,
		    bodyStyle:'padding:5 5 5 5',
		    animCollapse:true,
			items:[inputBatchForm],
			y: 100
		});		
		
		//显示新建网页前台限制词记录窗口
		function showAdd(){
			inputForm.form.reset();
			inputForm.isAdd = true;
			win.setTitle("新增XML PID");
			win.show();
			
            

							Ext.getCmp('name').enable();
							Ext.getCmp('name').show();
							Ext.getCmp('name').getEl().up('.x-form-item').setDisplayed(true);             			
                			
							Ext.getCmp('ip').enable();
							Ext.getCmp('ip').show();
							Ext.getCmp('ip').getEl().up('.x-form-item').setDisplayed(true);             			

							Ext.getCmp('quota').enable();
							Ext.getCmp('quota').show();
							Ext.getCmp('quota').getEl().up('.x-form-item').setDisplayed(true);   
							        					
			
			Ext.getCmp('unionId').setDisabled(false);

			//url提示信息标签
		}
		//显示新建网页前台限制词记录窗口
		function showBatchAdd(){

			inputBatchForm.form.reset();
			batchWin.setTitle("批量新增XML PID");
			batchWin.add(inputBatchForm);
			batchWin.show();
			//url提示信息标签
		}		
		
		String.prototype.replaceAll  = function(s1,s2){    
			return this.replace(new RegExp(s1,"gm"),s2);    
		}
		
		//显示修改网页前台限制词记录窗口
		function showModify(){
			var recordList = getCheckedIdList();
			var num = recordList.length;
			if(num > 1){
				Ext.MessageBox.alert("提示","每次只能修改一条记录信息。")
			}else if(num == 1){
				inputForm.isAdd = false;
				win.setTitle("修改记录信息");
				win.show();
				
				var recordId = recordList[0];

				loadForm(recordId);
				Ext.getCmp('unionId').setDisabled(true);
			}

		}
		
		function bindingPicker(){
			//给上下线时间预置当前时间和翌日当前时间
			Ext.getCmp('start_time_string').setValue(getTimeAfterNow(0));
			
			document.getElementById('start_time_string').onclick = function(){
				WdatePicker({skin:'ext',dateFmt:'yyyy-MM-dd HH:mm:ss'  });
			};

		}
		
		//显示删除网页前台限制词记录对话框
		function showDelete(){
			var recordIdList = getCheckedIdList();
			var num = recordIdList.length;
			
			Ext.MessageBox.confirm("提示","您确定要删除所选记录吗？",function(btnId){
				if(btnId == 'yes')
					deleteRecord(recordIdList);
			});
			
		}
		//删除网页前台限制词记录
		function deleteRecord(recordIdList){
			var msgTip = Ext.MessageBox.show({
				title:'提示',
				width : 250,
				msg:'正在删除此记录信息请稍后......'
			});
			Ext.Ajax.request({
				url : 'cooperation.do?method=deleteRecord',
				params : {recordIdList : recordIdList.toString()},
				method : 'GET',
				success : function(response,options){
					msgTip.hide();
					var result = Ext.util.JSON.decode(response.responseText);
					if(result.success){
						//服务器端数据成功删除后，同步删除客户端列表中的数据
						store.load({params:{start:0, limit:PageSize}});
						Ext.Msg.alert('提示','删除记录成功。');
					}else{
						Ext.Msg.alert('提示','删除记录失败！');
					}
				},
				failure : function(response,options){
					msgTip.hide();
					Ext.Msg.alert('提示','删除记录失败！');
				}
			});
		}

			
		//加载表单数据
		function loadForm(recordId){
			inputForm.form.load({
				waitMsg : '正在加载数据请稍后',//提示信息
				waitTitle : '提示',//标题
				url : 'cooperation.do?method=getRecordById',//请求的url地址
				params : {recordId : recordId},
				method:'GET',//请求方式
				success:function(form,action){//加载成功的处理函数

					if(action.result.data.is_union!=0){
							
				 				Ext.getCmp('name').disable();
								Ext.getCmp('name').hide();
								Ext.getCmp('name').getEl().up('.x-form-item').setDisplayed(false);             			
                 			
								Ext.getCmp('ip').disable();
								Ext.getCmp('ip').hide();
								Ext.getCmp('ip').getEl().up('.x-form-item').setDisplayed(false);             			

								Ext.getCmp('quota').disable();
								Ext.getCmp('quota').hide();
								Ext.getCmp('quota').getEl().up('.x-form-item').setDisplayed(false);  					
					}else{
 								Ext.getCmp('name').enable();
								Ext.getCmp('name').show();
								Ext.getCmp('name').getEl().up('.x-form-item').setDisplayed(true);             			
                 			
								Ext.getCmp('ip').enable();
								Ext.getCmp('ip').show();
								Ext.getCmp('ip').getEl().up('.x-form-item').setDisplayed(true);             			

								Ext.getCmp('quota').enable();
								Ext.getCmp('quota').show();
								Ext.getCmp('quota').getEl().up('.x-form-item').setDisplayed(true);  					
					
					}
					
				
					
				},
				failure:function(form,action){//加载失败的处理函数
					Ext.Msg.alert('提示','数据加载失败');
				}
			});
		}
		
		//提交表单数据
		function submitForm(){
			//判断当前执行的提交操作，isAdd为true表示执行网页前台限制词记录新增操作，false表示执行网页前台限制词记录修改操作
			if( inputForm.form.isValid() ){
					if(inputForm.isAdd){
						//新增网页前台限制词记录信息
						inputForm.form.submit({
							clientValidation:true,//进行客户端验证
							waitMsg : '正在提交数据请稍后',//提示信息
							waitTitle : '提示',//标题
							url : 'cooperation.do?method=addRecord',//请求的url地址
							method:'POST',//请求方式
							success:function(form,action){//加载成功的处理函数
								win.hide();
								store.load({params:{start:0, limit:PageSize}});
								Ext.Msg.alert('提示','新增记录成功');
							},
							failure:function(form,action){//新增失败的处理函数
								var failcause = action.result.cause;
								Ext.MessageBox.show({
						           title: '提示',
						           msg: '新增记录失败。原因是:<br>'+failcause,
						           buttons: Ext.MessageBox.OK,
						           icon: Ext.MessageBox.ERROR
						        });
							}
						});
					}//if
					else{
						//修改网页前台限制词记录信息
						inputForm.form.submit({
							clientValidation:true,//进行客户端验证
							waitMsg : '正在提交数据请稍后',//提示信息
							waitTitle : '提示',//标题
							url : 'cooperation.do?method=modifyRecord',//请求的url地址
							method:'POST',//请求方式
							success:function(form,action){//加载成功的处理函数
								win.hide();
								store.load({params:{start:0, limit:PageSize}});
								Ext.Msg.alert('提示','修改记录成功');
							},
							failure:function(form,action){//加载失败的处理函数
								var failcause = action.result.cause;
								Ext.MessageBox.show({
						           title: '提示',
						           msg: '修改记录失败。原因是:<br>'+failcause,
						           buttons: Ext.MessageBox.OK,
						           icon: Ext.MessageBox.ERROR
						        });
							}
						});
					}//else
				}
		}
		
		function submitBatForm(){
			if( inputBatchForm.form.isValid() ){
						//新增网页前台限制词记录信息
						inputBatchForm.form.submit({
							clientValidation:true,//进行客户端验证
							waitMsg : '正在提交数据请稍后',//提示信息
							waitTitle : '提示',//标题
							url : 'cooperation.do?method=batchAddRecord',//请求的url地址
							method:'POST',//请求方式
							success:function(form,action){//加载成功的处理函数
								batchWin.hide();
								store.load({params:{start:0, limit:PageSize}});
								Ext.Msg.alert('提示','批量添加记录成功');
							},
							failure:function(form,action){//新增失败的处理函数
								var failcause = action.result.cause;
								Ext.MessageBox.show({
						           title: '提示',
						           msg: '新增记录失败。原因是:<br>'+failcause,
						           buttons: Ext.MessageBox.OK,
						           icon: Ext.MessageBox.ERROR
						        });
							}
						});		
			}		
		}
		//取得所选域名记录信息
		function getCheckedIdList(){
			var recs = recordGrid.getSelectionModel().getSelections();
			var list = [];
			if(recs.length == 0){
				Ext.MessageBox.alert('提示','请选择要进行操作的记录！');
				return;
			}else{
				for(var i = 0 ; i < recs.length ; i++){
					var rec = recs[i];
					list.push(rec.get('id'));
				}
			}
			return list;
		}

		//线上同步词表
		function synchronize(){
			/*
			var msgTip = Ext.MessageBox.show({
				title:'提示',
				width : 250,
				msg:'正在向线上发送网页前台限制词同步信号，请稍候......'
			});
			Ext.Ajax.request({
				url : 'frontWebpage.do?method=deploy',
				params : {deploytype : 'front'},
				method : 'POST',
				success : function(response,options){
					msgTip.hide();
					Ext.Msg.alert('提示','词表线上同步中...');
				},
				failure : function(response,options){
					msgTip.hide();
					Ext.Msg.alert('提示','词表线上同步失败！');
				}
			});*/
			alert('上线中...');
		}

		function getTimeAfterNow(after_mnt){ //当前日期后after_mnt分钟
			var clock = '';
		    var now = new Date();
		    now.setMinutes(now.getMinutes()+after_mnt);
		    
		    var yy = now.getFullYear(); 
		    var month = now.getMonth()+1;
		    var dd = now.getDate();

		    clock = yy + '-';
		    if (month < 10) clock += '0'; 
		    clock += month+'-'; 
		    if (dd < 10) clock += '0'; 
		    clock += dd+' '; 
		    
		    var hh = now.getHours(); 
		    var mm = now.getMinutes(); 
		    var ss = now.getTime() % 60000; 
		    ss = (ss - (ss % 1000)) / 1000; 

		    if (hh < 10) clock += '0'; 
		    clock += hh+':'; 
		    if (mm < 10) clock += '0'; 
		    clock += mm+':'; 
		    if (ss < 10) clock += '0'; 
		    clock += ss; 
		    return(clock); 
		}
		
		var escapespecial={"¤":"%A1%E8","§":"%A1%EC","¨":"%A1%A7","°":"%A1%E3","±":"%A1%C0","・":"%A1%A4","×":"%A1%C1","à":"%A8%A4","á":"%A8%A2","è":"%A8%A8","é":"%A8%A6","ê":"%A8%BA","ì":"%A8%AC","í":"%A8%AA","ò":"%A8%B0","ó":"%A8%AE","÷":"%A1%C2","ù":"%A8%B4","ú":"%A8%B2","ü":"%A8%B9","+":"%2B"};
		function rescape(s) {
	        var r = ""
	        if (typeof(s) == "undefined")
	                return r
	        for (var i=0;i<s.length; i++) {
	                var c = s.charAt(i);
	                if( typeof(escapespecial[c]) != "undefined")
	                        r=r+escapespecial[c];
	                else
	                        r=r+escape(c);
	        }
	        return r;
		}
			
		//开始查询代码
		function query(tag){
			var pid ;
			if(tag)
				pid = document.getElementById("query_pid").value;
			else{
				pid = '';
				document.getElementById("query_pid").value='';
			}
			var query_matchType;
			if(document.getElementsByName("query_matchType")[0].checked)
				query_matchType = 1;
			else
				query_matchType = 0;
			var url = "cooperation.do?method=getRecordList&pid="+encodeURIComponent(pid)+"&match="+query_matchType;
			store.proxy.conn.url = url;
			store.load({params:{start:0, limit:PageSize}});
		}
		
		dr.render('dr');
		
	});
</script>
<body>

<div id="dr" style="width:100%;height:20%;"></div>
<div id='grid-div' style="width:100%; height:80%;"></div>
</body>
</html>
<style type="text/css">
	.vrnews {
		color:#9C9C9C;
		font-size:13px;
		line-height:1.4;
	}
	.vrnews ul {
		list-style-image:none;
		list-style-position:outside;
		list-style-type:none;
		padding-left:16px;
	}
	#content {
		clear:left;
		margin-bottom:28px;
		width:533px;
	}
	#content DIV {	
		PADDING-RIGHT: 10px;	
		PADDING-LEFT: 10px;	
		MARGIN-BOTTOM: 19px;	
		PADDING-BOTTOM: 0px;	
		PADDING-TOP: 0px
	}
	#content h2, #content h3 {
		color:#9C9C9C;
		font-weight:normal;
	}
	#content h2 a, #content h3 a {
		font-size:16px;
	}
	a:link {
		color:#0000CC;
		text-decoration:underline;
	}
	#content p {
		font-size:13px;
		font-family:Arial,Helvetica,sans-serif;
		line-height:1.4;
		text-align:justify;
	}
	.url, .agentads .url, .agentads .url a:link, .agentads .url a:visited {
		color:#008000;
	}
</style>