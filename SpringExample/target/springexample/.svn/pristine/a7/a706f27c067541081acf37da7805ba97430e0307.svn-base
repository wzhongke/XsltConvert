<%@ page language="java" contentType="text/html; charset=GBK"
    pageEncoding="GBK"%>

<html>
<head>
	<meta http-equiv="Content-Type" content="text/html; charset=GBK">
	<title>用户-对象-角色关联记录列表</title>
	
</head>
<script type="text/javascript">
	Ext.namespace('Ext.exampledata');
	Ext.exampledata.extra_attr_list = [
        ['无价值', '无价值', 'The Heart of Dixie'],
        ['死链', '死链', 'The Land of the Midnight Sun'],
        ['非中文', '非中文', 'The Grand Canyon State']
    ];


	Ext.onReady(function(){
		//定义数据集对象
		var store = new Ext.data.GroupingStore({//配置分组数据集
			//autoLoad :true,
			reader: new Ext.data.XmlReader({
				totalRecords: "results",
				record: "UsrObjRole",
				id: "id"
				},
				Ext.data.Record.create([
					{name: 'id', type: 'int'},
					{name: 'id_object'},
					{name: 'id_user'},
					{name: 'id_role', type: 'int'}
				])
			),
			proxy : new Ext.data.HttpProxy({
				url : 'author.do?method=getUsrObjRoleList'
			}),
			sortInfo: {field: 'id_user', direction: 'ASC'},
	  		remoteSort: true,
	  		groupField:'id_object'
		})
		//1.“用户”多选输入框数据集
		var userFromStore = new Ext.data.Store({
               proxy: new Ext.data.HttpProxy({//数据代理
                   url: 'author.do?method=getUserList'
               }),
               reader: new Ext.data.JsonReader({
                   fields:[
                      {name:'code'},{name:'desc'}
                   ]
               }
               )
             });
	   userFromStore.load();
	   //2.“对象”多选输入框数据集
		var objFromStore = new Ext.data.Store({
               proxy: new Ext.data.HttpProxy({//数据代理
                   url: 'author.do?method=getObjList'
               }),
               reader: new Ext.data.JsonReader({
                   fields:[
                      {name:'code'},{name:'desc'}
                   ]
               }
               )
             });
	   objFromStore.load();
		
		//创建工具栏组件
		var toolbar = new Ext.Toolbar([
			<%if(  ( (Integer)session.getAttribute("kasai_objects_users_roles_add") )==1){
			%>
				{text : '新增',iconCls:'add',handler : showAddDomain},
			<%}%>
			<%if(  ( (Integer)session.getAttribute("kasai_objects_users_roles_delete") )==1){
			%>
				{text : '删除',iconCls:'remove',handler : showDelete}
			<%}%>
		]);
		//将 是否封禁首页和是否留首封站 的代码解析成 文本
		function booleantag(val){
	        if(val == 1){
	            return '是';
	        }else{
	            return '否';
	        }
    	}
		//创建Grid表格组件
		var cb = new Ext.grid.CheckboxSelectionModel();
		//创建过滤器
		var filters = new Ext.grid.GridFilters({
		  filters:[
		    {type: 'numeric',  dataIndex: 'id'},
		    {type: 'string',  dataIndex: 'id_object'},
		    {type: 'string',  dataIndex: 'id_user'},
		    {type: 'numeric', dataIndex: 'id_role'}
		]});
		var recordGrid = new Ext.grid.GridPanel({
			applyTo : 'grid-div',
			tbar : toolbar,
			frame:true,
			loadMask: true,
			autoScroll: true,
			width: 960,
			plugins: filters,
			store: store,
			viewConfig : {
				autoFill : true
			},
			sm : cb,
			columns: [//配置表格列
				new Ext.grid.RowNumberer({
					header : '行号',
					width : 40
				}),//表格行号组件
				cb,
				//{header: "编号", width: 30, dataIndex: 'id', sortable: true},
				{header: "对象ID", width: 50, dataIndex: 'id_object', sortable: true},
				{header: "用户ID", width: 40, dataIndex: 'id_user', sortable: true},
				{header: "角色ID", width: 60, dataIndex: 'id_role', sortable: true}
			],
			view: new Ext.grid.GroupingView({
	            forceFit:true,
	            groupTextTpl: '{text} ({[values.rs.length]} {[values.rs.length > 1 ? "Items" : "Item"]})',
	            startCollapsed:true
	        })
			
		});
			
		// trigger the data store load
    	store.load({params:{start:0, limit:18}});
    	
		//创建新增或修改域名表记录信息的form表单
		Ext.QuickTips.init();
		Ext.form.Field.prototype.msgTarget = 'side';//统一指定错误信息提示方式
		var formItemSelector = new Ext.form.FormPanel({
			width : 700,
			bodyStyle: 'padding:10px;',
			autoHeight: true,
			items : [
            <%--{--%>
				<%--xtype : "itemselector",--%>
				<%--name : "selectedUserlist",--%>
				<%--fieldLabel : "请选择用户",--%>
				<%--dataFields : ["code", "desc"],--%>
				<%--fromStore : userFromStore,--%>
				<%--toData : [],--%>

				<%--msWidth : 250,--%>
				<%--msHeight : 250,--%>
				<%--autoScroll : true,--%>
				<%--valueField : "code",--%>
				<%--displayField : "desc",--%>
				<%--imagePath:"images/",--%>
				<%--// switchToFrom:true,--%>
				<%--toLegend : "已选用户",--%>
				<%--fromLegend : "可选用户",--%>
				<%--toTBar : [{--%>
					<%--text : "清除",--%>
					<%--handler : function() {--%>
						<%--var i = formItemSelector.getForm()--%>
								<%--.findField("itemselector");--%>
						<%--i.reset.call(i);--%>
					<%--}--%>
				<%--}]--%>
			<%--},--%>
            <%--{--%>
	            <%--xtype:"itemselector",--%>
	            <%--name:"selectedObjlist",--%>
	            <%--fieldLabel:"请选择对象",--%>
	            <%--dataFields:["code", "desc"],--%>
	            <%--toData:[],--%>
	            <%--msWidth:250,--%>
	            <%--msHeight:250,--%>
	            <%--valueField:"code",--%>
	            <%--displayField:"desc",--%>
	            <%--imagePath:"images/",--%>
	            <%--toLegend:"已选对象",--%>
	            <%--fromLegend:"可选对象",--%>
	            <%--fromStore : objFromStore,--%>
				<%--/*或者--%>
				<%--fromData:[[123,"中华人民共和国"],--%>
				<%--["1", "江苏省"], ["2", "浙江省"], ["3", "广东省"], ["4", "四川省"], ["5", "湖北省"],--%>
				<%--["6", "湖南省"], ["7", "贵州省"], ["8", "江西省"], ["9", "辽宁省"]],--%>
				<%--*/ --%>
	            <%--toTBar:[{--%>
	                <%--text:"清除",--%>
	                <%--handler:function(){--%>
	                    <%--var i=formItemSelector.getForm().findField("itemselector1");--%>
	                    <%--i.reset.call(i);--%>
	                <%--}--%>
	            <%--}]--%>
	        <%--},--%>
            {
                xtype : "chosen",
                name : "selectedUserlist",
                fieldLabel : "请选择用户",
                placeholder: "输入邮箱筛选用户...",
                dataStore : userFromStore,
                msWidth : 0,
                msHeight : 0,
                width: 500,
                autoScroll : true,
                valueField : "code",
                displayField : "desc",
                multiple: true
            },
            {
                xtype:"chosen",
                name:"selectedObjlist",
                fieldLabel:"请选择对象",
                placeholder: "输入表名筛选对象...",
                dataStore: objFromStore,
                msWidth:0,
                msHeight:0,
                width: 500,
                listHeight: 235,
                valueField:"code",
                displayField:"desc",
                multiple: true
            },
            {
					xtype:'combo',
					width : 200,
					allowBlank : false,
					blankText : '必须选择角色',
					hiddenName : 'roleId',
					name : 'roleName',
					store : new Ext.data.Store({
		               proxy: new Ext.data.HttpProxy({//数据代理
		                   url: 'author.do?method=getRoleList'
		               }),
		               reader: new Ext.data.JsonReader({
		                   fields:[
		                      {name:'code'},{name:'desc'}
		                   ]
		               }
		               )
		             }),//设置数据源
					allQuery:'allrole',//查询全部信息的查询字符串
					triggerAction: 'all',//单击触发按钮显示全部数据
					editable : false,//禁止编辑
					loadingText : '正在加载角色信息',//加载数据时显示的提示信息
					displayField:'desc',//定义要显示的字段
					valueField : 'code',
					emptyText :'请选择角色',
					mode: 'remote',//远程模式
					fieldLabel:'请选择角色'
				}
			],
			buttons : [
					{
					text : '提交',
					handler : submitForm
					},{
						text : "取值",
						handler : function() {
							alert(formItemSelector.getForm().getValues(true));
						}
					}, {
						text : "验证无效",
						handler : function() {
							formItemSelector.getForm()
									.markInvalid("Invalid");
						}
					}]
		});
		//创建弹出窗口
		var win = new Ext.Window({
			layout:'fit',
		    width:750,
		    closeAction:'hide',
			resizable : false,
			shadow : true,
			modal :true,
		    closable:true,
		    bodyStyle:'padding:5 5 5 5',
		    animCollapse:true,
			items:[formItemSelector]
		});
		//显示新建域名表记录窗口
		function showAddDomain(){
			formItemSelector.form.reset();
			formItemSelector.isAdd = true;
			win.setTitle("新增用户-对象-角色关联");
			win.show();
		}
		//显示删除域名表记录对话框
		function showDelete(){
			var recordIdList = getCheckedIdList();
			var num = recordIdList.length;
			if(num == 0){
				return;
			}
			Ext.MessageBox.confirm("提示","您确定要删除所选记录吗？",function(btnId){
				if(btnId == 'yes')
					deleteRecord(recordIdList);
			})
		}
		//删除记录
		function deleteRecord(recordIdList){
			var msgTip = Ext.MessageBox.show({
				title:'提示',
				width : 250,
				msg:'正在删除记录信息请稍后......'
			});
			Ext.Ajax.request({
				url : 'author.do?method=deleteUsrObjRole',
				params : {recordIdList : recordIdList.toString()},
				method : 'POST',
				success : function(response,options){
					msgTip.hide();
					var result = Ext.util.JSON.decode(response.responseText);
					if(result.success){
						//服务器端数据成功删除后，同步删除客户端列表中的数据
						for(var i=0;i<recordIdList.length;i++)
						{
							var index = store.find('id',recordIdList[i]);
							if(index != -1){
								var rec = store.getAt(index)
								store.remove(rec);
							}
						}
						Ext.Msg.alert('提示','删除记录信息成功。');
					}else{
						Ext.Msg.alert('提示','该记录已包含'+result.num+'本书籍信息不能删除！');
					}
				},
				failure : function(response,options){
					msgTip.hide();
					Ext.Msg.alert('提示','删除域名表记录请求失败！');
				}
			});
		}
		//提交表单数据
		function submitForm(){
			//判断当前执行的提交操作，isAdd为true表示执行用户-对象-角色关联表记录新增操作，false表示执行用户-对象-角色关联表记录修改操作
			if(formItemSelector.isAdd){
				//新增用户-对象-角色关联表记录信息
				formItemSelector.form.submit({
					clientValidation:true,//进行客户端验证
					waitMsg : '正在提交数据请稍后',//提示信息
					waitTitle : '提示',//标题
					url : 'author.do?method=addUsrObjRole',//请求的url地址
					method:'POST',//请求方式
					success:function(form,action){//加载成功的处理函数
						win.hide();
						store.load();
						Ext.Msg.alert('提示','新增用户-对象-角色关联记录成功');
					},
					failure:function(form,action){//加载失败的处理函数
						Ext.Msg.alert('提示','新增用户-对象-角色关联记录失败');
					}
				});
			}
		}
		//取得表单数据
		function getFormFieldsObj(domainRecordId){
			var fields = formItemSelector.items;
			var obj = {};
			for(var i = 0 ; i < fields.length ; i++){
				var item = 	fields.itemAt(i);
				var value = item.getValue();
				obj[item.name] = value;
			}
			if(Ext.isEmpty(obj['id'])){
				obj['id'] = domainRecordId;
			}
			//补充另外两个属性tag_block和tag_reversible
			if( Ext.getCmp('tag_block_group').items.get(0).checked )
				obj['tag_block'] = 1 ;
			else
				obj['tag_block'] = 0 ;
			if( Ext.getCmp('tag_reversible_group').items.get(0).checked )
				obj['tag_reversible'] = 1 ;
			else
				obj['tag_reversible'] = 0 ;
			return obj;
		}
		//取得所选记录信息
		function getCheckedIdList(){
			var recs = recordGrid.getSelectionModel().getSelections();
			var list = [];
			if(recs.length == 0){
				Ext.MessageBox.alert('提示','请选择要进行操作的记录信息！');
			}else{
				for(var i = 0 ; i < recs.length ; i++){
					var rec = recs[i];
					list.push(rec.get('id'))
				}
			}
			return list;
		}
	});
</script>
<body>
<div id='grid-div' style="width:100%; height:100%;"/>
</body>
</html>