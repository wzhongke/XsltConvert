<%@ page language="java" contentType="text/html; charset=GBK"
    pageEncoding="GBK"%>
<html>
<head>
	<meta http-equiv="Content-Type" content="text/html; charset=GBK">
	<title>Anchor记录列表</title>
</head>
<script type="text/javascript">
	var PageSize  = 18;

	Ext.namespace('Ext.exampledata');
	
	Ext.exampledata.autoCheck_list = [
		['-1', '请选择', 'The Grand Canyon State'],
		['0', '关闭自动审核', 'The Grand Canyon State'],
		['1', 'keyword变化自动审核', 'The Grand Canyon State'],
		['2', '内容变化自动审核', 'The Grand Canyon State'],
		['3', 'keyword或内容变化自动审核', 'The Grand Canyon State']		
    ];	
	
	Ext.exampledata.dataFormat_list = [
		['null', '请选择', 'The Grand Canyon State'],
		['AxP', 'A*P(查询词+pattern)', 'The Grand Canyon State'],
		['A1xA2', 'A1*A2(两个同类查询词)', 'The Grand Canyon State'],
		['xP', '*P(pattern)', 'The Grand Canyon State'],
		['AxB', 'A*B(异类关键词查询)', 'The Grand Canyon State'],
		['xAx', '*A*', 'The Grand Canyon State'],
		['A1xA2xP', 'A1*A2*P', 'The Grand Canyon State'],
		['AxR','A*R', 'The Grand Canyon State']	 
    ];	

	
	Ext.onReady(function(){
		var exportConditionUrl = 'open.do?method=showResList';
		
		//创建新增或单独修改表记录信息的form表单
		Ext.QuickTips.init();
		Ext.form.Field.prototype.msgTarget = 'side';//统一指定错误信息提示方式
		//定义数据集对象
		var store = new Ext.data.Store({//配置分组数据集
			reader: new Ext.data.XmlReader({
				totalRecords: "total",
				record: "item",
				id: "id"
			},
			Ext.data.Record.create([
				{name: 'id'},
				{name: 'resName'},
				{name: 'url'},
				{name: 'dataGroup'},
				{name: 'frequency'},
				{name: 'template'},
				{name: 'tplName'},
				{name: 'classNo'},
				{name: 'vrId'},
				{name: 'vrType'},
				{name: 'vrAttr1'},
				{name: 'vrAttr2'},
				{name: 'vrAttr3'},
				{name: 'vrRank'},
				{name: 'vrAttr5'},
				{name: 'resStatus'},
				{name: 'autoDel'},
				{name: 'status'},
				{name: 'manualUpdate'},
				{name: 'queryTotal'},
				{name: 'querySuccess'},
				{name: 'queryTotal'},
				{name: 'queryTotal'},
				{name: 'email'},
				{name: 'priority'},
				{name: 'fetchTime',type: 'date', dateFormat: 'Y-m-d H:i'},
				{name: 'subDate', type: 'date', dateFormat: 'Y-m-d H:i'},
				{name: 'onlineDate', type: 'date', dateFormat: 'Y-m-d H:i'},
				{name: 'modifyDate', type: 'date', dateFormat: 'Y-m-d H:i'},
				{name: 'updateDate', type: 'date', dateFormat: 'Y-m-d H:i'}
			])
			),
			proxy : new Ext.data.HttpProxy({
				url : 'open.do?method=showResList'
			}),
			sortInfo: {field: 'id', direction: 'DESC'},
	  		remoteSort: true
		})
		
    	store.load({params:{start:0, limit:PageSize}});

		<%//根据权限信息显示工具栏
		StringBuffer toolbar_str = new StringBuffer();
		if( ( (Integer)session.getAttribute("vr_open_batchadd") )==1)
    		toolbar_str.append("{text : '新增',iconCls:'add',handler : showAdd},");
    	//toolbar_str.append("{text : '批量新增',iconCls:'batch-add',handler : showBatchAdd},");
    	toolbar_str.append("{text : '修改',iconCls:'option',handler : showModify},");
    	toolbar_str.append("{text : '模板一览',iconCls:'option',handler : showTpls},");
    	toolbar_str.append("{text : '删除',iconCls:'remove',handler : showDelete},");
    	toolbar_str.append("{text : '同步测试环境',iconCls:'option',handler : synchronize},");
	    
	    toolbar_str.deleteCharAt(toolbar_str.length()-1);
	    %>
	    
	    function showTpls(){
	    	window.open("open.do?method=showTemplates");
	    }
	    
		//创建工具栏组件
		var toolbar = new Ext.Toolbar([
		    <%=toolbar_str.toString()%>
		]);
		
	
    	//创建分页工具栏
    	var pagingBar = new Ext.PagingToolbar({
    		pageSize: PageSize,
	        store: store,
	        displayInfo: true,
	        displayMsg: '显示 {0} - {1} , 共 {2} 条记录',
	        emptyMsg: "没有任何记录",
	        items:[
	        '-',
	        {
				title : '欢迎您，<%=session.getAttribute("user")%>&nbsp;&nbsp;<a href="logout.jsp">登出</a>&nbsp;&nbsp;&nbsp;&nbsp;<a href="mailto:yangting@sogou-inc.com">联系开发</a>&nbsp;&nbsp;&nbsp;&nbsp;<a href="http://cvs.so.sohu.com/svn/websearch/trunk/FrontWeb/开发文档/前端应用/UMIS/【使用手册】UMIS系统V1.0.doc">使用手册</a>',
				collapsible: true,
				html : '<br><center><font size = 6>统一干预信息管理系统UMIS</font></center>',
				region: 'north',//指定子面板所在区域为north
				height: 100
			}
	        ]
    	});
		//创建Grid表格组件
		var cb = new Ext.grid.CheckboxSelectionModel();

		//开始查询表单部分
		var dr = new Ext.FormPanel({
	    	labelWidth: 125,
	        frame: true,
	  	  	bodyStyle:'padding:5px 5px 0',
	  	 	autoScroll: true,
	  	 	autoWidth:true,
	  	  	defaults: {width: 175},
	      	//增加表单键盘事件
	        keys:[
	         {
	             key: [10,13],
	             fn:query
	         } ],
	        items: [{
	        	xtype:'textfield',
				width : 200,
				id : 'q_resName',
				name : 'q_resName',
				fieldLabel:'资源名称'
	        },
			{
	        	xtype:'textfield',
				width : 400,
				id : 'q_resUrl',
				name : 'q_resUrl',
				fieldLabel:'资源地址'
	        },
	        {
	        	xtype:'textfield',
				width : 100,
				id : 'q_vrId',
				name : 'q_vrId',
				fieldLabel:'资源Vr_Id'
	        }
			,
	        {
	        	xtype:'textfield',
				width : 100,
				id : 'q_classNo',
				name : 'q_classNo',
				fieldLabel:'资源ClassNo'
	        }
			,				        
	        {
	        	xtype:'textfield',
				width : 100,
				id : 'q_vrType',
				name : 'q_vrType',
				fieldLabel:'资源Vr_Type'
	        }
			,
           {
                  xtype:'combo',
                  fieldLabel:'自动审核',
                  name : 'q_autoCheck',
                  //allowBlank : false,
                  //blankText : '模板为必填项',
                  hiddenName : 'q_autoCheck',
                  store: Ext.exampledata.autoCheck_list,
                  typeAhead: true,
                  forceSelection: true,
                  triggerAction: 'all',
                  emptyText:'请选择其中一种...',
                  selectOnFocus:true,
                  value:-1
            }		        
			],
			buttons:[
				{
					text : '查询',
					handler : function(){
						query(true);
					}
				},
				{
					text : '返回',
					handler : function(){
						query(false);
					}
				}
			]
	      });

		/*******/
		function urlRender(val){		
			var link = '<a target="_blank" href="'+val+'" >'+val+'</a>';
			return link;	
		}
		
		function statusRender(val,metadata,record){
			if(val=="0")
				return "未提交";
			else if(val=="1")
				return "待审核";
			else if(val=="2")
				return "未生效";
			else if(val=="3")
				return "已生效";
			else if(val=="4")
				return "异常";
				
			//var link = '<a target="_blank" href="http://pic.sogou.com/pics?query='+val+'&forceQuery=on" onmouseover="showLogo(\''+ record.get("miniPic") +'\');">'+val+'</a>';
			//return link;		
		}
		
		var recordGrid = new Ext.grid.GridPanel({
			applyTo : 'grid-div',
			tbar : toolbar,
			frame:true,
			loadMask: true,
			autoScroll: true,
			autoWidth: true,
			store: store,
			viewConfig : {
				autoFill : true
			},
			sm : cb,
			columns: [//配置表格列
		        /*
		        new Ext.grid.RowNumberer({
					header : '行号',
					width : 40
				}),//表格行号组件
				*/
				cb,
				{header: "ID", width: 20, dataIndex: 'id', sortable: true},
				{header: "资源名称", width: 50, dataIndex: 'resName'},
				{header: "url", width: 130, dataIndex: 'url',renderer: urlRender},
				{header: "模板名称", width: 80, dataIndex: 'tplName'},
				{header: "资源状态", width: 30, dataIndex: 'resStatus',renderer: statusRender},
				{header: "更新周期", width: 30, dataIndex: 'frequency'},
				{header: "自动删除", width: 30, dataIndex: 'autoDel'},
				{header: "上线状态", width: 30, dataIndex: 'status'},
				{header: "提交时间", width: 40, dataIndex: 'subDate', renderer: Ext.util.Format.dateRenderer('Y-m-d H:i')},
				{header: "提交者", width: 50, dataIndex: 'email'},
				{header: "修改时间", width: 40, dataIndex: 'modifyDate', renderer: Ext.util.Format.dateRenderer('Y-m-d H:i')},
				{header: "更新时间", width: 40, dataIndex: 'updateDate', renderer: Ext.util.Format.dateRenderer('Y-m-d H:i'),sortable:true},
				{header: "抓取时间", width: 40, dataIndex: 'fetchTime', renderer: Ext.util.Format.dateRenderer('Y-m-d H:i')}
			],
			
	        // paging bar on the bottom
	        bbar: pagingBar
			
		});

		//recordGrid.addListener('cellclick', cellclick);
		recordGrid.addListener('rowdblclick', cellclick);
		//function cellclick(grid, rowIndex, columnIndex, e) {
		function cellclick(grid, rowIndex,  e) {
		    var record = grid.getStore().getAt(rowIndex);   //Get the Record
		    //var fieldName = grid.getColumnModel().getDataIndex(columnIndex); //Get field name
		    var id = record.get("id");
		    //Ext.MessageBox.alert('show','当前选中的数据是'+data);
		    
		    var w=Ext.getCmp('eastContent');
			//w.collapsed=w.collapse(); /*控制关闭*/
			w.collapsed=w.expand();/*控制打开*/
			w.width=300;//w.setWidth(300);
			w.show();
			
			var url = "open.do?method=showData&resId="+id+"&group="+record.get("dataGroup")+"&tplId="+record.get("template")+"&r="+Math.random();
			w.load({
				url:url,
				callback : function(){
					w.setTitle("【资源】"+record.get("resName"));
				},
				scripts: true
			});			
		    
		}

		
		var inputForm = new Ext.FormPanel({
			name:"input",
			labelSeparator : ":",
			frame:true,
			border:false,
			autoHeight: true,
			labelWidth : 130, 
			items : [
				{
					layout:'column',
				    width : 850,
				    border:false,
				    items:[
				            {
				                layout:'form',
				                columnWidth:.50,
				                border:false,
				                items:[ 
				                { xtype:'textfield', id : 'res_name', name : 'res_name', width : 230,  labelSeparator: '', fieldLabel:'资源名称:<br>',allowBlank : false,blankText : '资源名称不能为空'	} 
				                ]
				            },				    
				            {
				                layout:'form',
				                columnWidth:.50,
				                border:false,
				                items:[ 
				                { xtype:'textfield', id : 'template', name : 'template', width : 100,  labelSeparator: '', fieldLabel:'模板编号:<br>',allowBlank : false,blankText : '模板不能为空'	} 
				                ]
				            }				    	
				    ]
				},
	            {
					xtype:'textarea', 
					id : 'url', 
					name : 'url',
					//grow :true,
					width : 570,  
					labelSeparator: '', 
					fieldLabel:'资源地址:<br>',
					allowBlank : false,
					blankText : '资源地址不能为空'
	            },					
				{
					layout:'column',
				    width : 850,
				    border:false,
				    items:[
			    
				            {
				                layout:'form',
				                columnWidth:.50,
				                border:false,
				                items:[ 
				                { xtype:'textfield', id : 'class_no', name : 'class_no', width : 100,  labelSeparator: '', fieldLabel:'classNo:<br>',allowBlank : false,blankText : 'classNo不能为空'	} 
				                ]
				            },
				            {
				                layout:'form',
				                columnWidth:.50,
				                border:false,
				                items:[ 			
									{
										xtype:'textfield',
										width : 150,
										allowBlank : false,
										blankText : '更新周期不能为空',
										name : 'frequency',
										id : 'frequency',
										fieldLabel:'更新周期'
										//,vtype:'url'
									}			                
				                ]
				            }				            					    
				    
				    ]
				 },				

				{
					layout:'column',
				    width : 850,
				    border:false,
				    items:[
				            {
				                layout:'form',
				                columnWidth:.40,
				                border:false,
				                items:[ 
				                { xtype:'textfield', id : 'vr_id', name : 'vr_id', width : 120,  labelSeparator: '', fieldLabel:'VrId:<br>',allowBlank : false,blankText : 'VrId不能为空'} 
				                ]
				            },				    
				            {
				                layout:'form',
				                columnWidth:.60,
				                border:false,
				                
				                items:[ 
				                { xtype:'textfield', id : 'vr_type', name : 'vr_type', width : 200,  labelSeparator: '', fieldLabel:'VrType:<br>',allowBlank : false,blankText : 'VrType不能为空'	} 
				                ]
				            }						    
				    ]
				}, 
				{
					layout:'column',
				    width : 850,
				    border:false,
				     
				    items:[
				            {
				                layout:'form',
				                columnWidth:.50,
				                border:false,
				               
				                items:[ 
				                { 
				                xtype:'textfield',disabled :'true',id : 'vr_attr1',readOnly:'true' ,name : 'vr_attr1', width : 150,  labelSeparator: '', fieldLabel:'vr_attr1:<br>',allowBlank : false,blankText : 'VrAttr1不能为空',value:50000} 
				                ]
				            },				    
				            {
				                layout:'form',
				                columnWidth:.50,
				                border:false,
				                items:[ 
				                { xtype:'textfield', disabled :'true', id : 'vr_attr2', readOnly:'true' ,name : 'vr_attr2', width : 150,  labelSeparator: '', fieldLabel:'vr_attr2:<br>',allowBlank : false,blankText : 'VrAttr2不能为空',value:100} 
				                ]
				            }					    
				    
				    ]
				 },			
				{
					layout:'column',
				    width : 850,
				    border:false,
				    items:[
				            {
				                layout:'form',
				                columnWidth:.50,
				                border:false,
				                items:[ 
				                { xtype:'textfield', disabled :'true', id : 'vr_attr3', readOnly:'true' ,name : 'vr_attr3', width : 150,  labelSeparator: '', fieldLabel:'vr_attr3:<br>',allowBlank : false,blankText : 'VrAttr3不能为空',value:50000} 
				                ]
				            },				    
				            {
				                layout:'form',
				                columnWidth:.50,
				                border:false,
				                items:[ 
				                { xtype:'textfield', id : 'vr_rank', name : 'vr_rank', width : 150,  labelSeparator: '', fieldLabel:'vr_rank:<br>',allowBlank : false,blankText : 'VrRank不能为空',value:104} 
				                ]
				            }					    
				    
				    ]
				 },		
				{
					layout:'column',
				    width : 850,
				    border:false,
				    items:[
				            {
				                layout:'form',
				                columnWidth:.50,
				                border:false,
				                items:[ 
				                { xtype:'textfield', disabled :'true', id : 'vr_attr5', readOnly:'true' ,name : 'vr_attr5', width : 150,  labelSeparator: '', fieldLabel:'vr_attr5:<br>',allowBlank : false,blankText : 'VrAttr5不能为空',value:0} 
				                ]
				            },				    
				            {
				                layout:'form',
				                columnWidth:.50,
				                border:false,
				                items:[ 
				                { xtype:'textfield', id : 'priority', name : 'priority', width : 150,  labelSeparator: '', fieldLabel:'优先级:<br>',value:'0',allowBlank : false,blankText : '优先级不能为空'} 
				                ]
				            }					    
				    
				    ]
				 },					 
				 
				
		        {
		            layout:'column',
		            width : 800,
		            border:false,
		            items:[
		                {
		                    columnWidth:.5,
		                    layout: 'form',
		                    border:false,
		                    items: [{
		                        xtype:'radio',
		                        fieldLabel:'手动更新',
		                        checked: true,
		                        boxLabel:'是',
		                        name:'manual_update',
		                        anchor:'100%',
		                        inputValue: 1
		                    }]
		                },
		                {   
		                    columnWidth:.5,
		                    layout: 'form',
		                    border:false,
		                    items: [{
		                        xtype:'radio',
		                        boxLabel:'否',
		                        hideLabel: true,
		                        name:'manual_update',
		                        anchor:'100%',
		                        inputValue: 0
		                    }]
		                }
		              ]
	            },					
		        {
		            layout:'column',
		            width : 800,
		            border:false,
		            items:[
		                {
		                    columnWidth:.5,
		                    layout: 'form',
		                    border:false,
		                    items: [{
		                        xtype:'radio',
		                        fieldLabel:'审核',
		                        checked: true,
		                        boxLabel:'已审核',
		                        name:'status_check',
		                        anchor:'100%',
		                        inputValue: 1
		                    }]
		                },
		                {   
		                    columnWidth:.5,
		                    layout: 'form',
		                    border:false,
		                    items: [{
		                        xtype:'radio',
		                        boxLabel:'未审核',
		                        hideLabel: true,
		                        name:'status_check',
		                        anchor:'100%',
		                        inputValue: 0
		                    }]
		                }
		              ]
	            },
  	            {
                      xtype:'combo',
                      fieldLabel:'自动审核',
                      name : 'auto_check',
                      //allowBlank : false,
                      //blankText : '模板为必填项',
                      hiddenName : 'auto_check',
                      store: Ext.exampledata.autoCheck_list,
                      typeAhead: true,
                      forceSelection: true,
                      triggerAction: 'all',
                      emptyText:'请选择其中一种...',
                      selectOnFocus:true,
                      value:0
                }									
				,
		        {
		            layout:'column',
		            width : 800,
		            border:false,
		            items:[
		                {
		                    columnWidth:.5,
		                    layout: 'form',
		                    border:false,
		                    items: [{
		                        xtype:'radio',
		                        fieldLabel:'自动删除',
		                        checked: true,
		                        boxLabel:'是',
		                        name:'auto_del',
		                        anchor:'100%',
		                        inputValue: 1
		                    }]
		                },
		                {   
		                    columnWidth:.5,
		                    layout: 'form',
		                    border:false,
		                    items: [{
		                        xtype:'radio',
		                        boxLabel:'否',
		                        hideLabel: true,
		                        name:'auto_del',
		                        anchor:'100%',
		                        inputValue: 0
		                    }]
		                }
		              ]
	            },					
		        {
		            layout:'column',
		            width : 800,
		            border:false,
		            items:[
		                {
		                    columnWidth:.5,
		                    layout: 'form',
		                    border:false,
		                    items: [{
		                        xtype:'radio',
		                        fieldLabel:'上线状态',
		                        checked: true,
		                        boxLabel:'上线',
		                        name:'status',
		                        anchor:'100%',
		                        inputValue: 1
		                    }]
		                },
		                {   
		                    columnWidth:.5,
		                    layout: 'form',
		                    border:false,
		                    items: [{
		                        xtype:'radio',
		                        boxLabel:'下线',
		                        hideLabel: true,
		                        name:'status',
		                        anchor:'100%',
		                        inputValue: 0
		                    }]
		                }
		              ]
	            },	
		        {
		            layout:'column',
		            width : 800,
		            border:false,
		            items:[
		                {
		                    columnWidth:.5,
		                    layout: 'form',
		                    border:false,
		                    items: [{
		                        xtype:'radio',
		                        fieldLabel:'新框架',
		                        checked: true,
		                        boxLabel:'是',
		                        name:'new_framework',
		                        anchor:'100%',
		                        inputValue: 1
		                    }]
		                },
		                {   
		                    columnWidth:.5,
		                    layout: 'form',
		                    border:false,
		                    items: [{
		                        xtype:'radio',
		                        boxLabel:'否',
		                        hideLabel: true,
		                        name:'new_framework',
		                        anchor:'100%',
		                        inputValue: 0
		                    }]
		                }
		              ]
	            },	
	            
		        {
		            layout:'column',
		            width : 800,
		            border:false,
		            items:[
		                {
		                    columnWidth:.5,
		                    layout: 'form',
		                    border:false,
		                    items: [{
		                        xtype:'radio',
		                        fieldLabel:'地域查询',
		                        boxLabel:'是',
		                        name:'region',
		                        anchor:'100%',
		                        inputValue: 1
		                    }]
		                },
		                {   
		                    columnWidth:.5,
		                    layout: 'form',
		                    border:false,
		                    items: [{
		                        xtype:'radio',
		                        boxLabel:'否',
		                         checked: true,
		                        hideLabel: true,
		                        name:'region',
		                        anchor:'100%',
		                        inputValue: 0
		                    }]
		                }
		              ]
	            },	            
	                        
				{
					xtype:'textarea',
					width : 460,
					height: 50,
					allowBlank : true,
					name : 'err_info',
					id : 'err_info',
					fieldLabel:'错误信息'
				},				
				{
					xtype:'hidden',
					name : 'res_id',
					id :'res_id'
				}
				,{
					xtype:'hidden',
					name : 'res_status',
					id :'res_status'
				},
	           {
	                  xtype:'combo',
	                  fieldLabel:'扩展类型',
	                  name : 'data_format',
	                  //allowBlank : false,
	                  //blankText : '模板为必填项',
	                  hiddenName : 'data_format',
	                  store: Ext.exampledata.dataFormat_list,
	                  typeAhead: true,
	                  forceSelection: true,
	                  triggerAction: 'all',
	                  emptyText:'请选择其中一种...',
	                  selectOnFocus:true,
	                  value:''
	            },
	           {
	                  xtype:'combo',
	                  fieldLabel:'滤重方式',
	                  name : 'dupfilttype',
	                  //allowBlank : false,
	                  //blankText : '模板为必填项',
	                  hiddenName : 'dupfilttype',
	                  store: [
							['0', '不滤重', 'The Grand Canyon State'],
							['1', '用Docid滤重', 'The Grand Canyon State'],
							['2', '用Siteid滤重', 'The Grand Canyon State']
					  ],
	                  typeAhead: true,
	                  forceSelection: true,
	                  triggerAction: 'all',
	                  emptyText:'请选择其中一种...',
	                  selectOnFocus:true,
	                  value:'0'
	            }	            					
			
			],
			buttons:[
				{
					text : '同步测试环境',
					id : 'btn_sync',
					handler : function(){
							syncForm.form.reset();
							syncForm.isAdd = true;
							syncWin.setTitle("同步数据");
							syncWin.show();
					
					}				
				},			
				{
					text : '提交到线上',
					id : 'btn_submmit',
					handler : function(){
									if(Ext.getCmp('frequency').getEl().dom.value >= 43200 && Ext.getCmp('frequency').getEl().dom.value <= 86400){
						 				Ext.MessageBox.confirm('提示', '您设置的更新周期为12-24小时之间，为保证数据展现无误，请及时审核！', submitForm);
						 			}else
						 				submitForm("yes");
					
								}
				},
				{
					text : '关闭',
					handler : function(){
						win.hide();
					}
				}
			]
		});
		
		//删除原有窗口对象
		win = Ext.getCmp('input_window');
		if(win){
			win.destroy();
		}
		var win = new Ext.Window({
			id: 'input_window',
			layout:'fit',
		    width:750,
		    closeAction:'hide',
			resizable : false,
			shadow : true,
			modal :true,
		    closable:true,
		    bodyStyle:'padding:5 5 5 5',
		    animCollapse:true,
			items:[inputForm],
			y: 100
		});
		
		//显示新建网页前台限制词记录窗口
		function showAdd(){
			inputForm.form.reset();
			inputForm.isAdd = true;
			Ext.getCmp('btn_sync').disable();
			win.setTitle("新增资源");
			win.show();
			bindingPicker();
			
		}
		
		String.prototype.replaceAll  = function(s1,s2){    
			return this.replace(new RegExp(s1,"gm"),s2);    
		}
		
		//显示修改网页前台限制词记录窗口
		function showModify(){
			var recs = recordGrid.getSelectionModel().getSelections();
			if(recs.length == 0){
				Ext.MessageBox.alert('提示','请选择要进行操作的记录！');
			}
			else if(recs.length > 1)
				Ext.MessageBox.alert("提示","每次只能修改一条记录信息。")
			else{
				//加载
				inputForm.form.reset();
				inputForm.isAdd = false;
				Ext.getCmp('btn_sync').enable();
				win.setTitle("修改记录信息");
				win.show();
				
				inputForm.form.load({
					waitMsg : '正在加载数据请稍后',//提示信息
					waitTitle : '提示',//标题
					url : 'open.do?method=getRes&r='+Math.random(),//请求的url地址
					params : {resId : recs[0].get("id")},
					method:'GET',//请求方式
					success:function(form,action){//加载成功的处理函数
										//if(recs[0].get("url")!=)
						if(document.getElementById("url").value!=recs[0].get("url"))
							Ext.MessageBox.alert('提示','URL数据不一致，请确认或者F5重新刷新页面重试！');
					},
					failure:function(form,action){//加载失败的处理函数
						Ext.Msg.alert('提示','数据加载失败');
					}
				});
				
	
			}

		}
		
		function bindingPicker(){
			//给上下线时间预置当前时间和翌日当前时间
			Ext.getCmp('start_time_string').setValue(getTimeAfterNow(0));
			
			document.getElementById('start_time_string').onclick = function(){
				WdatePicker({skin:'ext',dateFmt:'yyyy-MM-dd HH:mm:ss'  });
			};

		}
		
		//
		function batchCheck(){
			var recs = getCheckedIdList();
			var num = recs.length;
			if(num==0){
				Ext.MessageBox.alert('提示','请选择要进行操作的记录！');
			}else{
				var msgTip = Ext.MessageBox.show({
					title:'提示',
					width : 250,
					msg:'正在更新资源状态请稍后......'
				});
				Ext.Ajax.request({
					url : 'open.do?method=batchCheckRes',
					params : {recordIdList : recs.toString()},
					method : 'GET',
					success : function(response,options){
						msgTip.hide();
						var result = Ext.util.JSON.decode(response.responseText);
						if(result.success){
							//服务器端数据成功删除后，同步删除客户端列表中的数据
							store.load({params:{start:0, limit:PageSize}});
							Ext.Msg.alert('提示','更新资源成功。');
						}else{
							Ext.Msg.alert('提示','更新资源失败！');
						}
					},
					failure : function(response,options){
						msgTip.hide();
						Ext.Msg.alert('提示','更新资源失败！');
					}
				});			
			
			}
			
		}
		
		//显示删除网页前台限制词记录对话框
		function showDelete(){
			var recordIdList = getCheckedIdList();
			var num = recordIdList.length;
			
			Ext.MessageBox.confirm("提示","您确定要删除所选记录吗？",function(btnId){
				if(btnId == 'yes')
					deleteRecord(recordIdList);
			});
			
		}
		//删除网页前台限制词记录
		function deleteRecord(recordIdList){
			var msgTip = Ext.MessageBox.show({
				title:'提示',
				width : 250,
				msg:'正在删除此记录信息请稍后......'
			});
			Ext.Ajax.request({
				url : 'open.do?method=delRes',
				params : {recordIdList : recordIdList.toString()},
				method : 'GET',
				success : function(response,options){
					msgTip.hide();
					var result = Ext.util.JSON.decode(response.responseText);
					if(result.success){
						//服务器端数据成功删除后，同步删除客户端列表中的数据
						store.load({params:{start:0, limit:PageSize}});
						Ext.Msg.alert('提示','删除记录成功。');
					}else{
						Ext.Msg.alert('提示','删除记录失败！');
					}
				},
				failure : function(response,options){
					msgTip.hide();
					Ext.Msg.alert('提示','删除记录失败！');
				}
			});
		}

		
		//提交表单数据
		function submitForm(btn){
		
			if(btn == 'no'){
				return;
			}
		
			//判断当前执行的提交操作，isAdd为true表示执行网页前台限制词记录新增操作，false表示执行网页前台限制词记录修改操作
			if( inputForm.form.isValid() ){
					//if(Ext.getCmp('url').getEl().dom.readOnly = false;){
					
				//	}
					
					if(inputForm.isAdd){
						//新增网页前台限制词记录信息
						inputForm.form.submit({
							clientValidation:true,//进行客户端验证
							waitMsg : '正在提交数据请稍后',//提示信息
							waitTitle : '提示',//标题
							url : 'open.do?method=addRes',//请求的url地址
							method:'POST',//请求方式
							success:function(form,action){//加载成功的处理函数
								win.hide();
								store.load({params:{start:0, limit:PageSize}});
								Ext.Msg.alert('提示','新增资源记录成功');
							},
							failure:function(form,action){//新增失败的处理函数
								var failcause = action.result.cause;
								Ext.MessageBox.show({
						           title: '提示',
						           msg: '新增Anchor黑名单记录失败。原因是:<br>'+failcause,
						           buttons: Ext.MessageBox.OK,
						           icon: Ext.MessageBox.ERROR
						        });
							}
						});
					}//if
					else{
						//修改网页前台限制词记录信息
						inputForm.form.submit({
							clientValidation:true,//进行客户端验证
							waitMsg : '正在提交数据请稍后',//提示信息
							waitTitle : '提示',//标题
							url : 'open.do?method=modifyRes',//请求的url地址
							method:'POST',//请求方式
							success:function(form,action){//加载成功的处理函数
								win.hide();
								store.load({params:{start:0, limit:PageSize}});
								Ext.Msg.alert('提示','修改资源记录成功');
							},
							failure:function(form,action){//加载失败的处理函数
								var failcause = action.result.cause;
								Ext.MessageBox.show({
						           title: '提示',
						           msg: '修改资源记录失败。原因是:<br>'+failcause,
						           buttons: Ext.MessageBox.OK,
						           icon: Ext.MessageBox.ERROR
						        });
							}
						});
					}//else
				}
		}
		
		//取得所选域名记录信息
		function getCheckedIdList(){
			var recs = recordGrid.getSelectionModel().getSelections();
			var list = [];
			if(recs.length == 0){
				Ext.MessageBox.alert('提示','请选择要进行操作的记录！');
				return;
			}else{
				for(var i = 0 ; i < recs.length ; i++){
					var rec = recs[i];
					list.push(rec.get('id')+"|"+rec.get('resStatus'));
				}
			}
			return list;
		}

		//同步测试环境
		var syncForm = new Ext.FormPanel({
			name:"syncForm",
			labelSeparator : ":",
			frame:true,
			border:false,
			autoHeight: true,
			labelWidth : 130, 
			items : [
				{
					xtype:'textfield',
					width : 200,
					allowBlank : false,
					blankText : '数据库地址不能为空',
					name : 'db_host',
					id : 'db_host',
					value : "xen-vr-test03",
					fieldLabel:'<font color=red>*</font>数据库地址'
				},
				{
					xtype:'textfield',
					width : 200,
					allowBlank : false,
					blankText : '数据库地址不能为空',
					name : 'db_name',
					id : 'db_name',
					value : "aladdin",
					fieldLabel:'<font color=red>*</font>数据库名'
				},				
				{
					xtype:'textfield',
					width : 150,
					allowBlank : false,
					blankText : '用户名不能为空',
					name : 'db_user',
					id : 'db_user',
					value : "youngteam",
					fieldLabel:'<font color=red>*</font>用户名'
				},
				{
					xtype:'textfield',
					width : 150,
					inputType:"password",
					allowBlank : false,
					blankText : '密码不能为空',
					name : 'db_pwd',
					id : 'db_pwd',
					value : "youngteam",
					fieldLabel:'<font color=red>*</font>密码'
				},
				{
					xtype:'hidden',
					name : 'test_res_id',
					id :'test_res_id'
				}
			],
			buttons:[
				{
					text : '提交',
					id : 'btn_bat_sub',
					handler : submitSyncForm
				},
				{
					text : '关闭',
					handler : function(){
						syncWin.hide();
					}
				}
			]
		});			
		
		var syncWin = new Ext.Window({
			id: 'sync_window',
			layout:'fit',
		    width:750,
		    closeAction:'hide',
			resizable : false,
			shadow : true,
			modal :true,
		    closable:true,
		    bodyStyle:'padding:5 5 5 5',
		    animCollapse:true,
			items:[syncForm],
			y: 200
		});	
		
		function submitSyncForm(){
				var recs = recordGrid.getSelectionModel().getSelections();
				
				
						inputForm.form.submit({
							clientValidation:true,//进行客户端验证
							waitMsg : '正在提交数据请稍后',//提示信息
							waitTitle : '提示',//标题
							url : 'open.do?method=modifyRes&act=sync',//请求的url地址
							params : {
								db_host:document.getElementById("db_host").value,
								db_name:document.getElementById("db_name").value,
								db_user:document.getElementById("db_user").value,
								db_pwd:document.getElementById("db_pwd").value
							},
							method:'POST',//请求方式
							success:function(form,action){//加载成功的处理函数
								syncWin.hide();
								Ext.Msg.alert('提示','同步资源记录成功');
							},
							failure:function(form,action){//新增失败的处理函数
								
								var failcause = action.result.cause;
								Ext.MessageBox.show({
						           title: '提示',
						           msg: '同步记录失败。原因是:<br>'+failcause,
						           buttons: Ext.MessageBox.OK,
						           icon: Ext.MessageBox.ERROR
						        });
							}
						});				
				
				
				/*
				syncForm.form.submit({
					clientValidation:true,//进行客户端验证
					waitMsg : '正在提交数据请稍后',//提示信息
					waitTitle : '提示',//标题
					url : 'vropen/sync.jsp',//请求的url地址
					params : {resId : recs[0].get("id")},
					method:'POST',//请求方式
					success:function(form,action){//加载成功的处理函数
						syncWin.hide();
						Ext.Msg.alert('提示','新增资源记录成功');
					},
					failure:function(form,action){//新增失败的处理函数
						//var failcause = action.result.cause;
						Ext.MessageBox.show({
				           title: '提示',
				           msg: '同步数据失败。原因是:<br>',//+failcause,
				           buttons: Ext.MessageBox.OK,
				           icon: Ext.MessageBox.ERROR
				        });
					}
				});		*/
		}
		
		
		function synchronize(){
			
			var msgTip = Ext.MessageBox.show({
				title:'提示',
				width : 250,
				msg:'正在向线上发送网页前台限制词同步信号，请稍候......'
			});
			Ext.Ajax.request({
				url : 'open.do?method=syncTest',
				//params : {deploytype : 'front'},
				method : 'POST',
				success : function(response,options){
					msgTip.hide();
					var result = Ext.util.JSON.decode(response.responseText);	
					if(result.success){
						//服务器端数据成功删除后，同步删除客户端列表中的数据
						//store.load({params:{start:0, limit:18}});
						Ext.Msg.alert('提示','词表同步成功！');
					}else{
						Ext.Msg.alert('提示','词表同步失败！'+ result.cause);
					}	
				},
				failure : function(response,options){
					msgTip.hide();
					Ext.Msg.alert('提示','词表同步失败！');
				}
			});
		}

		function getTimeAfterNow(after_mnt){ //当前日期后after_mnt分钟
			var clock = '';
		    var now = new Date();
		    now.setMinutes(now.getMinutes()+after_mnt);
		    
		    var yy = now.getFullYear(); 
		    var month = now.getMonth()+1;
		    var dd = now.getDate();

		    clock = yy + '-';
		    if (month < 10) clock += '0'; 
		    clock += month+'-'; 
		    if (dd < 10) clock += '0'; 
		    clock += dd+' '; 
		    
		    var hh = now.getHours(); 
		    var mm = now.getMinutes(); 
		    var ss = now.getTime() % 60000; 
		    ss = (ss - (ss % 1000)) / 1000; 

		    if (hh < 10) clock += '0'; 
		    clock += hh+':'; 
		    if (mm < 10) clock += '0'; 
		    clock += mm+':'; 
		    if (ss < 10) clock += '0'; 
		    clock += ss; 
		    return(clock); 
		}
		
		var escapespecial={"¤":"%A1%E8","§":"%A1%EC","¨":"%A1%A7","°":"%A1%E3","±":"%A1%C0","・":"%A1%A4","×":"%A1%C1","à":"%A8%A4","á":"%A8%A2","è":"%A8%A8","é":"%A8%A6","ê":"%A8%BA","ì":"%A8%AC","í":"%A8%AA","ò":"%A8%B0","ó":"%A8%AE","÷":"%A1%C2","ù":"%A8%B4","ú":"%A8%B2","ü":"%A8%B9","+":"%2B"};
		function rescape(s) {
	        var r = ""
	        if (typeof(s) == "undefined")
	                return r
	        for (var i=0;i<s.length; i++) {
	                var c = s.charAt(i);
	                if( typeof(escapespecial[c]) != "undefined")
	                        r=r+escapespecial[c];
	                else
	                        r=r+escape(c);
	        }
	        return r;
		}
			
		//开始查询代码
		function query(tag){
			var name ;
			var url;
			var type;
			var vrid;
			var classNo;
			var autoCheck;
			if(tag){
				name = document.getElementById("q_resName").value;
				url = document.getElementById("q_resUrl").value;
				type = document.getElementById("q_vrType").value;
				vrid = document.getElementById("q_vrId").value;
				classNo = document.getElementById("q_classNo").value;
				autoCheck = document.getElementById("q_autoCheck").value;
			}else{
				name = '';
				url = '';
				type = '';
				vrid = '';
				classNo = '';
				autoCheck = 0;
				document.getElementById("q_resName").value='';
				document.getElementById("q_resUrl").value='';
				document.getElementById("q_vrType").value = '';
				document.getElementById("q_autoCheck").value = -1;
				document.getElementById("q_vrId").value='';
				document.getElementById("q_classNo").value='';				
			}
			
			var url = "open.do?method=showResList&url="+encodeURIComponent(url)+"&name="+encodeURIComponent(name)+"&type="+type+"&autoCheck="+autoCheck
						+"&vrid="+vrid+"&classno="+classNo;
			store.proxy.conn.url = url;
			store.load({params:{start:0, limit:PageSize}});
		}
		
		dr.render('dr');
		
	});
</script>
<body>

<div id="dr" style="width:100%;height:30%;"></div>
<div id='grid-div' style="width:100%; height:75%;"></div>
</body>
</html>
<style type="text/css">
	.vrnews {
		color:#9C9C9C;
		font-size:13px;
		line-height:1.4;
	}
	.vrnews ul {
		list-style-image:none;
		list-style-position:outside;
		list-style-type:none;
		padding-left:16px;
	}
	#content {
		clear:left;
		margin-bottom:28px;
		width:533px;
	}
	#content DIV {	
		PADDING-RIGHT: 10px;	
		PADDING-LEFT: 10px;	
		MARGIN-BOTTOM: 19px;	
		PADDING-BOTTOM: 0px;	
		PADDING-TOP: 0px
	}
	#content h2, #content h3 {
		color:#9C9C9C;
		font-weight:normal;
	}
	#content h2 a, #content h3 a {
		font-size:16px;
	}
	a:link {
		color:#0000CC;
		text-decoration:underline;
	}
	#content p {
		font-size:13px;
		font-family:Arial,Helvetica,sans-serif;
		line-height:1.4;
		text-align:justify;
	}
	.url, .agentads .url, .agentads .url a:link, .agentads .url a:visited {
		color:#008000;
	}
</style>