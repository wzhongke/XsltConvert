<%@ page language="java" contentType="text/html; charset=GBK"
    pageEncoding="GBK"%>
<html>
<head>
	<meta http-equiv="Content-Type" content="text/html; charset=GBK">
	<title>域名表记录列表</title>
</head>
<script type="text/javascript">

	Ext.namespace('Ext.exampledata');
	Ext.exampledata.matchrule_list = [
 		['2','2级:模糊文字匹配', 'The Heart of Dixie'],
        ['3','3级:精确文字匹配', 'The Land of the Midnight Sun']
     ];
     
    var showLogo;
	function getTimeAfterNow(after_mnt){ //当前日期后after_mnt分钟
		var clock = '';
	    var now = new Date();
	    now.setMinutes(now.getMinutes()+after_mnt);
	    
	    var yy = now.getFullYear(); 
	    var month = now.getMonth()+1;
	    var dd = now.getDate();

	    clock = yy + '-';
	    if (month < 10) clock += '0'; 
	    clock += month+'-'; 
	    if (dd < 10) clock += '0'; 
	    clock += dd+' '; 
	   
	   	/* 
	    var hh = now.getHours(); 
	    var mm = now.getMinutes(); 
	    var ss = now.getTime() % 60000; 
	    ss = (ss - (ss % 1000)) / 1000; 

	    if (hh < 10) clock += '0'; 
	    clock += hh+':'; 
	    if (mm < 10) clock += '0'; 
	    clock += mm+':'; 
	    if (ss < 10) clock += '0'; 
	    clock += ss; 
	    */
	    return(clock); 
	}	   
     
	Ext.onReady(function(){
		//创建新增或单独修改表记录信息的form表单
		Ext.QuickTips.init();
		Ext.form.Field.prototype.msgTarget = 'side';//统一指定错误信息提示方式
		
		//定义数据集对象
		var store = new Ext.data.Store({//配置分组数据集
			reader: new Ext.data.XmlReader({
				totalRecords: "results",
				record: "PicHuman",
				id: "id"
			},
			Ext.data.Record.create([
				{name: 'idStr'},
				{name: 'sort'},
				{name: 'keyword'},
				{name: 'title'},
				{name: 'docId'},
				{name: 'miniPic'},
				{name: 'pageUrl'},
				{name: 'picUrl'},
				{name: 'picSize'},
				{name: 'picWidth'},
				{name: 'picHeight'},
				{name: 'groupId'},
				{name: 'groupCount'},
				{name: 'pornLevel'},
				{name: 'user'},
				{name: 'rank',type: 'int'},
				{name: 'operation'},
				{name: 'modifyTime'},
				{name: 'startTime'},
				{name: 'endTime'},
				{name: 'status'}
			])
			),
			proxy : new Ext.data.HttpProxy({
				url : 'picUIS.do?method=getRecordList'
			}),
			sortInfo: {field: 'id', direction: 'DESC'},
	  		remoteSort: true
		})
		
		
		
		<%//根据权限信息显示工具栏
		StringBuffer toolbar_str = new StringBuffer();
    	toolbar_str.append("{ text : '添加',iconCls:'add',handler : showAdd },");
		toolbar_str.append("{ text : '修改',iconCls:'option',handler : showModify},");		
	   	//toolbar_str.append("{ text : '删除',iconCls:'remove',handler : showDelete},"); 
	   	toolbar_str.append("'-',");
	   	
	   	if(((Integer)session.getAttribute("tb_pic_human_batchadd") )==1) 	    	
	   		toolbar_str.append("{ text : '批量固排数据',iconCls:'batch-add',handler : showBatchAdd },");
    	if(((Integer)session.getAttribute("tb_pic_human_batchadd") )==1)	
    		toolbar_str.append("{ text : '批量拷贝数据',iconCls:'batch-add',handler : showBatchCopy },");
    	toolbar_str.append("{ text : '批量取消固排',iconCls:'batch-remove',handler : showCancelFR },");
    	toolbar_str.append("'-',");
    	//toolbar_str.append("{ text : '数据上线',iconCls:'option',handler : synchronize},");
    	toolbar_str.append("{ text : '数据上线',iconCls:'option',handler : synchronizenew},");
	    //toolbar_str.deleteCharAt(toolbar_str.length()-1);
	    %>
		//创建工具栏组件
		var toolbar = new Ext.Toolbar([
		    <%=toolbar_str.toString()%>
		]);
    	    	
    	//创建分页工具栏
    	var pagingBar = new Ext.PagingToolbar({
	        pageSize: 18,
	        store: store,
	        displayInfo: true,
	        displayMsg: '显示 {0} - {1} , 共 {2} 条记录',
	        emptyMsg: "没有任何记录"
	        //,items:[{text : '导出',iconCls:'option',handler : exportExcel}]
    	});
		//创建Grid表格组件
		var cb = new Ext.grid.CheckboxSelectionModel();
		//创建过滤器
		var filters = new Ext.grid.GridFilters({
		  filters:[
		    {type: 'numeric',  dataIndex: 'id'},
		    {type: 'string',  dataIndex: 'url'},
		    {type: 'boolean', dataIndex: 'tag_block'},
		    {type: 'boolean', dataIndex: 'tag_reversible'},
		    {
		      type: 'list',  
		      dataIndex: 'extra_attr', 
		      options: ['无价值', '死链', '非中文'],
		      phpMode: true
		    },
		    {type: 'string',  dataIndex: 'user'},
		    {type: 'date',  dataIndex: 'sub_date'},
		    {type: 'string',  dataIndex: 'info'}
		]});



		function typeRenderer(val){
	        if(val == 1){
	            return '精确匹配';
	        }else if(val == 2){
	            return '模糊匹配';
	        }else
		        return '';
    	}

		

		//开始查询表单部分
		var dr = new Ext.FormPanel({
	    	labelWidth: 125,
	        frame: true,
	  	  	bodyStyle:'padding:5px 5px 0',
	  	  	autoWidth :true,
	  	  	//width: 1240,
	  	  	labelAlign: 'left',
	        defaults: {width: 175},
	      	//增加表单键盘事件
	        keys:[
	         {
	             key: [10,13],
	             fn:query
	         } ],
	         items: [
	            {
				    layout:'column',
				    width : 930,
				    border:false,
				    items:[
				        	{
		                        layout:'form',
		                        columnWidth:.4,
		                        labelWidth : 70, 
		                        border:false,
		                        items:[
		                                {
		                                	xtype:'textfield',
		                					width : 250,
		                					id : 'query_keyword',
		                					name : 'query_keyword',
		                					fieldLabel:'关键词'
		                                }
		                            ]
		                    },{
							    layout:'column',
							    columnWidth:.6,
							    border:false,
							    items:[
										{
						                    columnWidth:.5,
						                    labelWidth : 60, 
						                    layout: 'form',
						                    border:false,
						                    items: [{
						                        xtype:'radio',
						                        fieldLabel:'查找方式',
						                        boxLabel:'精确查找',
						                        checked: true,
						                        name:'query_matchType',
						                        anchor:'100%',
						                        inputValue: 1
						                    }]
						                },
						                {   
						                    columnWidth:.5,
						                    layout: 'form',
						                    border:false,
						                    items: [{
						                        xtype:'radio',
						                        boxLabel:'模糊查找',
						                        hideLabel: true,
						                        name:'query_matchType',
						                        anchor:'100%',
						                        inputValue: 0
						                    }]
						                }
							      ]
							}
						]
	        	}],
			buttons:[
				{
					text : '查询',
					handler : function(){
						query(true);
					}
				},
				{
					text : '返回',
					handler : function(){
						query(false);
					}
				}
			]
	      });
		showLogo = function(logo){
			/*
			logoDiv = document.createElement('div');
			logoDiv.id = "lll";
			logoDiv.style="border:1px solid #000000;width:100px;height:100px;";
			logoDiv.innerHTML = "<img src=\""+ logo +"\">"; 
			*/
		}
		
		function keywordLink(val,metadata,record){
			var link = '<a target="_blank" href="http://pic.sogou.com/pics?query='+val+'&forceQuery=on" onmouseover="showLogo(\''+ record.get("miniPic") +'\');">'+val+'</a>';
			return link;		
		}
	
		function videoLink(val){
			var link = '<a target="_blank" href="'+val+'">'+val+'</a>';
			return link;			
		}

		var recordGrid = new Ext.grid.GridPanel({
			applyTo : 'grid-div',
			tbar : toolbar,
			frame:true,
			loadMask: true,
			//plugins: filters,
			autoScroll: true,
			autoWidth :true,
			//width: 1240,
			store: store,
			viewConfig : {
				autoFill : true
			},
			sm : cb,
			columns: [//配置表格列
				new Ext.grid.RowNumberer({
					header : '行号',
					width : 40
				}),//表格行号组件
				cb,
				{header: "编号", width: 15, dataIndex: 'idStr', sortable: true},
				{header: "查询词", width: 20, dataIndex: 'keyword', renderer: keywordLink,sortable: true},
				{header: "标题", width: 30, dataIndex: 'title', sortable: true},
				{header: "原图地址", width: 20, dataIndex: 'picUrl',sortable: true},
				{header: "页面地址", width: 20, dataIndex: 'pageUrl', sortable: true},
				{header: "排名", width: 10, dataIndex: 'rank', sortable: true},
				{header: "操作", width: 10, dataIndex: 'operation', sortable: true},
				{header: "状态", width: 10, dataIndex: 'status', sortable: true},
				{header: "修改时间", width: 20, dataIndex: 'modifyTime', sortable: true},
				{header: "上线时间", width: 20, dataIndex: 'startTime', sortable: true},
				{header: "下线时间", width: 20, dataIndex: 'endTime', sortable: true},
				{header: "提交者", width: 15, dataIndex: 'user', sortable: true}
				//,
				//{header: "修改时间",width:50,dataIndex:'lastModified',sortable:true}
			],
	        // paging bar on the bottom
	        bbar: pagingBar
			
		});
		// trigger the data store load
    	store.load({params:{start:0, limit:18}});

     	var inputForm = new Ext.FormPanel({
			labelSeparator : ":",
			frame:true,
			border:false,
			autoHeight: true,
			id : 'inputform',
			labelWidth : 60, 
			labelAlign  : 'right', 
			items : [
				{
					layout:'column',
				    width : 980,
				    border:false,
					items:[
				            {		          
			 					layout:'column',
							    width : 850,
							    border:false,
							    items:[
							            {
							                layout:'form',
							                columnWidth:.2,
							                border:false,
							                items:[ { xtype:'textfield',id:'keyword1', name : 'keyword1', width : 100,  labelSeparator: '', fieldLabel:'查询词:<br>',
													enableKeyEvents : true,
													listeners:{
														change:{fn:function(txtcomp, eventobj ){
																loadForm(1);
														}}//change ends
													}								                
							                 } ]
							            },
							            {
							                layout:'form',
							                columnWidth:.2,
							                border:false,
							                labelWidth : 40, 
							                items:[ { xtype:'textfield', id:'docId1', name : 'docId1',readOnly:true, width : 100, labelSeparator: '', fieldLabel:'DocId:<br>',value:"" } ]
							            },							            
							            {
							                layout:'form',
							                columnWidth:.1,
							                border:false,
							                labelWidth : 40, 
							                items:[ { xtype:'textfield', id:'rank1', name : 'rank1', width : 35, labelSeparator: '', fieldLabel:'固排:<br>',value:1 } ]
							            },
							            {
							                layout:'form',
							                columnWidth:.5,
							                border:false,
							                items:[ { xtype:'textfield', id:'picUrl1', name : 'picUrl1', width : 350,  labelSeparator: '', fieldLabel:'图片URL:<br>',
													enableKeyEvents : true,
													listeners:{
														change:{fn:function(txtcomp, eventobj ){
																loadForm(1);
														}}//change ends
													}
							                 } ]
							            },
							            {
							                layout:'form',
							                columnWidth:.4,
							                border:false,
							                items:[ { xtype:'textfield', id:'title1', name : 'title1', width : 270,  labelSeparator: '', fieldLabel:'标题:<br>' } ]
							            },
							            {
							                layout:'form',
							                columnWidth:.6,
							                border:false,
							                items:[ { xtype:'textfield', id:'pageUrl1',name : 'pageUrl1', width : 385, labelSeparator: '', fieldLabel:'页面URL:<br>' } ]
							            },
								        {
							                layout:'form',
							                columnWidth:.2,
							                border:false,
							                items:[ { xtype:'textfield',id:'pornLevel1', name : 'pornLevel1', width : 45, value:0, labelSeparator: '', fieldLabel:'色情级别:<br>' } ]
							            },{
							                layout:'form',
							                columnWidth:.2,
							                border:false,
							                items:[ { xtype:'textfield',id:'picSize1', name : 'picSize1', width : 65,  labelSeparator: '', fieldLabel:'原始大小:<br>' } ]
							            },
										{
							                layout:'form',
							                columnWidth:.1,
							                border:false,
							                labelWidth : 30, 
							                items:[ { xtype:'textfield', id:'picWidth1',name : 'picWidth1', width : 45,  labelSeparator: '', fieldLabel:'宽:' } ]
							            },{
							                layout:'form',
							                columnWidth:.1,
							                border:false,
							                labelWidth : 30, 
							                items:[ {  xtype:'textfield', id:'picHeight1',name : 'picHeight1', width : 45,  labelSeparator: '', fieldLabel:'高:' } ]
							             },	
										{
							                layout:'form',
							                columnWidth:.4,
							                border:false,
							                //items:[ {  xtype: 'textfield',  fieldLabel: '缩略图',  allowBlank : true, name: 'file',  inputType: 'file'  } ]
							                items:[ {  xtype:'textfield', id:'miniPic1',name : 'miniPic1', width : 250,  labelSeparator: '', fieldLabel:'缩略图:' } ]
							       
							            },
							            {
							                layout:'form',
							                 columnWidth:.2,
							                border:false,
							                items:[ {  xtype:'textfield', id:'groupId1',name : 'groupId1', width : 45,  labelSeparator: '', fieldLabel:'检索来源(st):' } ]
							             },	
							             {
							                layout:'form',
							                columnWidth:.2,
							                border:false,
							                items:[ {  xtype:'textfield', id:'groupCount1',name : 'groupCount1', width : 45,  labelSeparator: '', fieldLabel:'组图数量:' } ]
							             },
										{
							                layout:'form',
							                columnWidth:.2,
							                //labelWidth : 40, 
							                border:false,
							                items:[ { xtype:'textfield', id : 'modifyTime1', name : 'modifyTime1', width : 95, fieldLabel:'修改日期', cls:'Wdate',value:getTimeAfterNow(0)} ]
							            },							             
										{
							                layout:'form',
							                columnWidth:.2,
							                //labelWidth : 40, 
							                border:false,
							                items:[ { xtype:'textfield', id : 'startTime1', name : 'startTime1', width : 95, fieldLabel:'上线日期', cls:'Wdate',value:getTimeAfterNow(0)} ]
							            },
										{
							                layout:'form',
							                columnWidth:.2,
							                //labelWidth : 40, 
							                border:false,
							                items:[ { xtype:'textfield', id : 'endTime1', name : 'endTime1', width : 95, fieldLabel:'下线日期', cls:'Wdate',value:'2050-01-01'} ]
							            }								            	
							            						             							             						            							            							            							            
							    ]						                	
				           
				            },
							{
								xtype:'hidden',
								name : 'id1'
							},				            										            
				            {
				                layout:'column',
				      			width : 90,
				      			style:{"float": "right"},
					    	    border:false,
				                items:[ {
				                	xtype:'panel',
									html: ' <img id="logo1" src="photos/dsc_0079.jpg"  height="95" />' 
				                },
				                {
				                	xtype:'panel',
									html: ' <input type="button" value="上传" onclick="uploadPic(1);"/>' 
				                } ]		
				            }					
					]
				},
				{
					id:'recordMore',
		            xtype:'fieldset',
		            title: '更多记录',
		            collapsible: true,
		            collapsed: true,
		            autoHeight:true,
		            items :[
		            
		            <%
		            int count = 5;
		            for(int i = 2;i <= count ;i++){%>
				        /*第二条记录*/
						{
						    layout:'column',
						    width : 980,
						    border:false,
						    items:[
					            {		          
				 					layout:'column',
								    width : 850,
								    border:false,
								    items:[
								            {
								                layout:'form',
								                columnWidth:.2,
								                border:false,
								                items:[ { xtype:'textfield',id:'keyword<%=i%>', name : 'keyword<%=i%>', width : 100,  labelSeparator: '', fieldLabel:'查询词:<br>',
														enableKeyEvents : true,
														listeners:{
															change:{fn:function(txtcomp, eventobj ){
																	loadForm(<%=i%>);
															}}//change ends
														}								                
								                 } ]
								            },
								            {
								                layout:'form',
								                columnWidth:.2,
								                border:false,
								                labelWidth : 40, 
								                items:[ { xtype:'textfield', id:'docId<%=i%>', name : 'docId<%=i%>', readOnly:true,width : 100, labelSeparator: '', fieldLabel:'DocId:<br>',value:"" } ]
								            },							            
								            {
								                layout:'form',
								                columnWidth:.1,
								                border:false,
								                labelWidth : 40, 
								                items:[ { xtype:'textfield', id:'rank<%=i%>', name : 'rank<%=i%>', width : 35, labelSeparator: '', fieldLabel:'固排:<br>',value:1 } ]
								            },
								            {
								                layout:'form',
								                columnWidth:.5,
								                border:false,
								                items:[ { xtype:'textfield', id:'picUrl<%=i%>', name : 'picUrl<%=i%>', width : 350,  labelSeparator: '', fieldLabel:'图片URL:<br>' ,
													enableKeyEvents : true,
													listeners:{
														change:{fn:function(txtcomp, eventobj ){
																loadForm(<%=i%>);
														}}//change ends
													}	
								                } ]
								            },
								            {
								                layout:'form',
								                columnWidth:.4,
								                border:false,
								                items:[ { xtype:'textfield', id:'title<%=i%>', name : 'title<%=i%>', width : 270,  labelSeparator: '', fieldLabel:'标题:<br>' } ]
								            },
								            {
								                layout:'form',
								                columnWidth:.6,
								                border:false,
								                items:[ { xtype:'textfield', id:'pageUrl<%=i%>',name : 'pageUrl<%=i%>', width : 385, labelSeparator: '', fieldLabel:'页面URL:<br>' } ]
								            },
									        {
								                layout:'form',
								                columnWidth:.2,
								                border:false,
								                items:[ { xtype:'textfield',id:'pornLevel<%=i%>', name : 'pornLevel<%=i%>', width : 45, value : 0, labelSeparator: '', fieldLabel:'色情级别:<br>' } ]
								            },{
								                layout:'form',
								                columnWidth:.2,
								                border:false,
								                items:[ { xtype:'textfield',id:'picSize<%=i%>', name : 'picSize<%=i%>', width : 65,  labelSeparator: '', fieldLabel:'原始大小:<br>' } ]
								            },
											{
								                layout:'form',
								                columnWidth:.1,
								                border:false,
								                labelWidth : 30, 
								                items:[ { xtype:'textfield', id:'picWidth<%=i%>',name : 'picWidth<%=i%>', width : 45,  labelSeparator: '', fieldLabel:'宽:' } ]
								            },{
								                layout:'form',
								                columnWidth:.1,
								                border:false,
								                labelWidth : 30, 
								                items:[ {  xtype:'textfield', id:'picHeight<%=i%>',name : 'picHeight<%=i%>', width : 45,  labelSeparator: '', fieldLabel:'高:' } ]
								             },	
											{
								                layout:'form',
								                columnWidth:.4,
								                border:false,
								                //items:[ {  xtype: 'textfield',  fieldLabel: '缩略图',  allowBlank : true, name: 'file',  inputType: 'file'  } ]
								                items:[ {  xtype:'textfield', id:'miniPic<%=i%>',name : 'miniPic<%=i%>', width : 250,  labelSeparator: '', fieldLabel:'缩略图:' } ]
								       
								            },
								            {
								                layout:'form',
								                 columnWidth:.2,
								                border:false,
								                items:[ {  xtype:'textfield', id:'groupId<%=i%>',name : 'groupId<%=i%>', width : 45,  labelSeparator: '', fieldLabel:'检索来源(st):' } ]
								             },	
								             {
								                layout:'form',
								                columnWidth:.2,
								                border:false,
								                items:[ {  xtype:'textfield', id:'groupCount<%=i%>',name : 'groupCount<%=i%>', width : 45,  labelSeparator: '', fieldLabel:'组图数量:' } ]
								             },
											{
								                layout:'form',
								                columnWidth:.2,
								                //labelWidth : 40, 
								                border:false,
								                items:[ { xtype:'textfield', id : 'modifyTime<%=i%>', name : 'modifyTime<%=i%>', width : 95, fieldLabel:'修改日期', cls:'Wdate',value:getTimeAfterNow(0)} ]
								            },							             
											{
								                layout:'form',
								                columnWidth:.2,
								                //labelWidth : 40, 
								                border:false,
								                items:[ { xtype:'textfield', id : 'startTime<%=i%>', name : 'startTime<%=i%>', width : 95, fieldLabel:'上线日期', cls:'Wdate',value:getTimeAfterNow(0)} ]
								            },
											{
								                layout:'form',
								                columnWidth:.2,
								                //labelWidth : 40, 
								                border:false,
								                items:[ { xtype:'textfield', id : 'endTime<%=i%>', name : 'endTime<%=i%>', width : 95, fieldLabel:'下线日期', cls:'Wdate',value:'2050-01-01'} ]
								            }								            	
								            						             							             						            							            							            							            
								    ]						                	
					           
					            },
								{
									xtype:'hidden',
									name : 'id<%=i%>'
								},				            										            
					            {
					                layout:'column',
					      			width : 90,
					      			style:{"float": "right"},
						    	    border:false,
					                items:[ {
					                	xtype:'panel',
										html: ' <img id="logo<%=i%>" src="photos/dsc_0079.jpg"  height="95" />' 
					                },
					                {
					                	xtype:'panel',
										html: ' <input type="button" value="上传" onclick="uploadPic(<%=i%>);"/>' 
					                } ]		
					            }			
						    ]
						}
						<%if(i< count){%>
						,
						{
						    height: 15
						},
						<%}%>
						<%}%>	
		            ]
		        }
			],
			buttons:[
				{
					text : '提交',
					handler : submitForm
				},
				{
					text : '关闭',
					handler : function(){
						win.hide();
					}
				}
			]
		});


		//删除原有窗口对象
		win = Ext.getCmp('input_window');
		if(win){
			win.destroy();
		}
		//创建弹出窗口
		var win = new Ext.Window({
			id: 'input_window',
			layout:'fit',
		    autoHeight:true,
		    width : 1000,
		    closeAction:'hide',
			resizable : false,
			shadow : true,
			modal :true,
		    closable:true,
		    bodyStyle:'padding:5 5 5 5',
		    animCollapse:true,
			items:[inputForm]			
		});
		
		//显示新建域名表记录窗口
		function showAdd(){
			inputForm.form.reset();
			inputForm.isAdd = true;
			Ext.getCmp("recordMore").setVisible(true);
			if(document.getElementById("logo1"))
				document.getElementById("logo1").src = "xxx";			
			win.setTitle("新增记录信息");
			win.show();
			bindingPicker();
			Ext.getCmp("keyword1").getEl().dom.value = document.getElementById("query_keyword").value ;
		}
		//显示修改域名表记录窗口
		function showModify(){
			var recs = recordGrid.getSelectionModel().getSelections();
			if(recs.length == 0){
				Ext.MessageBox.alert('提示','请选择要进行操作的记录！');
			}
			else if(recs.length > 1)
				Ext.MessageBox.alert("提示","每次只能修改一条记录信息。")
			else{
				//加载
				//alert(recs[0].get("title_1"));
				inputForm.form.reset();
				inputForm.isAdd = true;
				win.setTitle("修改记录信息");
				win.show();
				bindingPicker();
				Ext.getCmp("recordMore").setVisible(false);
				
				
				Ext.getCmp("keyword1").getEl().dom.value = recs[0].get("keyword") ;
				Ext.getCmp("docId1").getEl().dom.value = recs[0].get("docId") ;
             	Ext.getCmp("title1").getEl().dom.value = recs[0].get("title") ;
				Ext.getCmp("pageUrl1").getEl().dom.value = recs[0].get("pageUrl") ;				
				Ext.getCmp("picUrl1").getEl().dom.value = recs[0].get("picUrl") ;
				Ext.getCmp("miniPic1").getEl().dom.value = recs[0].get("miniPic") ;
				Ext.getCmp("pornLevel1").getEl().dom.value = recs[0].get("pornLevel") ;
							
				Ext.getCmp("picSize1").getEl().dom.value = recs[0].get("picSize") ;
				Ext.getCmp("picWidth1").getEl().dom.value = recs[0].get("picWidth") ;
				Ext.getCmp("picHeight1").getEl().dom.value = recs[0].get("picHeight") ;
				Ext.getCmp("groupId1").getEl().dom.value = recs[0].get("groupId") ;
				Ext.getCmp("groupCount1").getEl().dom.value = recs[0].get("groupCount") ;
				Ext.getCmp("modifyTime1").getEl().dom.value = recs[0].get("modifyTime").substring(0,10); 
				Ext.getCmp("startTime1").getEl().dom.value = recs[0].get("startTime").substring(0,10); 
				Ext.getCmp("endTime1").getEl().dom.value = recs[0].get("endTime").substring(0,10); 
								
				if(recs[0].get("idStr")!=""){
					Ext.getCmp("rank1").getEl().dom.value = recs[0].get("rank");
				}
				document.getElementById("logo1").src = recs[0].get("miniPic");
			}
		}
		
		function bindingPicker(){
			for(var i = 1;i<6;i++){
				Ext.get('modifyTime'+i).on('click',function(){
					WdatePicker({      skin:'ext',    dateFmt:'yyyy-MM-dd'    });
				});		
				Ext.get('startTime'+i).on('click',function(){
					WdatePicker({      skin:'ext',    dateFmt:'yyyy-MM-dd'    });
				});
				Ext.get('endTime'+i).on('click',function(){
					WdatePicker({      skin:'ext',    dateFmt:'yyyy-MM-dd'    });
				});		
			}	
		}
				
		//加载表单数据
		function loadForm(index){
			var keyword = Ext.getCmp('keyword'+index).getValue();
			var url = Ext.getCmp('picUrl'+index).getValue();
			if(keyword =="" || url == ""){
				return;	
			}
			if(inputForm.isAdd == false)
				return;
			
			var msgTip = Ext.MessageBox.show({
				title:'提示',
				width : 250,
				msg:'正在加载记录信息请稍候......'
			});
			Ext.Ajax.request({
				url : 'picUIS.do?method=getRecordByKeyUrl',
				params : { keyword : keyword, url : url },
				method : 'POST',
				success : function(response,options){
					msgTip.hide();
					var result = Ext.util.JSON.decode(response.responseText);
					//给各字段绑定加载到的值
					if(result.data != null){
						//if(result.data.title)
							Ext.getCmp("title"+index).getEl().dom.value = result.data.title ;
						//if(result.data.pageUrl)
							Ext.getCmp("pageUrl"+index).getEl().dom.value = result.data.pageUrl ;
						
						//if(result.data.miniPic){
							Ext.getCmp("miniPic"+index).getEl().dom.value = result.data.miniPic ;
							document.getElementById("logo"+index).src = result.data.miniPic ;
							//Ext.getCmp("logo"+index).getEl().dom.value = result.data.miniPic ;
						//}
						//if(result.data.docId)
							Ext.getCmp("docId"+index).getEl().dom.value = result.data.docId ;
						//if(result.data.picSize)
							Ext.getCmp("picSize"+index).getEl().dom.value = result.data.picSize ;
						//if(result.data.picWidth)
							Ext.getCmp("picWidth"+index).getEl().dom.value = result.data.picWidth ;
						//if(result.data.picHeight)
							Ext.getCmp("picHeight"+index).getEl().dom.value = result.data.picHeight ;
						//if(result.data.groupId)
							Ext.getCmp("groupId"+index).getEl().dom.value = result.data.groupId ;
						//else
						//	Ext.getCmp("groupId"+index).getEl().dom.value = 0;
						//if(result.data.groupCount)
							Ext.getCmp("groupCount"+index).getEl().dom.value = result.data.groupCount ;
						//if(result.data.pornLevel)
							Ext.getCmp("pornLevel"+index).getEl().dom.value = result.data.pornLevel ;						
						//if(result.data.rank)	
							Ext.getCmp("rank"+index).getEl().dom.value = result.data.rank ;
						if(result.data.modifyTime)
							Ext.getCmp("modifyTime"+index).getEl().dom.value = result.data.modifyTimeStr ;
						if(result.data.startTime)	
							Ext.getCmp("startTime"+index).getEl().dom.value = result.data.startTimeStr ;
						if(result.data.endTime)	
							Ext.getCmp("endTime"+index).getEl().dom.value = result.data.endTimeStr ;
																			
						if(result.data.idStr!="")
							Ext.getCmp("id"+index).getEl().dom.value = result.data.idStr ;	
						
						var recs =recordGrid.getSelectionModel().getSelections();
						if(recs.length == 0 ){
						    Ext.getCmp("rank1").getEl().dom.value =1 ;
						}else{
						    Ext.getCmp("rank1").getEl().dom.value = recs[0].get("rank")+1;    
						}
												

					}else{
						Ext.getCmp("title"+index).getEl().dom.value = '' ;
						Ext.getCmp("pageUrl"+index).getEl().dom.value = '';
						Ext.getCmp("miniPic"+index).getEl().dom.value = '';
						Ext.getCmp("docId"+index).getEl().dom.value = '';
						Ext.getCmp("docId"+index).getEl().dom.value = '';
						Ext.getCmp("picSize"+index).getEl().dom.value = '';
						Ext.getCmp("picWidth"+index).getEl().dom.value = '';
						Ext.getCmp("picHeight"+index).getEl().dom.value = '';
						Ext.getCmp("groupId"+index).getEl().dom.value = '';
						Ext.getCmp("groupCount"+index).getEl().dom.value = '';
						Ext.getCmp("pornLevel"+index).getEl().dom.value = '';
						Ext.getCmp("rank"+index).getEl().dom.value = '1';
						Ext.getCmp("id"+index).getEl().dom.value = '';
						/*
						Ext.getCmp("snap_url"+index).getEl().dom.value = '' ;
						Ext.getCmp("sur_text"+index).getEl().dom.value = '' ;
						Ext.getCmp("tag"+index).getEl().dom.value = '' ;
						Ext.getCmp("duration"+index).getEl().dom.value = '' ;
						*/
					}
					
				}
			});
		}
		
		//取消固排
		function showCancelFR(){
			var recordIdList = getCheckedIdList();
			
			if(recordIdList.length > 0){
				Ext.MessageBox.confirm("提示","您确定取消固排吗？",function(btnId){
					if(btnId == 'yes')
						cancelRecord(recordIdList);
				});
			}
		}
		
		function cancelRecord(recordIdList){
			var msgTip = Ext.MessageBox.show({
				title:'提示',
				width : 250,
				msg:'正在取消视频固排信息请稍后......'
			});
			Ext.Ajax.request({
				url : 'picUIS.do?method=cancelRecord',
				params : {recordIdList : recordIdList.toString()},
				method : 'POST',
				success : function(response,options){
					msgTip.hide();
					var result = Ext.util.JSON.decode(response.responseText);
					if(result.success){
						//服务器端数据成功删除后，同步删除客户端列表中的数据
						store.load({params:{start:0, limit:18}});
						Ext.Msg.alert('提示','取消固排信息成功。');
					}else{
						Ext.Msg.alert('提示','取消固排信息失败');
					}
				},
				failure : function(response,options){
					msgTip.hide();
					Ext.Msg.alert('提示','取消固排信息失败！');
				}
			});			
		}		
		
		//显示删除域名表记录对话框
		function showDelete(){
			var recs = recordGrid.getSelectionModel().getSelections();
			
			var list = [];
			if(recs.length == 0){
				Ext.MessageBox.alert('提示','请选择要进行操作的记录！');
				return;
			}else{
				for(var i = 0 ; i < recs.length ; i++){
					var rec = recs[i];
					var idStr = "";
					if(rec.get('idStr'))
						idStr = rec.get('idStr');
					var info = idStr+"|"+rec.get('keyword')+"|"+rec.get('pageUrl');
					list.push(info);
				}
			}
			
			Ext.MessageBox.confirm("提示","您确定要删除所选记录吗？",function(btnId){
				if(btnId == 'yes'){
					deleteRecord(list.toString());
				}
			});
		}
		
		//删除表记录
		function deleteRecord(recordIdList){
			var msgTip = Ext.MessageBox.show({
				title:'提示',
				width : 250,
				msg:'正在删除视频记录信息请稍后......'
			});
			Ext.Ajax.request({
				url : 'videoUIS.do?method=deleteRecord',
				params : {recordIdList : recordIdList.toString()},
				method : 'POST',
				success : function(response,options){
					msgTip.hide();
					var result = Ext.util.JSON.decode(response.responseText);
					if(result.success){
						//服务器端数据成功删除后，同步删除客户端列表中的数据
						store.load({params:{start:0, limit:18}});
						Ext.Msg.alert('提示','删除视频记录信息成功。');
					}else{
						Ext.Msg.alert('提示','删除视频干预信息失败！');
					}
				},
				failure : function(response,options){
					msgTip.hide();
					Ext.Msg.alert('提示','删除视频记录请求失败！');
				},
				timeout:300000
			});
		}
		
		function validateForm(){
			var MIN_TITLE_LEN = 1;
			var MAX_TITLE_LEN = 256;
			var MIN_TEXT_LEN = 1;
			var MAX_TEXT_LEN = 1024;			
			var URLREG = "^((https|http|ftp|rtsp|mms)?://)"; 
			var re=new RegExp(URLREG); 
			
			var msg="";
			var empty = 0;
			
			for(var i=1;i<6;i++){//.getEl().dom.value
			
				var keyword = Ext.getCmp('keyword'+i).getValue();
				var title = Ext.getCmp('title'+i).getValue();
				var pageUrl =  Ext.getCmp("pageUrl"+i).getValue();				
				var picUrl = Ext.getCmp("picUrl"+i).getValue();
				var miniPic = Ext.getCmp("miniPic"+i).getValue();
							
				var picSize = Ext.getCmp("picSize"+i).getValue();
				var picWidth = Ext.getCmp("picWidth"+i).getValue();
				var  picHeight =  Ext.getCmp("picHeight"+i).getValue();
				var groupId =  Ext.getCmp("groupId"+i).getValue();
				var groupCount = Ext.getCmp("groupCount"+i).getValue();
				
				var rank = Ext.getCmp('rank'+i).getValue();		
				
				if(keyword=="" && picUrl=="" && title=="" && pageUrl=="" && miniPic=="" && picSize=="" && picWidth==""){
					empty++;
					continue;
				}	
				
				
				if( keyword.length < MIN_TITLE_LEN ){
					msg += "关键词过短";
					break;
				}
				if( keyword.length > MAX_TITLE_LEN ){
					msg += "关键词过长";
					break;
				}
				if( rank <= 0 || rank>255)//|| (rank > 127 && rank != 255)
				{
		            msg += "固排位置非法，必须是大于等于1而且小于等于255的数字";//，如果大于127必须等于255
					break;
				}
				if( title.length < MIN_TITLE_LEN ) 
				{
					msg += "视频标题过短";
					break;
				}
				if( title.length > MAX_TITLE_LEN ) 
				{
					msg += "视频标题过长";
					break;
				}

				if(!re.test(picUrl)){
					msg += "图片地址不正确";
					break;
				}
				
				if(!picUrl){
					msg += "图片地址无效";
					break;
				}
				if( picUrl.length < MIN_TEXT_LEN ) 
				{
					msg += "图片地址过短";
					break;
				}
				if( picUrl.length > MAX_TEXT_LEN ) 
				{
					msg += "图片地址过长";
					break;
				}
		
				if(!re.test(pageUrl)){
					msg += "页面URL不正确";
					break;
				}		
		
				if( pageUrl.length < MIN_TEXT_LEN ) 
				{
					msg += "页面URL过短";
					break;
				}
				if( pageUrl.length > MAX_TEXT_LEN ) 
				{
					msg += "页面URL过长";
					break;
				}								
			}

			if(empty==5){
				Ext.MessageBox.alert('提示','记录不能为空！');
				return false;			
			}
			
			if(msg!=""){
				Ext.MessageBox.alert('提示',"第"+i+"条记录"+msg);
				return false;
			}
			
			return true;
		}		
		
		//提交表单数据
		function submitForm(){
			if(!validateForm())
				return; 
		
			//判断当前执行的提交操作，isAdd为true表示执行域名表记录新增操作，false表示执行域名表记录修改操作
			if( inputForm.form.isValid() ){
					//新增域名表记录信息
					inputForm.form.submit({
						clientValidation:true,//进行客户端验证
						waitMsg : '正在提交数据请稍后',//提示信息
						waitTitle : '提示',//标题
						url : 'picUIS.do?method=addRecord',//请求的url地址
						method:'POST',//请求方式
						success:function(form,action){//加载成功的处理函数
							win.hide();
							var failcause = action.result.cause;
							Ext.MessageBox.show({
					           title: '提示',
					           msg: '完成新增图片干预记录操作。<br><br><br>' + failcause , 
					           buttons: Ext.MessageBox.OK,
					           icon: Ext.MessageBox.INFO
					        });
							store.load({params:{start:0, limit:18}});
						},
						failure:function(form,action){//加载失败的处理函数
							win.hide();
							var failcause = action.result.cause;
							Ext.MessageBox.show({
					           title: '提示',
					           msg: '新增图片干预记录失败。原因是:<br>'+failcause,
					           buttons: Ext.MessageBox.OK,
					           icon: Ext.MessageBox.ERROR
					        });
						}
					});

			}//if( inputForm.form.isValid() )
		}
		//取得所选域名记录信息
		function getCheckedIdList(){
			var recs = recordGrid.getSelectionModel().getSelections();
			var list = [];
			if(recs.length == 0){
				Ext.MessageBox.alert('提示','请选择要进行操作的记录！');
			}else{
				for(var i = 0 ; i < recs.length ; i++){
					var rec = recs[i];
					list.push(rec.get('idStr'));
				}
			}
			return list;
		}
		
		var addContentChange = false;
		previewBatch = function(){
		
			var keyword = Ext.getCmp("batchKeyword").getEl().dom.value;
			var itemsContent = Ext.getCmp("addContent").getEl().dom.value;
			var itemsArr = itemsContent.split("\n");
			var itemCount = 0;
			
		
			if(!addContentChange){
				itemsContent = "";
				var urls = document.getElementsByName("rankUrl");
				for(var i=0;i<urls.length;i++){
					itemsContent += urls[i].value+"\n";
				}				
			
			}
			
			Ext.getCmp("addContent").getEl().dom.value = itemsContent;
			
			var html = "";
			var msgTip = Ext.MessageBox.show({
				title:'提示',
				width : 250,
				msg:'正在加载记录信息请稍候......'
			});			
			
			Ext.Ajax.request({
				url : 'picUIS.do?method=getBatchRecord',
				waitMsg : '正在提交数据请稍后',//提示信息
				waitTitle : '提示',//标题
				params : { batchKeyword : keyword, addContent : itemsContent },
				method : 'POST',
				success : function(response,options){
					msgTip.hide();
					var result = Ext.util.JSON.decode(response.responseText);
					//给各字段绑定加载到的值
					if(result.data != null){
						var items = result.data.items;
						for(var i=0;i<items.length;i++){
							html += '<div style="margin-left:150px;">'+ (i+1) + ':&nbsp;<input type="text" onclick="this.focus();" name="rankUrl" style="height:20px;" size=50 value="'+ items[i].picUrl.toString() +'"><img style="padding-left:10px;" src="'+ items[i].miniPic.toString() +'" height=50></div>';			
							document.getElementById("previewLabel").innerHTML = html;
						}
					}
					addContentChange = false;			
				}
			});	
			
		}
		
		
		//批量固排
		var addBatchForm = new Ext.FormPanel({
			name:"addBatch",
			labelSeparator : ":",
			frame:true,
			border:false,
			autoHeight: true,
			labelWidth : 130, 
			items : [
				{
				    layout:'column',
				    border:false,
				    //width:700,
				    autoHeight:true,
				    items:[
						  {
							  layout:'form',
							  border:false,
							    //width:700,
							    autoHeight:true,
							    items:[	
									{
										xtype:'textfield', 
										id : 'batchKeyword', 
										name : 'batchKeyword', 
										border:false,
										allowBlank : false,
										blankText : '关键词不能为空',
									    labelWidth : 100,
										labelSeparator: '',
										fieldLabel:'关键词'
						            }							    
							    ]
							},
						  {
							  layout:'form',
							  border:false,
							    autoHeight:true,
							    items:[	
									{
					                	xtype:'panel',
										html: ' <input type="button" value="缩略图预览" onclick="previewBatch();"/>' 				                	            
						            }							    
							    ]
							}							
						]	 
					/*   			    
				    		}
						,{
		                	xtype:'panel',
							html: ' <input type="button" value="上传" onclick="previewBatch();"/>' 				                	            
			            }
			         ]*/
				},						
			
				{
					xtype:'textarea',
					width : 550,
					height: 200,
					allowBlank : false,
					blankText : '内容不能为空',
					name : 'addContent',
					id : 'addContent',
					fieldLabel:'<font color=red>*</font>图片url 固排位置（\\t分隔,不填写固排数据按添加顺序固排）:<font color=red>(多条记录换行隔开)</font>',
					listeners:{
						change:{fn:function(txtcomp, eventobj ){
								addContentChange = true;
						}}//change ends
					}
				},{
				   layout:'column',
						    border:false,
						    width:700,
						    height:200,
							autoScroll: true,
						    items:[
					            	{
										xtype:'label',
										id:'previewLabel',
										width:700,					
										html: ''
									}
					            ]
				}
			],
			buttons:[
				{
					text : '提交',
					id : 'btn_addBat_sub',
					handler : submitBatAdd
				},
				{
					text : '关闭',
					handler : function(){
						batchAddWin.hide();
					}
				}
			]
		});		
			
		//批量拷贝
		var copyBatchForm = new Ext.FormPanel({
			name:"copyBatch",
			labelSeparator : ":",
			frame:true,
			border:false,
			autoHeight: true,
			labelWidth : 130, 
			items : [
				{
					xtype:'textarea',
					width : 350,
					height: 200,
					allowBlank : false,
					blankText : '内容不能为空',
					name : 'keywordList',
					id : 'keywordList',
					fieldLabel:'<font color=red>*</font>复制到如下关键字下:<font color=red>(多个关键字请用换行隔开)</font>'
				}
			],
			buttons:[
				{
					text : '提交',
					id : 'btn_bat_sub',
					handler : submitBatCopy
				},
				{
					text : '关闭',
					handler : function(){
						batchWin.hide();
					}
				}
			]
		});				
		

		//删除原有窗口对象
		batchAddWin = Ext.getCmp('batch_add_window');
		if(batchAddWin){
			batchAddWin.destroy();
		}
		
		var batchAddWin = new Ext.Window({
			id: 'batch_add_window',
			layout:'fit',
		    width:750,
		    closeAction:'hide',
			resizable : false,
			shadow : true,
			modal :true,
		    closable:true,
		    bodyStyle:'padding:5 5 5 5',
		    animCollapse:true,
			items:[addBatchForm],
			y: 100
		});				
		
		function showBatchAdd(){
			addBatchForm.form.reset();
			batchAddWin.setTitle("批量添加");
			batchAddWin.add(addBatchForm);
			batchAddWin.show();
			document.getElementById("previewLabel").innerHTML= "";
		}		
		
		function submitBatAdd(){
			if( addBatchForm.form.isValid() ){
						//新增网页前台限制词记录信息
						addBatchForm.form.submit({
							clientValidation:true,//进行客户端验证
							waitMsg : '正在提交数据请稍后',//提示信息
							waitTitle : '提示',//标题
							//params : {recordIdList : recordIdList.toString()},
							url : 'picUIS.do?method=batchAddRecord',//请求的url地址
							method:'POST',//请求方式
							success:function(form,action){//加载成功的处理函数
								batchAddWin.hide();
								store.load({params:{start:0, limit:18}});
								Ext.Msg.alert('提示','批量添加记录成功');
							},
							failure:function(form,action){//新增失败的处理函数
								var failcause = action.result.cause;
								Ext.MessageBox.show({
						           title: '提示',
						           msg: '批量添加记录失败。原因是:<br>'+failcause,
						           buttons: Ext.MessageBox.OK,
						           icon: Ext.MessageBox.ERROR
						        });
							},
							timeout:300000
						});		
			}			
		}
		
		
		//
		
		batchWin = Ext.getCmp('batch_input_window');
		if(batchWin){
			batchWin.destroy();
		}
		
		var batchWin = new Ext.Window({
			id: 'batch_input_window',
			layout:'fit',
		    width:750,
		    closeAction:'hide',
			resizable : false,
			shadow : true,
			modal :true,
		    closable:true,
		    bodyStyle:'padding:5 5 5 5',
		    animCollapse:true,
			items:[copyBatchForm],
			y: 100
		});		
		

		
		function showBatchCopy(){
			var list = getCheckedIdList();
			if(list.length==0)
				return;
			copyBatchForm.form.reset();
			batchWin.setTitle("批量拷贝");
			batchWin.add(copyBatchForm);
			batchWin.show();
			//url提示信息标签			
		}
		
		function submitBatCopy(){
			var recordIdList = getCheckedIdList();
			if( copyBatchForm.form.isValid() ){
						//新增网页前台限制词记录信息
						copyBatchForm.form.submit({
							clientValidation:true,//进行客户端验证
							waitMsg : '正在提交数据请稍后',//提示信息
							waitTitle : '提示',//标题
							params : {recordIdList : recordIdList.toString()},
							url : 'picUIS.do?method=batchCopyRecord',//请求的url地址
							method:'POST',//请求方式
							success:function(form,action){//加载成功的处理函数
								batchWin.hide();
								store.load({params:{start:0, limit:18}});
								Ext.Msg.alert('提示','批量拷贝记录成功');
							},
							failure:function(form,action){//新增失败的处理函数
								var failcause = action.result.cause;
								Ext.MessageBox.show({
						           title: '提示',
						           msg: '批量拷贝记录失败。原因是:<br>'+failcause,
						           buttons: Ext.MessageBox.OK,
						           icon: Ext.MessageBox.ERROR
						        });
							},
							timeout:300000
						});		
			}			
		}
		
		/****上传窗口*****/
		var fileForm = new Ext.form.FormPanel({ 
			labelSeparator : ":",
			frame:true,
			border:false,
			autoHeight: true,
			width: 300, 
			fileUpload: true,
			 items: [{ 
			    xtype: 'textfield', 
			    fieldLabel: '缩略图文件', 
			    allowBlank : false,
			    name: 'file1', 
			    inputType: 'file'//文件类型 
			  },
			  { 
			    xtype: 'hidden', 
			    name: 'sign_file1',
			    id:'sign_file1'  
			  }
			  ], 
		      
		     buttons: [{ 
		        text: '上传', 
		        handler: function() { 
		        	fileForm.getForm().submit({
		        		waitMsg : '正在上传数据请稍后',//提示信息
						waitTitle : '提示',//标题 
		        		failure: function(form, action){
				        	fileWin.hide();
				        	var errMsg = "上传成功！";
				        	var status,url;
				        	
				        	if(action["result"]){
				        		for(var i=0;i<action["result"].length;i++){
				        			status = action["result"][i]["status"];
				        			url = action["result"][i]["url"];
				        			info = action["result"][i]["info"];//,"info":{"size":845941,"width":1024,"height":768,"type":"jpg"}
				        		}
				        	}else{
				        		errMsg = "服务不可用";
				        	}
				        	
				        	if(url){
				        		Ext.getCmp("miniPic"+fileForm.index).getEl().dom.value = url;
				        		document.getElementById("logo"+fileForm.index).src = url+"&r="+Math.random();	
				        		Ext.getCmp("picSize"+fileForm.index).getEl().dom.value = info["size"];
				        		Ext.getCmp("picWidth"+fileForm.index).getEl().dom.value = info["width"];
				        		Ext.getCmp("picHeight"+fileForm.index).getEl().dom.value = info["height"];	        		
				        	}		
				        	
				        	Ext.Msg.alert('提示',errMsg);
				        }
		        	});
		       	}
		     }]
		});   
		       		
		
		
		var fileWin = new Ext.Window({
			layout:'fit',
		    width:380,
		    closeAction:'hide',
			resizable : false,
			shadow : true,
			modal :true,
		    closable:true,
		    bodyStyle:'padding:5 5 5 5',
		    animCollapse:true,
			items:[fileForm]
		});		
		
		
		/**上传窗口**/
		uploadPic = function(index){
			if(!Ext.getCmp("docId"+index).getEl().dom.value){
				Ext.Msg.alert('提示','缺少docId,请补充查询词及图片url来生成');
				return;
			}
		
			fileForm.form.reset();
			//fileForm.form.url = "http://localhost:8080/black/upload.html";
			fileForm.form.url = "/http_upload_js?appid=100520093";
			fileForm.index = index;
			fileWin.setTitle("缩略图上传");
			fileWin.show();
			Ext.getCmp("sign_file1").getEl().dom.value = Ext.getCmp("docId"+index).getEl().dom.value+".jpg";
		
		}	
		function synchronizenew(){
            var msgTip = Ext.MessageBox.show({
                title:'提示',
                width : 250,
                msg:'正在向线上发送数据，请稍候......'
            });

            var timer = setTimeout(function() {
                var script = document.createElement("script"),head = document.getElementsByTagName("head")[0];
                script.src="http://manual01.pic.sjs.vm.sogou-op.org:8001/ubs_spider";
                script.charset = "gbk";
                head.appendChild(script);
                msgTip.hide();
                Ext.Msg.alert('提示','词表上线成功！');
            },300);

        }
		
		//线上同步词表
		function synchronize(){
			var msgTip = Ext.MessageBox.show({
				title:'提示',
				width : 250,
				msg:'正在向线上发送数据，请稍候......'
			});
			Ext.Ajax.request({
				url : 'xml?act=sync&product=pic',
				//params : {deploytype : 'query'},
				method : 'GET',
				timeout :30000,
				success : function(response,options){
					msgTip.hide();
					var result = Ext.util.JSON.decode(response.responseText);
					if(result.success){
						//服务器端数据成功删除后，同步删除客户端列表中的数据
						store.load({params:{start:0, limit:18}});
						Ext.Msg.alert('提示','词表上线成功！');
					}else{
						Ext.Msg.alert('提示','词表上线失败！');
					}						
				},
				failure : function(response,options){
					msgTip.hide();
					Ext.Msg.alert('提示','词表线上同步失败！');
				}
			});
		}

		//开始查询代码
		function query(tag){
			//新增域名表记录信息
			var query_keyword ;
			if(tag)
				query_keyword = document.getElementById("query_keyword").value;
			else{
				query_keyword = '';
				document.getElementById("query_keyword").value='';
			}
			var query_matchType;
			if(document.getElementsByName("query_matchType")[0].checked)
				query_matchType = 1;
			else
				query_matchType = 2;
			
			var url = "picUIS.do?method=getRecordList&query_keyword="+encodeURIComponent(query_keyword)+"&query_matchType="+query_matchType;
			
			store.proxy.conn.url = url;
			store.load({params:{start:0, limit:18}});
		}
		
	    dr.render('dr');

	  	
	});
</script>
<body>
<div id="dr" style="width:100%;height:15%;"></div>
<div id='grid-div' style="width:100%; height:85%;"></div>
</body>
</html>