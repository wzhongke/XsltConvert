<%@ page language="java" contentType="text/html; charset=GBK"
    pageEncoding="GBK"%>
<%@ page import="java.sql.Timestamp,java.util.Date,java.text.SimpleDateFormat,com.sohu.frontweb.base.action.UmisAction"%>

<%
    SimpleDateFormat sdformat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
    Timestamp timestamp = new Timestamp(new Date().getTime());
   String currentTime =  sdformat.format(timestamp);
%>
<html>
<head>
	<meta http-equiv="Content-Type" content="text/html; charset=GBK">
	<title>域名表记录列表</title>
</head>
<script type="text/javascript">
	Ext.namespace('Ext.exampledata');
	Ext.exampledata.matchrule_list = [
 		['2','2级:模糊文字匹配', 'The Heart of Dixie'],
        ['3','3级:精确文字匹配', 'The Land of the Midnight Sun']
     ];
     
    Ext.exampledata.encombox_list = [
		['0','不屏蔽', 'The Heart of Dixie'],
	    ['1','条件词封禁', 'The Land of the Midnight Sun'],
	    ['2','结果词封禁', 'The Land of the Midnight Sun'],
	    ['3','两者都屏蔽', 'The Land of the Midnight Sun']
	 ]; 
    
 
     
	Ext.onReady(function(){
		var exportConditionUrl = 'hint_check.do?method=exportRecord';
		//创建新增或单独修改表记录信息的form表单
		Ext.QuickTips.init();
		Ext.form.Field.prototype.msgTarget = 'side';//统一指定错误信息提示方式


		var exportConditionUrl = 'hint_check.do?method=getRecordList';

		var pageSize=18;
		
		//定义数据集对象
		var store = new Ext.data.Store({//配置分组数据集
			reader: new Ext.data.XmlReader({
				totalRecords: "results",
				record: "WebhintCheckRecord",
				id: "id"
			},
			Ext.data.Record.create([
				{name: 'id'},
				{name:"url"},
				{name: 'queryword'},
				{name:"status"},
				{name:"title"},
				
				{name: 'type'},
				{name: 'create_time',type:'date', dateFormat: 'Y-m-d H:i:s'},
				{name: 'modify_time',type:'date', dateFormat: 'Y-m-d H:i:s'},				
				{name: 'start_time', type: 'date', dateFormat: 'Y-m-d H:i:s'},
				{name: 'end_time', type: 'date', dateFormat: 'Y-m-d H:i:s'},
				{name:"user"},
				{name: 'sync_status'},
                {name: 'sync_message'},
                {name: 'sync_modify_time',type:'date',dateFormat:'Y-m-d H:i:s'}
			])
			),
			proxy : new Ext.data.HttpProxy({
				url : 'hint_check.do?method=getRecordList'
			}),
			sortInfo: {field: 'create_time', direction: 'DESC'},
	  		remoteSort: true
		})

		
		<%//根据权限信息显示工具栏
		StringBuffer toolbar_str = new StringBuffer();
    	toolbar_str.append("{text : '新增',iconCls:'add',handler : showAdd},");
    	toolbar_str.append("{text : '修改',iconCls:'option',handler : showModify},");
    	toolbar_str.append("{text : '删除',iconCls:'remove',handler : showDelete},");
    	if(UmisAction.UMIS_HINT_USE_NEW_SYNC){    	    
    	    toolbar_str.append("{text : '快速同步new',iconCls:'batch-remove',handler : new_synchronize},");
    	    toolbar_str.append("{text : '取消同步',iconCls:'batch-remove',handler : cancel_synchronize},");
    	}
    	
    	toolbar_str.append("{text : '手动同步前台',iconCls:'remove',handler : showFrontSync},");
    	toolbar_str.append("{text : '接口说明',iconCls:'option',handler : showInterface},");
	    toolbar_str.deleteCharAt(toolbar_str.length()-1);
	    %>
		//创建工具栏组件
		var toolbar = new Ext.Toolbar([
		    <%=toolbar_str.toString()%>
		]);
    	
    	//创建分页工具栏
    	var pagingBar = new Ext.PagingToolbar({
	        pageSize: 18,
	        store: store,
	        displayInfo: true,
	        displayMsg: '显示 {0} - {1} , 共 {2} 条记录',
	        emptyMsg: "没有任何记录",
	        items:[{text : '导出',iconCls:'option',handler : exportExcel}]
    	});
		//创建Grid表格组件
		var cb = new Ext.grid.CheckboxSelectionModel();
		//创建过滤器
		var filters = new Ext.grid.GridFilters({
		  filters:[
		    {type: 'numeric',  dataIndex: 'id'},
		    {type: 'string',  dataIndex: 'url'},
		    {type: 'boolean', dataIndex: 'tag_block'},
		    {type: 'boolean', dataIndex: 'tag_reversible'},
		    {
		      type: 'list',  
		      dataIndex: 'extra_attr', 
		      options: ['无价值', '死链', '非中文'],
		      phpMode: true
		    },
		    {type: 'string',  dataIndex: 'user'},
		    {type: 'date',  dataIndex: 'sub_date'},
		    {type: 'string',  dataIndex: 'info'}
		]});

/*
 * [1, '搜狐最终页'],   
                            [4, '腾讯最终页'],  
                            [7, 'wap腾讯'],  
                            [0, '未知来源']
 */

		function typeRenderer(val){
	        if(val == 1){
	            return '搜狐最终页';
	        }else if(val == 4){
	            return '腾讯最终页';
	        }else if(val == 7){
	            return "wap腾讯";
	        }else if(val == 0){
	        	return "未知来源";
	        }else if(val==9){
	            return "手机搜狐";
	        }else
		        return val;
    	}
		function urlRenderer(val){
		    return "<a href=\""+val+"\" target=\"_blank\">"+val+"</a>";
		}
		function statusRenderer(val){
		    if(val == 0){
                return '下线';
            }else if(val == 1){
                return '人工固排';
            }else{
                return val;
            }
            
		}

		function exportExcel(){
		    alert("抱歉，暂不支持");
		}

		//开始查询表单部分
		var dr = new Ext.FormPanel({
	    	labelWidth: 125,
	        frame: true,
	  	  	bodyStyle:'padding:5px 5px 0',
	  	  	width: 960,
	  	  	labelAlign: 'left',
	        defaults: {width: 275},
	      	//增加表单键盘事件
	        keys:[
	         {
	             key: [10,13],
	             fn:query
	         } ],
	         items: [{
		        	xtype:'textfield',
					width : 400,
					id : 'query_keyword',
					name : 'query_keyword',
					fieldLabel:'推荐词'
		        },{
                    xtype:'radiogroup',
                    fieldLabel:'推荐词查找方式',
                    labelSeparator:':',
                    columns:2,
                    width:300,
                    items:[
                           {boxLabel:'精确查找',name:'query_keyword_matchType',inputValue:1,checked:true,border:false},
                           {boxLabel:'模糊查找',name:'query_keyword_matchType',inputValue:0,border:false}
                    ]                   
                },
                {
                    xtype:'textfield',
                    id:'query_url',
                    name:'query_url',
                    fieldLabel:'url',
                    width:400
                },
                {
		            xtype:'textfield',
		            id:'query_sub_user',
		            name:'query_sub_user',
		            fieldLabel:'提交人',
		            width:400
		        }],
			buttons:[
				{
					text : '查询',
					handler : function(){
						query(true);
					}
				},
				{
					text : '返回',
					handler : function(){
						query(false);
					}
				}
			]
	      });

		var recordGrid = new Ext.grid.GridPanel({
			applyTo : 'grid-div',
			tbar : toolbar,
			frame:true,
			loadMask: true,
			//plugins: filters,
			autoScroll: true,
			autoWidth:true,
			//width: 960,
			store: store,
			viewConfig : {
				autoFill : true
			},
			sm : cb,
			columns: [//配置表格列
				new Ext.grid.RowNumberer({
					header : '行号',
					width : 40
				}),//表格行号组件
				cb,
				{header: "编号", width: 30, dataIndex: 'id', sortable: true},
				{header: "推荐词", width: 80, dataIndex: 'queryword', sortable: true},			
				{header: "来源", width: 40, dataIndex: 'type', renderer: typeRenderer, sortable: true},
				{header: "url", width: 60, dataIndex: 'url', renderer:urlRenderer,sortable: true},
				//{header: "标题", width: 60, dataIndex: 'title', sortable: true},
				{header: "状态", width: 20, dataIndex: 'status', renderer: statusRenderer, sortable: true},
				{header: "提交者", width: 50, dataIndex: 'user', sortable: true},
				
				{header: "生效日期", width: 50, dataIndex: 'start_time', renderer: Ext.util.Format.dateRenderer('Y-m-d H:i:s'), sortable: true},
				{header: "失效日期", width: 50, dataIndex: 'end_time', renderer: Ext.util.Format.dateRenderer('Y-m-d H:i:s'), sortable: true},
				{header: "提交时间", width: 50, dataIndex: 'create_time', renderer: Ext.util.Format.dateRenderer('Y-m-d H:i:s'), sortable: true},
				{header: "快速同步状态", width: 75, dataIndex: 'sync_status',sortable: true,renderer:function(value,cellmeta,record){                  
                    if(value==1){cellmeta.attr="style=background-color:red";return "新增";}
                    if(value==2){cellmeta.attr="style=background-color:yellow";return "待同步";}
                    if(value==3){
                        var sync_modify_time = record.data['sync_modify_time'];
                        cellmeta.attr="style=background-color:yellow";
                        return "同步中";}
                    if(value==4){cellmeta.attr="style=background-color:green";return "同步成功";}
                    if(value==5){cellmeta.attr="style=background-color:red";return "同步失败";}
                    
                    var sync_modify_time = record.data['sync_modify_time'];
                    //return Ext.util.Format.date(sync_modify_time, 'Y-m-d H:i:s');
                    cellmeta.attr="style=background-color:red";
                    return "数据错误";}},
                {header: "同步信息", width: 75, dataIndex: 'sync_message'},
                {header: "同步修改时间", width: 75, dataIndex: 'sync_modify_time', renderer: Ext.util.Format.dateRenderer('Y-m-d H:i:s')}               
			],
	        // paging bar on the bottom
	        bbar: pagingBar
			
		});
		// trigger the data store load
    	store.load({params:{start:0, limit:pageSize}});
		

    	var inputForm = new Ext.FormPanel({
			labelSeparator : ":",
			frame:true,
			border:false,
			autoHeight: true,
			id : 'inputform',
			items : [
				{
					xtype:'textarea',
					cls:'tabclass',
					width:280,
					height:150,
					id:'queryword',
					name : 'queryword',
					fieldLabel:'<font color=red>*</font>推荐词<br><font color=red>填写12个推荐词,推荐词之间用英文逗号分隔</font>',
					allowBlank : false
				},
				{
                    xtype:'textfield',
                    allowBlank : false,
                    id : 'url',
                    name : 'url',
                    fieldLabel:'<font color=red>*</font>url'
                },
                {
                    xtype:'textfield',
                    allowBlank : false,
                    id : 'title',
                    name : 'title',
                    fieldLabel:'<font color=red>*</font>标题',
                },
                {
                    xtype:'textarea',
                    allowBlank : false,
                    width:250,
                    height:100,
                    id : 'content',
                    name : 'content',
                    fieldLabel:'<font color=red>*</font>内容',
                },
                {
                    xtype:'combo',
                    allowBlank : false,
                    fieldLabel:'<font color=red>*</font>来源',
                    hiddenName: 'type',
                    store: new Ext.data.SimpleStore({
                        fields: ['value', 'text'],
                        data: [
                            [1, '搜狐最终页'],
                            [9, '手机搜狐'], 
                            [4, '腾讯最终页'],  
                            [7, 'wap腾讯'],  
                            [0, '未知来源']
                        ]
                    }),
                    displayField: 'text',
                    valueField: 'value',
                    mode: 'local',
                    triggerAction: 'all',
                    emptyText:'请选择其中一种...',
                    blankText : '来源为必填项',
                    selectOnFocus:true,
                    typeAhead: true,
                    width :130,
                    forceSelection: true,
                    value: 1
                },{
                    xtype:'combo',
                    allowBlank : false,
                    fieldLabel:'<font color=red>*</font>状态',
                    hiddenName: 'status',
                    store: new Ext.data.SimpleStore({
                        fields: ['value', 'text'],
                        data: [
                            [0, '下线'],   
                            [1, '人工固排']
                        ]
                    }),
                    displayField: 'text',
                    valueField: 'value',
                    mode: 'local',
                    triggerAction: 'all',
                    emptyText:'请选择其中一种...',
                    blankText : '状态为必填项',
                    selectOnFocus:true,
                    typeAhead: true,
                    width :130,
                    forceSelection: true,
                    value: 1
                },
                {
                    xtype:'textfield',
                    allowBlank : false,
                    id : 'start_time_string',
                    name : 'start_time_string',
                    fieldLabel:'<font color=red>*</font>生效日期',
                    cls:'Wdate',
                    value: "<%=currentTime%>"
                },
                {
                    xtype:'textfield',
                    allowBlank : false,
                    id : 'end_time_string',
                    name : 'end_time_string',
                    fieldLabel:'<font color=red>*</font>失效日期',
                    cls:'Wdate',
                    value: '2050-01-01 07:00:00'
                },
                {
					xtype:'hidden',
					name : 'id'
				}
			],
			buttons:[
				{
					text : '提交',
					handler : submitForm
				},
				{
					text : '关闭',
					handler : function(){
						win.hide();
					}
				}
			]
		});


		//删除原有窗口对象
		win = Ext.getCmp('input_window');
		if(win){
			win.destroy();
		}
		//创建弹出窗口
		var win = new Ext.Window({
			id: 'input_window',
			layout:'fit',
		    width:480,
		    closeAction:'hide',
			resizable : false,
			shadow : true,
			modal :true,
		    closable:true,
		    bodyStyle:'padding:5 5 5 5',
		    animCollapse:true,
			items:[inputForm]
		});
		win.width = 480;
		//win.height = 350;

		//显示新建域名表记录窗口
		function showAdd(){
			inputForm.form.reset();
			inputForm.isAdd = true;
			win.setTitle("新增记录信息");
			win.show();
			bindingKeyDown();
			bindingPicker();
		}
		//显示修改域名表记录窗口
		function showModify(){
			var recordList = getCheckedIdList();
			var num = recordList.length;
			if(num > 1){
				Ext.MessageBox.alert("提示","每次只能修改一条记录信息。");
			}else if(num == 1){
				inputForm.isAdd = false;
				win.setTitle("修改记录信息");
				win.show();
				bindingKeyDown();
				bindingPicker();
				var recordId = recordList[0];
				loadForm(recordId);
			}
		}
		function bindingPicker(){
		    var wPicker = function(){
                WdatePicker({skin:'ext',dateFmt:'yyyy-MM-dd HH:mm:ss'});
            }
		    var start_time = document.getElementById("start_time_string");
		    start_time.onclick = wPicker;
            var end_time = document.getElementById("end_time_string");
            end_time.onclick = wPicker;

		}
    	  function stopEvent(evt){
    	        evt = evt||window.event;  
    	        if(evt.stopPropagation)
    	            evt.stopPropagation();
    	        if(evt.preventDefault)
    	            evt.preventDefault();
    	        evt.cancelBubble = true;
    	        evt.cancel = true;
    	        evt.returnValue = false;
    	        return false;
    	    }
		function getKeycode(evt){
		    evt=evt||window.event;
		    var keycode=evt.which||evt.keyCode;
		    return keycode;
		}
		function insertAtCursor(myField, myValue)
		{  
	        if (document.selection)
	        {  
	            myField.focus();
	            sel = document.selection.createRange();  
	            sel.text = myValue;  
	        }
	        else if (myField.selectionStart || myField.selectionStart == "0")
	        {  
	            var startPos = myField.selectionStart;
	            var endPos = myField.selectionEnd;
	            myField.value = myField.value.substring(0, startPos) + myValue + myField.value.substring(endPos, myField.value.length);
	            myField.selectionEnd = startPos+'\t'.length;
	        }
	        else
	        {  
	            myField.value += myValue;  
	        }
		}
		function bindingKeyDown(){	    
		    Ext.each(Ext.query(".tabclass"),function(item){
		        item.onkeydown=function(evt){
		            var keycode = getKeycode(evt);
	                if(keycode==9){
	                    stopEvent(evt);
	                    insertAtCursor(item,'\t');
	                }
		        }
		    });
		}
		//加载表单数据
		function loadForm(recordId){
			inputForm.form.load({
				waitMsg : '正在加载数据请稍后',//提示信息
				waitTitle : '提示',//标题
				url : 'hint_check.do?method=getRecordById',//请求的url地址
				params : {recordId : recordId},
				method:'GET',//请求方式
				success:function(form,action){//加载成功的处理函数
				},
				failure:function(form,action){//加载失败的处理函数
					Ext.Msg.alert('提示','数据加载失败');
				}
			});
		}
		//显示删除域名表记录对话框
		function showDelete(){
			var recordIdList = getCheckedIdList();
			var num = recordIdList.length;
			if(num == 0){
				return;
			}
			Ext.MessageBox.confirm("提示","您确定要删除所选记录吗？",function(btnId){
				if(btnId == 'yes')
					deleteRecord(recordIdList);
			})
		}
		//删除域名表记录
		function deleteRecord(recordIdList){
			var msgTip = Ext.MessageBox.show({
				title:'提示',
				width : 250,
				msg:'正在删除推荐词记录信息请稍后......'
			});
			Ext.Ajax.request({
				url : 'hint_check.do?method=deleteRecord',
				params : {recordIdList : recordIdList.toString()},
				method : 'POST',
				success : function(response,options){
					msgTip.hide();
					var result = Ext.util.JSON.decode(response.responseText);
					if(result.success){
						//服务器端数据成功删除后，同步删除客户端列表中的数据
						store.load({params:{start:0, limit:18}});
						Ext.Msg.alert('提示','删除推荐词记录信息成功。');
					}else{
						Ext.Msg.alert('提示','该推荐词记录失败！');
					}
				},
				failure : function(response,options){
					msgTip.hide();
					Ext.Msg.alert('提示','删除推荐词表记录请求失败！');
				}
			});
		}
		function checkLength(id){
		    var word=document.getElementById(id).value;
		    word=word.replace(/(^\s*)|(\s*$)/g, "");
		    if(word.length==0)return false;
		    return true;
		}
		
		function checkEnsugg(){
		    var suggType = document.getElementById("suggType").value;
		    if(suggType=="条件词封禁"){
		        if(!checkLength("condword"))return 1;
		    }
		    if(suggType=="结果词封禁"){
		        if(!checkLength("keyword"))return 2;
		    }
		    if(suggType=="两者都屏蔽"){
		        
                if(!checkLength("condword")||!checkLength("keyword"))return 3;
		    }
		    return 0;
		}
		//提交表单数据
		function submitForm(){
			//判断当前执行的提交操作，isAdd为true表示执行域名表记录新增操作，false表示执行域名表记录修改操作
			if( inputForm.form.isValid() ){
				if(inputForm.isAdd){
					//新增域名表记录信息
					inputForm.form.submit({
						clientValidation:true,//进行客户端验证
						waitMsg : '正在提交数据请稍后',//提示信息
						waitTitle : '提示',//标题
						url : 'hint_check.do?method=addRecord',//请求的url地址
						method:'POST',//请求方式
						success:function(form,action){//加载成功的处理函数
							win.hide();
							var failcause = action.result.cause;
							Ext.MessageBox.show({
					           title: '提示',
					           msg: '完成新增推荐词表记录操作。<br><br><br>' + failcause , 
					           buttons: Ext.MessageBox.OK,
					           icon: Ext.MessageBox.INFO
					        });
							store.load({params:{start:0, limit:18}});
						},
						failure:function(form,action){//加载失败的处理函数
							win.hide();
							var failcause = action.result.cause;
							Ext.MessageBox.show({
					           title: '提示',
					           msg: '新增推荐词表记录失败。原因是:<br>'+failcause,
					           buttons: Ext.MessageBox.OK,
					           icon: Ext.MessageBox.ERROR
					        });
						}
					});
				}else{
					//修改域名表记录信息
					inputForm.form.submit({
						clientValidation:true,//进行客户端验证
						waitMsg : '正在提交数据请稍后',//提示信息
						waitTitle : '提示',//标题
						url : 'hint_check.do?method=modifyRecord',//请求的url地址
						method:'POST',//请求方式
						success:function(form,action){//加载成功的处理函数
							win.hide();
							Ext.Msg.alert('提示','修改推荐词表记录成功');
							store.load({params:{start:0, limit:18}});
						},
						failure:function(form,action){//加载失败的处理函数
							var failcause = action.result.cause;
							win.hide();
							Ext.MessageBox.show({
					           title: '提示',
					           msg: '修改推荐词表记录失败。原因是:<br>'+failcause,
					           buttons: Ext.MessageBox.OK,
					           icon: Ext.MessageBox.ERROR
					        });
						}
					});
				}
			}
		}
		//取得所选域名记录信息
		function getCheckedIdList(){
			var recs = recordGrid.getSelectionModel().getSelections();
			var list = [];
			if(recs.length == 0){
				Ext.MessageBox.alert('提示','请选择要进行操作的记录！');
			}else{
				for(var i = 0 ; i < recs.length ; i++){
					var rec = recs[i];
					list.push(rec.get('id'));
				}
			}
			return list;
		}
		function updateFront(dateId){
		    Ext.Ajax.request({
                url : 'hint_check.do?method=updateFront',
                method : 'POST',
                params:{tablename:'ubs_white_web_urlrecommend',dataId:dateId},
                async:false,
                success : function(response,options){
                    var result;
                    eval("result="+response.responseText);
                    var success = result.success;
                    if(success){ 
                        alert("success");
                    }
                },
                failure:function(response,options){
                    alert("failed");
                }
            });
		}
	       //这里放一个进度条
        var pbar1=null;
        var processPDiv = { 
            progressRate:0,
            progressCode:1,
            progresstimer:null,
            progressCount:0,
            getProgressRate:function(){               
                Ext.Ajax.request({
                    url : 'progress.do?method=getProgress&c='+(new Date().getTime()),
                    method : 'POST',
                    params:{tablename:'ubs_white_web_urlrecommend',requestId:requestId},
                    async:false,
                    success : function(response,options){
                        var result;
                        eval("result="+response.responseText);
                        var success = result.success;
                        if(success){ 
                            processPDiv.progressRate = result.progress;
                            processPDiv.progressCode = result.code;
                        }
                    },
                    failure:function(response,options){
                        processPDiv.progressRate=-1;
                    }
                });
                return processPDiv.progressRate;
            },
            
            progressFunc:function(){
                if(pbar1==null){
                    var progressDiv = Ext.get("progress-div");
                    progressDiv.show();
                    
                    pbar1= new Ext.ProgressBar({ // 实例化进度条
                        renderTo : "progress-div",
                        width : 800, 
                        text : "同步进度...0%"
                    });
                }
                processPDiv.progressRate = processPDiv.getProgressRate(); 
                if(processPDiv.progressRate==-1){
                    if(processPDiv.progressCount<10){
                        processPDiv.progressCount++;
                        processPDiv.progresstimer=setTimeout(function(){processPDiv.progressFunc();},500);
                    }else{
                        clearTimeout(processPDiv.progresstimer);
                    }
                }else{
                    pbar1.updateProgress(processPDiv.progressRate/100.0);
                    pbar1.updateText("同步进度..."+processPDiv.progressRate+"%")
                    processPDiv.progresstimer=setTimeout(function(){processPDiv.progressFunc();},500);
                    if(processPDiv.progressCode==2||processPDiv.progressCode==3){
                        clearTimeout(processPDiv.progresstimer);
                        setTimeout(function(){
                            //执行完成的进度条去掉
                            processPDiv.clearPDiv();
                        },2000);
                        
                        if(dataId.length>0){
                            alert("10s之后发送前台更新请求，请稍候");
                            setTimeout(function(){
                                //执行完成的进度条去掉
                                updateFront(dataId);
                            },10000);
                        }
                        store.load({params:{start:0, limit:18}});
                    }
                }
            },
            clearPDiv:function(){
                var progressDiv = Ext.get("progress-div");
                progressDiv.hide();
            },
            hidePDiv:function(){
                if(processPDiv.progresstimer!=null)
                    clearTimeout(processPDiv.progresstimer);
                var progressDiv = Ext.get("progress-div");
                progressDiv.hide();
            },
            init:function(){
                var progressDiv = Ext.get("progress-div");
                if(progressDiv){
                    var children = progressDiv.dom.children;
                    var len = children.length;
                    for(var i=0;i<len;i++)
                    progressDiv.dom.removeChild(children[i]);
                }
                pbar1 = null;
                processPDiv.progressRate = 0;
                processPDiv.progressCode = 1;
                processPDiv.progresstimer=null;
                processPDiv.progressFunc();
                
            }
        }
        var requestId=null;
        var dataId=null;
        function cancel_synchronize(){
            var confirmTip = Ext.MessageBox.confirm("提示","您确定取消同步操作吗？",function(){
                Ext.Ajax.request({
                    url : 'progress.do?method=canceldeploy',
                    params : {deploytype : 'query',tablename:'ubs_white_web_urlrecommend',requestId:requestId},
                    method : 'POST',
                    success : function(response,options){
                        var result;
                        eval("result="+response.responseText);
                        var success = result.success;
                        if(success){ 
                            processPDiv.hidePDiv();
                        }
                        Ext.Msg.alert('提示',result.msg);
                        store.load({params:{start:0, limit:18}});
                    }
                });               
            });
        }
		//线上同步词表
		function new_synchronize(){
			var msgTip = Ext.MessageBox.show({
				title:'提示',
				width : 250,
				msg:'正在向线上发送推荐词同步信号，请稍候......'
			});
			Ext.Ajax.request({
				url : 'progress.do?method=newdeploy',
				params : {deploytype : 'hint',tablename:'ubs_white_web_urlrecommend',requestType:'other'},
				method : 'POST',
				success : function(response,options){
                    msgTip.hide();
                    var result;
                    eval("result="+response.responseText);
                    var success = result.success;
                    if(success){ 
                        requestId = result.requestId;
                        dataId = result.dataId;
                        processPDiv.init();
                    }
                    Ext.Msg.alert('提示',result.msg);
                    store.load({params:{start:0, limit:18}}); 
				}
			});
		}
		<%
		String interfaceInfo = "queryword(推荐词)<br>type(来源)<br>url(URL)<br>status(状态)<br>";
        interfaceInfo+= "create_time(创建时间)<br>modify_time(修改时间)<br>start_time(生效时间)<br>end_time(失效时间)<br>user(用户)<br>";
        interfaceInfo+= "sync_status(同步状态)<br>sync_message(同步信息)<br>sync_modify_time(同步修改时间)<br>";
		%>
		function showInterface(){
            var info = "<table>"+
                            "<tr ><td><b>参数说明：</b></td><td></td></tr>"+
                           
                            "<tr ><td>table:</td><td>数据库表名(ubs_white_web_urlrecommend)</td></tr>"+
                            "<tr ><td><b>数据库字段</b></td><td></td></tr>"+
                            "<tr ><td></td><td><%=interfaceInfo%></td></tr>"+
                       "</table>";
        
            Ext.MessageBox.show({
                  title: '接口说明',
                  msg: info ,
                  width:10000,
                  buttons: Ext.MessageBox.YESNO
                  //,icon: Ext.MessageBox.QUESTION
            });     
        }
		
		function showFrontSync(){
		    var recordIdList = getCheckedIdList();
            var num = recordIdList.length;
            if(num == 0){
                Ext.Msg.alert('提示',"请选择同步数据");
                return;
            }
            Ext.MessageBox.confirm("提示","您确定要同步所选记录吗？",function(btnId){
                if(btnId == 'yes')
                    updateFront(recordIdList.join(","));
            })
		}


		//将 是否封禁首页和是否留首封站 的代码解析成 文本
		function booleantag(val){
	        if(val == 1){
	            return '是';
	        }else if(val == 0){
	            return '否';
	        }else
		        return '';
    	}
		//开始查询代码
		function query(tag){
			//新增域名表记录信息
			var query_keyword ;
			if(tag)
				query_keyword = document.getElementById("query_keyword").value;
			else{
				query_keyword = '';
				document.getElementById("query_keyword").value='';
			}
			var query_keyword_matchType;
			if(document.getElementsByName("query_keyword_matchType")[0].checked)
			    query_keyword_matchType = 1;
			else
			    query_keyword_matchType = 0;
			
			var query_sub_user = document.getElementById("query_sub_user").value;
			var url = $("#query_url").val();
			var param = [];
			param.push("method=getRecordList");
			param.push("query_keyword="+escape(query_keyword));
			param.push("query_keyword_matchType="+query_keyword_matchType);
			param.push("query_sub_user=" + escape(query_sub_user));
			param.push("query_url="+url);
			
			var url = "hint_check.do?"+param.join("&");
			//导出条件
			exportConditionUrl = "hint_check.do?method=getRecordList&query_keyword="+escape(query_keyword)+"&query_keyword_matchType="+query_keyword_matchType+ "&query_sub_user=" + escape(query_sub_user);
			
			store.proxy.conn.url = url;
			store.load({params:{start:0, limit:18}});
		}
		
	    dr.render('dr');

	  	
	});
</script>
<body>
<div id="dr" style="width:100%;height:20%;"></div>
<div id="progress-div" style="width:100%;height:4%;display:none"></div>
<div id='grid-div' style="width:100%; height:63%;"></div>
</body>
</html>