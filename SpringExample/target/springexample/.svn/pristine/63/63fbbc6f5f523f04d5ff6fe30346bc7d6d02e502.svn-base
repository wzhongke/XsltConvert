<%@ page language="java" contentType="text/html; charset=GBK"
    pageEncoding="GBK"%>
<%@ page import=" java.sql.Connection"%>
<%@ page import="java.sql.PreparedStatement" %>
<%@ page import="java.sql.ResultSet" %>
<%@ page import="com.sohu.frontweb.blacklist.service.DBService" %> 
<%
String user = (String)request.getSession().getAttribute("user");
String category = "信产部";

String sql = "select id from front_webpage_grouplist where keyword = '"+category+"'";
Connection conn = null;
PreparedStatement stat = null;
ResultSet rs = null;
int groupnameId = 0 ;

try{
	conn = DBService.getInstance().getConnection_group();
	//获得记录总数
	stat = conn.prepareStatement(sql);
	rs = stat.executeQuery();
	if( rs.next() ){
		groupnameId = rs.getInt("id");
	}
	
}catch(Exception e){
	e.printStackTrace();
}finally{
	DBService.closeAll(rs, stat, conn);
}
 %>
<html>
<head>
	<meta http-equiv="Content-Type" content="text/html; charset=GBK">
	<title>网页限制词分类记录列表</title>
</head>
<script type="text/javascript">
	Ext.onReady(function(){
		//创建新增或单独修改表记录信息的form表单
		Ext.QuickTips.init();
		Ext.form.Field.prototype.msgTarget = 'side';//统一指定错误信息提示方式
		//定义数据集对象
		var store = new Ext.data.Store({//配置分组数据集
			//autoLoad :true,
			reader: new Ext.data.XmlReader({
				totalRecords: "results",
				record: "FrontWebpageGroupRecord",
				id: "id"
			},
			Ext.data.Record.create([
				{name: 'id'},
				{name: 'keyword'},
				{name: 'note'}
			])
			),
			proxy : new Ext.data.HttpProxy({
				url : 'frontWebpageGroup.do?method=getFrontWebpageGroupList'
			}),
			sortInfo: {field: 'id', direction: 'DESC'},
	  		remoteSort: true
		})

		<%//根据权限信息显示工具栏
		StringBuffer toolbar_str = new StringBuffer();
    	toolbar_str.append("{text : '新增',iconCls:'add',handler : showAdd},");
    	toolbar_str.append("{text : '修改',iconCls:'option',handler : showModify},");
    	toolbar_str.append("{text : '删除',iconCls:'remove',handler : showDelete},");
	    toolbar_str.deleteCharAt(toolbar_str.length()-1);
	    %>
		//创建工具栏组件
		var toolbar = new Ext.Toolbar([
		    <%=toolbar_str.toString()%>
		]);
		//将 是否封禁首页和是否留首封站 的代码解析成 文本
		function booleantag(val){
	        if(val == 1){
	            return '是';
	        }else if(val == 0){
	            return '否';
	        }else
		        return '';
    	}
		//创建Grid表格组件
		var cb = new Ext.grid.CheckboxSelectionModel();

		var recordGrid = new Ext.grid.GridPanel({
			applyTo : 'grid-div',
			tbar : toolbar,
			frame:true,
			loadMask: true,
			//width: 960,
			autoWidth:true,
			//plugins: filters,
			store: store,
			viewConfig : {
				autoFill : true
			},
			sm : cb,
			columns: [//配置表格列
				new Ext.grid.RowNumberer({
					header : '行号',
					width : 40
				}),//表格行号组件
				cb,
				{header: "编号", width: 30, dataIndex: 'id', sortable: true},
				{header: "分类名称", width: 50, dataIndex: 'keyword', sortable: true},
				{header: "分类描述", width: 100, dataIndex: 'note', sortable: true}
			]
		});
			
		// trigger the data store load
    	store.load({params:{start:0, limit:18}});

		var inputForm = new Ext.FormPanel({
			labelSeparator : ":",
			frame:true,
			border:false,
			autoHeight: true,
			//增加表单键盘事件
	        keys:[
	         {
	             key: [10,13],
	             fn: submitForm
	         } ],
			items : [
				{
					xtype:'textfield',
					width : 350,
					allowBlank : false,
					blankText : '分类名称不能为空',
					maxLength : 255,
					maxLengthText : '分类名称最大支持255个字符',
					name : 'keyword',
					fieldLabel:'<font color=red>*</font>分类名称'
				},{
					xtype:'textarea',
					width : 350,
					allowBlank : false,
					blankText : '分类描述不能为空',
					maxLength : 255,
					maxLengthText : '分类描述最大支持255个字符',
					name : 'note',
					fieldLabel:'<font color=red>*</font>分类描述'
				},{
					xtype:'hidden',
					name : 'id'
				}
			],
			buttons:[
				{
					text : '提交',
					handler : submitForm
				},
				{
					text : '关闭',
					handler : function(){
						win.hide();
					}
				}
			]
		});
		//创建弹出窗口
		var win = new Ext.Window({
			layout:'fit',
		    width:520,
		    closeAction:'hide',
			resizable : false,
			shadow : true,
			modal :true,
		    closable:true,
		    bodyStyle:'padding:5 5 5 5',
		    animCollapse:true,
			items:[inputForm]
		});
		win.width = 520;
		win.height = 185;
		
		//显示新建网页限制词分类记录窗口
		function showAdd(){
			inputForm.form.reset();
			inputForm.isAdd = true;
			win.setTitle("新增记录信息");
			win.show();
		}
		//显示修改网页限制词分类记录窗口
		function showModify(){
			var recordList = getCheckedIdList();
			var num = recordList.length;
			var mod = false;
			if(num > 1){
				Ext.MessageBox.alert("提示","每次只能修改一条记录信息。")
			}else if(num == 1){
			
				for(var i=0;i<num;i++){
					if(recordList[i] == <%=groupnameId%>){
						mod = true;
					}
				}
				
				if(mod == true){
					Ext.MessageBox.show({
			           title: '提示',
			           msg: '对不起，所选记录为信产部分类，不能修改！',
			           buttons: Ext.MessageBox.OK,
			           icon: Ext.MessageBox.WARNING
			        });
				}else{
					inputForm.isAdd = false;
					win.setTitle("修改记录信息");
					win.show();
					var recordId = recordList[0];
					loadForm(recordId);
				}
			}
		}
		//显示删除网页限制词分类记录对话框
		function showDelete(){
			var recordIdList = getCheckedIdList();
			var num = recordIdList.length;
			
			var del = false;
			
			if(num == 0){
				return;
			}
			
			for(var i=0;i<num;i++){
				if(recordIdList[i] == <%=groupnameId%>){
					del = true;
				}
			}
			
			if(del == true){
				Ext.MessageBox.show({
		           title: '提示',
		           msg: '对不起，不能删除信产部分类！',
		           buttons: Ext.MessageBox.OK,
		           icon: Ext.MessageBox.WARNING
		        });
			}else{
				Ext.MessageBox.confirm("提示","您确定要删除所选记录吗？<br>属于此类别的限制词黑名单记录的种类归为“无”。",function(btnId){
					if(btnId == 'yes')
						deleteRecord(recordIdList);
				})
			}
			
		}
		//删除网页限制词分类记录
		function deleteRecord(recordIdList){
			var msgTip = Ext.MessageBox.show({
				title:'提示',
				width : 250,
				msg:'正在删除网页前台限制词分类记录信息请稍后......'
			});
			Ext.Ajax.request({
				url : 'frontWebpageGroup.do?method=deleteFrontWebpageGroup',
				params : {recordIdList : recordIdList.toString()},
				method : 'POST',
				success : function(response,options){
					msgTip.hide();
					var result = Ext.util.JSON.decode(response.responseText);
					if(result.success){
						//服务器端数据成功删除后，同步删除客户端列表中的数据
						store.load({params:{start:0, limit:18}});
						Ext.Msg.alert('提示','删除限制词分类成功，属于此类的限制词黑名单记录的种类归为无。');
					}else{
						Ext.Msg.alert('提示','删除网页限制词分类失败。原因是:<br>此分类记录不能删除');
					}
				},
				failure : function(response,options){
					msgTip.hide();
					Ext.Msg.alert('提示','删除限制词分类失败！');
				}
			});
		}
		//加载表单数据
		function loadForm(recordId){
			inputForm.form.load({
				waitMsg : '正在加载数据请稍后',//提示信息
				waitTitle : '提示',//标题
				url : 'frontWebpageGroup.do?method=getFrontWebpageGroupById',//请求的url地址
				params : {recordId : recordId},
				method:'GET',//请求方式
				success:function(form,action){//加载成功的处理函数
				},
				failure:function(form,action){//加载失败的处理函数
					Ext.Msg.alert('提示','数据加载失败');
				}
			});
		}
		//提交表单数据
		function submitForm(){
			//判断当前执行的提交操作，isAdd为true表示执行网页限制词分类记录新增操作，false表示执行网页限制词分类记录修改操作
			if( inputForm.form.isValid() ){
				if(inputForm.isAdd){
					//新增网页限制词分类记录信息
					inputForm.form.submit({
						clientValidation:true,//进行客户端验证
						waitMsg : '正在提交数据请稍后',//提示信息
						waitTitle : '提示',//标题
						url : 'frontWebpageGroup.do?method=addFrontWebpage',//请求的url地址
						method:'POST',//请求方式
						success:function(form,action){//加载成功的处理函数
							win.hide();
							store.load({params:{start:0, limit:18}});
							Ext.Msg.alert('提示','新增网页限制词分类成功');
						},
						failure:function(form,action){//加载失败的处理函数
							win.hide();
							Ext.MessageBox.show({
					           title: '提示',
					           msg: '新增网页限制词分类失败。原因是：<br>此分类已存在',
					           buttons: Ext.MessageBox.OK,
					           icon: Ext.MessageBox.WARNING
					        });
						}
					});
				}else{
					//修改网页限制词分类记录信息
					inputForm.form.submit({
						clientValidation:true,//进行客户端验证
						waitMsg : '正在提交数据请稍后',//提示信息
						waitTitle : '提示',//标题
						url : 'frontWebpageGroup.do?method=modifyFrontWebpage',//请求的url地址
						method:'POST',//请求方式
						success:function(form,action){//加载成功的处理函数
							win.hide();
							store.load({params:{start:0, limit:18}});
							Ext.Msg.alert('提示','修改网页限制词分类成功');
						},
						failure:function(form,action){//加载失败的处理函数
							var failcause = action.result.cause;
							Ext.MessageBox.show({
					           title: '提示',
					           msg: '修改网页限制词分类失败。原因是:<br>此分类记录不能修改',
					           buttons: Ext.MessageBox.OK,
					           icon: Ext.MessageBox.WARNING
					        });
						}
					});
				}
			}//if( inputForm.form.isValid() )
		}
		//取得表单数据
		function getFormFieldsObj(domainRecordId){
			var fields = inputForm.items;
			var obj = {};
			for(var i = 0 ; i < fields.length ; i++){
				var item = 	fields.itemAt(i);
				var value = item.getValue();
				obj[item.name] = value;
			}
			if(Ext.isEmpty(obj['id'])){
				obj['id'] = domainRecordId;
			}
			//补充另外两个属性tag_block和tag_reversible
			if( Ext.getCmp('tag_block_group').items.get(0).checked )
				obj['tag_block'] = 1 ;
			else
				obj['tag_block'] = 0 ;
			if( Ext.getCmp('tag_reversible_group').items.get(0).checked )
				obj['tag_reversible'] = 1 ;
			else
				obj['tag_reversible'] = 0 ;
			return obj;
		}
		//取得所选域名记录信息
		function getCheckedIdList(){
			var recs = recordGrid.getSelectionModel().getSelections();
			var list = [];
			if(recs.length == 0){
				Ext.MessageBox.alert('提示','请选择要进行操作的记录！');
			}else{
				for(var i = 0 ; i < recs.length ; i++){
					var rec = recs[i];
					list.push(rec.get('id'));
				}
			}
			return list;
		}
	});
</script>
<body>
<div id='grid-div' style="width:100%; height:100%;"></div>
</body>
</html>