<%@ page language="java" contentType="text/html; charset=GBK" pageEncoding="GBK"%>
<%@ page import="
java.util.HashMap,
java.util.ArrayList,
java.util.Iterator,
com.sohu.frontweb.base.data.Leaf,
com.sohu.frontweb.ubs.data.BlackTable,
com.sohu.frontweb.ubs.service.BlacklistService,
com.sohu.frontweb.base.action.UmisAction"%>
<%@ page import="com.sohu.frontweb.timer.TimerSync" %>

<%!
    /*****************生成menuList********************/
    private StringBuffer genMenuList(Leaf thisNode,boolean root){
        if(!thisNode.hasChild())
            return new StringBuffer();
        
        StringBuffer sb = new StringBuffer();
        
        if(root)
            sb.append("<ul class='menu'>\n");
        else
            sb.append("<ul>\n");
            
        Iterator it = thisNode.getChildList().iterator();
        while(it.hasNext()){
            Leaf leaf = (Leaf)it.next();
            sb.append("<li><a url='"+(leaf.getNodeValue()!=null?leaf.getNodeValue()+"'  onclick='loadMainContent(this)' ":"#'")+"  "+ (leaf.hasChild()?"class='parent'":"") +"  class='"+leaf.getNodeName()+"'  ><span>"+leaf.getNodeName()+"</span></a>");
            sb.append(genMenuList(leaf,false));
            sb.append("</li>");
        }
        sb.append("</ul>");
        return  sb;
    }

    private void addToMenu(HashMap<String,HashMap<String,ArrayList<Leaf>>> menuMap,String product,String secCla,Leaf thisNode){
        HashMap<String,ArrayList<Leaf>> addSecClaMap =  menuMap.get(product);
        ArrayList<Leaf> addItemList = null;
        if(addSecClaMap.containsKey(secCla))
            addItemList = addSecClaMap.get(secCla);
        else
            addItemList = new ArrayList<Leaf>();

        addItemList.add(thisNode);
        addSecClaMap.put(secCla,addItemList);
        menuMap.put(product,addSecClaMap);
    }
%>
 
<%
    String webapp = request.getContextPath();

    /***************加载通用mysqldb数据*******************/
    HashMap<String,HashMap<String,ArrayList<Leaf>>> menuMap = new HashMap<String,HashMap<String,ArrayList<Leaf>>>();
    menuMap.put("web",new HashMap<String,ArrayList<Leaf>>());
    menuMap.put("pic",new HashMap<String,ArrayList<Leaf>>());
    menuMap.put("video",new HashMap<String,ArrayList<Leaf>>());
    menuMap.put("music",new HashMap<String,ArrayList<Leaf>>());
    menuMap.put("news",new HashMap<String,ArrayList<Leaf>>());
    menuMap.put("blog",new HashMap<String,ArrayList<Leaf>>());
    menuMap.put("tt",new HashMap<String,ArrayList<Leaf>>());
    menuMap.put("all",new HashMap<String,ArrayList<Leaf>>());
    menuMap.put("cooperation",new HashMap<String,ArrayList<Leaf>>());
    menuMap.put("apply",new HashMap<String,ArrayList<Leaf>>());
    menuMap.put("xiaochuizhi",new HashMap<String,ArrayList<Leaf>>());
    menuMap.put("blacklist",new HashMap<String,ArrayList<Leaf>>());
    menuMap.put("shop",new HashMap<String,ArrayList<Leaf>>());
    menuMap.put("wap",new HashMap<String,ArrayList<Leaf>>());
    menuMap.put("app",new HashMap<String,ArrayList<Leaf>>());

    HashMap<String,String>leafNameMap = new HashMap<String,String>();
    leafNameMap.put("web","网页");
    leafNameMap.put("pic","图片");
    leafNameMap.put("video","视频");
    leafNameMap.put("music","音乐");
    leafNameMap.put("news","新闻");
    leafNameMap.put("blog","博客");
    leafNameMap.put("tt","微博");
    leafNameMap.put("all","其它");
    leafNameMap.put("app","App");
    
    HashMap<String,String>AliasNameMap = new HashMap<String,String>();
    AliasNameMap.put("officialSite","网页搜索官方网站认证");
    AliasNameMap.put("english","英文搜索");
    AliasNameMap.put("qqmanager","电脑管家");

    java.util.Iterator it = BlacklistService.TABLE_MAP.entrySet().iterator();

    //二级目录
    boolean flag=false;
    while(it.hasNext()){
        java.util.Map.Entry entry = (java.util.Map.Entry)it.next();
        BlackTable bt = (BlackTable)entry.getValue();
        
        if(bt.getName().indexOf("umis_")!=-1)
            continue;

        if(bt.getName().equals("ubs_black_web_hint_markred"))continue;

        if(!bt.getType().equals("apply")&&((Integer)session.getAttribute(bt.getName()+"_list")!=null && (Integer)session.getAttribute(bt.getName()+"_list") !=1))
            continue;
                
        String[] tNameArr = bt.getName().replace("ubs_","").replace("black_","").replace("white_","").split("_");
        String product = tNameArr[0];
        String secCla = "其它";
        
        //out.println(product+":"+ bt.getName()+"\n");
        if(tNameArr.length>2)
            secCla = tNameArr[1];
            if(product.equals("all")&&secCla.equals("wap")){
                product ="wap";
                secCla = "其它";
            }
        
        if(bt.getName().equals("ubs_white_all_antispider")){
                secCla = "antispider";
        }

        if(secCla.equals("vropen"))
            continue;
        
        if(AliasNameMap.containsKey(secCla)){
            secCla = AliasNameMap.get(secCla);
        }
        
        HashMap<String,ArrayList<Leaf>> secClaMap = menuMap.get(product);
//        if(bt.getType().equals("black")||bt.getType().equals("white")){
//            System.out.println(bt.getName());
//            secClaMap = menuMap.get("blacklist");
//            if(leafNameMap.containsKey(product))
//                secCla = leafNameMap.get(product);
//        }
        
        
        ArrayList<Leaf> itemList = null;
        if(secClaMap.containsKey(secCla))
            itemList = secClaMap.get(secCla);
        else
            itemList = new ArrayList<Leaf>();
        
        itemList.add(new Leaf(bt.getCnName(),"ubs.do?method=showBlacklist&table="+ bt.getName(),null));
        secClaMap.put(secCla,itemList);

//        if(bt.getType().equals("black")||bt.getType().equals("white")){
//            menuMap.put("blacklist",secClaMap);
//        }else{
//            menuMap.put(product,secClaMap);
//        }
    }

    //addToMenu(menuMap,"web","vropen",new Leaf("数据开放平台","open.do?method=showRes",null));
    //addToMenu(menuMap,"web","anchor",new Leaf("Anchor黑名单","anchor.do?method=showAnchorList",null));

    //配置菜单项：
    /*********权限************/
    ArrayList<Leaf> authList = new ArrayList<Leaf>();
    if((Integer)session.getAttribute("kasai_users_list") ==1)
        authList.add(new Leaf("用户表维护","author.do?method=showUserList",null));
    if((Integer)session.getAttribute("kasai_groups_list") ==1)
        authList.add(new Leaf("用户组维护","author.do?method=showGroupList",null));
    if((Integer)session.getAttribute("kasai_objects_list") ==1)
        authList.add(new Leaf("表对象维护","author.do?method=showObjectList",null));
    if((Integer)session.getAttribute("kasai_objects_users_roles_list") ==1)
        authList.add(new Leaf("用户-对象-角色维护","author.do?method=showUsrobjroleList",null));
    if((Integer)session.getAttribute("kasai_objects_groups_roles_list") ==1)
        authList.add(new Leaf("用户组-对象-角色维护","author.do?method=showGroupobjroleList",null));
    if((Integer)session.getAttribute("kasai_roles_operatives_list") ==1)
        authList.add(new Leaf("角色-操作关联","author.do?method=showRoleopList",null));
    if((Integer)session.getAttribute("kasai_roles_list") ==1)
        authList.add(new Leaf("角色维护","author.do?method=showRoleList",null));
    if((Integer)session.getAttribute("kasai_operatives_list") ==1)
        authList.add(new Leaf("操作维护","author.do?method=showOpList",null));
    if((Integer)session.getAttribute("kasai_operatives_list") ==1)
        authList.add(new Leaf("操作日志","log.do?method=showLogList",null));

    /*********网页************/
    ArrayList<Leaf> spiderList = new ArrayList<Leaf>(){{
        //add(new Leaf("域名表黑名单","domain.do?method=showDomainList",null));
        //add(new Leaf("前缀表黑名单","prefix.do?method=showPrefixList",null));
        add(new Leaf("保护白名单","protect.do?method=showProtectList",null));
    }};

    ArrayList<Leaf> fwBlackList = new ArrayList<Leaf>(){{
        add(new Leaf("前台限制词黑名单","frontWebpage.do?method=showFrontWebpageList",null));
        add(new Leaf("限制词分类","frontWebpageGroup.do?method=showFrontWebpageGroupList",null));
    }};

    ArrayList<Leaf> queryList = new ArrayList<Leaf>(){{
        add(new Leaf("网页query黑名单","query_webpageblack.do?method=showRecordList",null));
        add(new Leaf("网页Query白名单","ubs.do?method=showBlacklist&table=ubs_web_query_whitelist",null));
        //add(new Leaf("网页快照黑名单","snap.do?method=showRecordList",null));
    }};

    ArrayList<Leaf> mingyiList = new ArrayList<Leaf>(){{
        add(new Leaf("明医固排","mingyi_fixrank.do?method=showMingyiFixrank",null));
        add(new Leaf("明医query黑名单","mingyi_blacklist.do?method=showRecordList",null));
    }};
  
    ArrayList<Leaf> hintCheckList = new ArrayList<Leaf>(){{
        add(new Leaf("推荐词审核","hint_webpage_recom.do?method=showRecordList",null));
        add(new Leaf("人工干预触发上线","hint_check.do?method=showRecordList",null));
        add(new Leaf("频道上下线","channel_check.do?method=showRecordList",null));
        add(new Leaf("标红关键词表","ubs.do?method=showBlacklist&table=ubs_black_web_hint_markred",null));
    }};

    ArrayList<Leaf> vrList = new ArrayList<Leaf>(){{
        add(new Leaf("VR黑名单","vr_webpage.do?method=showRecordList",null));
        add(new Leaf("VR白名单","vr_white.do?method=showRecordList",null));
        add(new Leaf("VR数据验证","webUIS.do?method=showAladdinValidator",null));
    }};

    ArrayList<Leaf> secList = new ArrayList<Leaf>(){{
        add(new Leaf("IP黑名单","secadmin_blackip.do?method=showRecordList",null));
        add(new Leaf("URL黑名单","secadmin_blackurl.do?method=showRecordList",null));
        add(new Leaf("查询违禁词","secadmin_input.do?method=showRecordList",null));
        add(new Leaf("摘要违禁词","secadmin_output.do?method=showRecordList",null));
        add(new Leaf("URL前缀黑名单","secadmin_url_set.do?method=showRecordList",null));
        add(new Leaf("IP白名单","secadmin_whiteip.do?method=showRecordList",null));
        add(new Leaf("URL白名单","secadmin_whiteurl.do?method=showRecordList",null));
    }};

    ArrayList<Leaf> webList = new ArrayList<Leaf>();
    webList.add(new Leaf("Spider黑名单",null,spiderList));
    webList.add(new Leaf("前台限制词黑名单",null,fwBlackList));

    webList.add(new Leaf("Query黑名单",null,queryList));
    webList.add(new Leaf("明医垂直",null,mingyiList));
    webList.add(new Leaf("网页固排","webUIS.do?method=showWebFixrankList",null));

    //webList.add(new Leaf("hint黑名单","hint_webpage.do?method=showRecordList",null)); // 与下面的hint合并
    webList.add(new Leaf("推荐词监控",null,hintCheckList));
    webList.add(new Leaf("Summary/快照人工干预","webSnap.do?method=showWebSnapList",null));

    //webList.add(new Leaf("VR管理",null,vrList));
    //webList.add(new Leaf("网页固排","webUIS.do?method=showWebFixrankList",null));
    //webList.add(new Leaf("信产部黑名单",null,secList));
    //webList.add(new Leaf("Anchor黑名单","anchor.do?method=showAnchorList",null));
    //webList.add(new Leaf("数据开放平台","open.do?method=showRes",null));
    //webList.add(new Leaf("流量查询系统",null,flowList));

    boolean isFindHint = false;
    boolean isFindHintNew = false;
    java.util.Iterator webClaIt = menuMap.get("web").entrySet().iterator();
    //二级目录
    while(webClaIt.hasNext()){
        java.util.Map.Entry entry = (java.util.Map.Entry)webClaIt.next();
        if("hint".equalsIgnoreCase(entry.getKey().toString())){
            ((ArrayList<Leaf>)entry.getValue()).add(new Leaf("新闻hint黑名单(old)","hint_webpage.do?method=showRecordList",null));
            ((ArrayList<Leaf>)entry.getValue()).add(new Leaf("网页hint黑名单","hint_webpage_new.do?method=showRecordList",null));
            isFindHint = true;
            isFindHintNew = true;
        }
        if("query".equalsIgnoreCase(entry.getKey().toString())) {
            continue;
        }
        webList.add(new Leaf(entry.getKey().toString(),null,(ArrayList<Leaf>)entry.getValue()));
    }
    if(!isFindHint){
        webList.add(5, new Leaf("hint黑名单","hint_webpage.do?method=showRecordList",null)); // 与下面的hint合并
    }
    if(!isFindHintNew){
        webList.add(6, new Leaf("网页hint黑名单","hint_webpage_new.do?method=showRecordList",null)); // 与下面的hint合并
    }
    /*******************黑名单**********/
    ArrayList<Leaf>webBlackList = new ArrayList<Leaf>();
    webBlackList.add(new Leaf("query黑名单","query_webpageblack.do?method=showRecordList",null));
   
   /*
    * 以下部分在旁路系统中暂时不进行展示，隐藏20120830
    */
    //webBlackList.add(new Leaf("网页快照黑名单","snap.do?method=showRecordList",null));

    webBlackList.add(new Leaf("前台限制词黑名单","frontWebpage.do?method=showFrontWebpageList",null));
    //webBlackList.add(new Leaf("hint黑名单","hint_webpage.do?method=showRecordList",null)); // 更hint合并
    //webBlackList.add(new Leaf("Anchor黑名单","anchor.do?method=showAnchorList",null));
    //webBlackList.add(new Leaf("spider域名表黑名单","domain.do?method=showDomainList",null));
    //webBlackList.add(new Leaf("spider前缀表黑名单","prefix.do?method=showPrefixList",null));
    //webBlackList.add(new Leaf("spider保护白名单","protect.do?method=showProtectList",null));

    ArrayList<Leaf> blackList = new ArrayList<Leaf>();
    blackList.add(new Leaf("网页",null,webBlackList));
    blackList.add(new Leaf("图片",null,null));
    blackList.add(new Leaf("视频",null,null));
    blackList.add(new Leaf("音乐",null,null));
    blackList.add(new Leaf("新闻",null,null));
    blackList.add(new Leaf("微博",null,null));
    blackList.add(new Leaf("博客",null,null));
    blackList.add(new Leaf("其它",null,null));
   
    java.util.Iterator blackClaIt = menuMap.get("blacklist").entrySet().iterator();
    //二级目录
    while(blackClaIt.hasNext()){
        java.util.Map.Entry entry = (java.util.Map.Entry)blackClaIt.next();
        for(Leaf black:blackList){
            String nodeName = black.getNodeName();
            if(nodeName.equals(entry.getKey().toString())){
                ArrayList<Leaf> childs = black.getChildList();
                if(childs==null){
                    childs = new ArrayList<Leaf>();
                    black.setChildList(childs);
                }
                ArrayList<Leaf>childrens = (ArrayList<Leaf>)entry.getValue();
                for(Leaf child:childrens){
                    childs.add(child);
                }
            }
        }
    }

    /*
    * 房产，招聘小垂直
    */
    ArrayList<Leaf> xiaochuizhiList = new ArrayList<Leaf>();
    java.util.Iterator xiaochuizhi = menuMap.get("xiaochuizhi").entrySet().iterator();
    while(xiaochuizhi.hasNext()){
        java.util.Map.Entry entry = (java.util.Map.Entry)xiaochuizhi.next();
        xiaochuizhiList.add(new Leaf(entry.getKey().toString(),null,(ArrayList<Leaf>)entry.getValue()));
    }

    ArrayList<Leaf> menuList = new ArrayList<Leaf>();
    if((Integer)session.getAttribute("kasai_users_list") ==1)
        menuList.add(new Leaf("权限",null,authList));
    //menuList.add(new Leaf("黑白名单",null,blackList));

    ArrayList<Leaf> wapList = new ArrayList<Leaf>();
    java.util.Iterator wapiter = menuMap.get("wap").entrySet().iterator();
    while(wapiter.hasNext()){
        java.util.Map.Entry entry = (java.util.Map.Entry)wapiter.next();
        if("其它".equalsIgnoreCase(entry.getKey().toString())){
            ((ArrayList<Leaf>)entry.getValue()).add(new Leaf("无线debug账号白名单","ubs.do?method=showBlacklist&table=ubs_wap_debug_whiteuser",null));
        }
        if("debug".equalsIgnoreCase(entry.getKey().toString())) {
            continue;
        }
        wapList.add(new Leaf(entry.getKey().toString(),null,(ArrayList<Leaf>)entry.getValue()));
    }
  
    ArrayList<Leaf>newsList = new ArrayList<Leaf>();
    java.util.Iterator newsiter = menuMap.get("news").entrySet().iterator();
    while(newsiter.hasNext()){
        java.util.Map.Entry entry = (java.util.Map.Entry)newsiter.next();
        newsList.add(new Leaf(entry.getKey().toString(),null,(ArrayList<Leaf>)entry.getValue()));
    }
  
    ArrayList<Leaf>shopList = new ArrayList<Leaf>();
    java.util.Iterator shopiter = menuMap.get("shop").entrySet().iterator();
    while(shopiter.hasNext()){
        java.util.Map.Entry entry = (java.util.Map.Entry)shopiter.next();
        shopList.add(new Leaf(entry.getKey().toString(),null,(ArrayList<Leaf>)entry.getValue()));
    }
  
    ArrayList<Leaf>appList = new ArrayList<Leaf>();
    java.util.Iterator appiter = menuMap.get("app").entrySet().iterator();
    while(appiter.hasNext()){
        java.util.Map.Entry entry = (java.util.Map.Entry)appiter.next();
        appList.add(new Leaf(entry.getKey().toString(),null,(ArrayList<Leaf>)entry.getValue()));
    }
  
    menuList.add(new Leaf("网页",null,webList));
    menuList.add(new Leaf("无线",null,wapList));
    menuList.add(new Leaf("新闻",null,newsList));
    menuList.add(new Leaf("购物",null,shopList));
    menuList.add(new Leaf("App",null,appList));
    if(UmisAction.UMIS_SECADMIN_USE_NEW_SYNC){
        menuList.add(new Leaf("信产部",null,secList));
    }
    menuList.add(new Leaf("小垂直",null,xiaochuizhiList));
  
    Leaf root = new Leaf("",null,menuList);
%>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
<meta http-equiv=”X-UA-Compatible” content=”IE=EmulateIE8″ />
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<meta name="keywords" content="" />
<meta name="description" content="" />

<title>UMIS－统一管理信息系统</title>

<link rel="stylesheet" type="text/css" href="Ext/extjs2.0/resources/css/ext-all.css" />
<link rel="stylesheet" type="text/css" href="Ext/extjs2.0/resources/css/ext-patch.css" />
<link rel="stylesheet" type="text/css" href="Ext/extjs2.0/dataview/data-view.css" />
<link rel="stylesheet" type="text/css" href="<%=webapp %>/Chosen/chosen.min.css" />
<link href="css/style.css" rel="stylesheet" type="text/css" media="screen" />
<link href="css/menu.css" rel="stylesheet" type="text/css" />
<link href="Ext/css/style.css" rel="stylesheet" type="text/css" />
<link rel="stylesheet" type="text/css" href="<%=webapp%>/Ext/extjs2.0/multiselect/multiselect.css"/>

<script type="text/javascript" src="js/jquery.js"></script>
<script type="text/javascript" src="js/menu.js"></script>
<script type="text/javascript" src="Ext/extjs2.0/adapter/ext/ext-base.js"></script>
<script type="text/javascript" src="Ext/extjs2.0/ext-all.js"></script>
<script type="text/javascript" src="Ext/extjs2.0/source/locale/ext-lang-zh_CN.js"></script>
<script type="text/javascript" src="Ext/extjs2.0/ext/themeChange.js"></script>
<script type="text/javascript" src="Ext/extjs2.0/dataview/DataView-more.js"></script>
<script type="text/javascript" src="<%=webapp%>/pages/menu/EditableItem.js"></script>
<script type="text/javascript" src="<%=webapp%>/pages/menu/RangeMenu.js"></script>
<script type="text/javascript" src="<%=webapp%>/pages/grid/GridFilters.js"></script>
<script type="text/javascript" src="<%=webapp%>/pages/grid/filter/Filter.js"></script>
<script type="text/javascript" src="<%=webapp%>/pages/grid/filter/StringFilter.js"></script>
<script type="text/javascript" src="<%=webapp%>/pages/grid/filter/DateFilter.js"></script>
<script type="text/javascript" src="<%=webapp%>/pages/grid/filter/ListFilter.js"></script>
<script type="text/javascript" src="<%=webapp%>/pages/grid/filter/NumericFilter.js"></script>
<script type="text/javascript" src="<%=webapp%>/pages/grid/filter/BooleanFilter.js"></script>
<script type="text/javascript" src="<%=webapp%>/Ext/extjs2.0/multiselect/DDView.js"></script>
<script type="text/javascript" src="<%=webapp%>/Ext/extjs2.0/multiselect/MultiSelect.js"></script>
<script type="text/javascript" src="<%=webapp%>/Ext/extjs2.0/multiselect/ItemSelector.js"></script>
<script type="text/javascript" src="<%=webapp%>/Chosen/chosen.jquery.min.js"></script>
<script type="text/javascript" src="<%=webapp%>/Chosen/ext_chosen.js"></script>
<script type="text/javascript" src="<%=webapp%>/front_webpage/datepicker/WdatePicker.js"></script>
<script type="text/javascript" src="js/chart/FusionCharts.js"></script>

<style type="text/css">
    .user{float:right;font-weight:bold};
</style>
</head>

<body>
    <script>
    if ((typeof Range !== "undefined") && !Range.prototype.createContextualFragment){
        Range.prototype.createContextualFragment = function(html){
            var frag = document.createDocumentFragment(), 
            div = document.createElement("div");
            frag.appendChild(div);
            div.outerHTML = html;
            return frag;
        };
    }
    Ext.util.CSS.swapStyleSheet("theme", "Ext/extjs2.0/resources/css/xtheme-gray.css");  
    
    Ext.onReady(function(){
        var panel = new Ext.Panel({
            frame:true,
            applyTo: 'page',
            //width: 960,
            autoWidth:true,
            bodyStyle:'padding:5px 95px 5px 95px',
            collapsible:true,
            header:false,
            autoScroll: true,
            layout:'border',
            title:'人工干预结果预览区域',
            items : [{
                title : '功能菜单',
                split:true,
                collapsible: true,
                autoScroll:true,
                region:'west',//指定子面板所在区域为west
                id:"westContent",
                style:'display:none',//隐藏
                height:500,
                width: 185
            },{
                title: '操作区域',
                contentEl : 'welcome',
                collapsible: true,
                id : 'mainContent',
                autoScroll:true,
                height:500,
                region:'center'//指定子面板所在区域为center
            },{
                title: '副操作区域',
                hidden:true,//隐藏
                split:true,
                autoScroll:true,
                collapsible: true,
                collapsed:true,
                id : 'eastContent',
                autoScroll:true,
                width:800,
                height:500,
                region:'east'//指定子面板所在区域为east
            }],
            bbar : [{//底部工具条，不指定xtype属性是默认为按钮
                text : "切换回老版",
                listeners : {
                    click : function(node,e){
                                window.location="index_old.jsp";
                            }
                }
            }]
        });

        function getParam(href,name){
            if(href==null)return "";
            if(href.indexOf("?")!=-1){
                var params = href.substr(href.indexOf("?")+1).split("&");
                for(var i=0,len=params.length;i<len;i++){
                    var oneParam = params[i],kv = oneParam.split("=");
                    if(name==kv[0]){
                        if(kv.length==1)return "";
                        else return kv[1];
                    }
                }
            }
            return "";
        }

        function loadMainContentByIndex(url,title){
            var mainPanel = Ext.getCmp('mainContent');
            mainPanel.load({
                url: url,
                callback : function(){
                    mainPanel.setTitle(title);
                    //var m=Ext.getCmp('mainContent');
                    //m.setTitle("");
                },
                scripts: true
            });
        }
        var curHref = location.href,index=getParam(curHref,"index");
        if(index.length>0){
            if(index=="webfront"){
                loadMainContentByIndex("frontWebpage.do?method=showFrontWebpageList","网页前台限制词");
            }else if(index=="webquery"){
                loadMainContentByIndex("query_webpageblack.do?method=showRecordList","网页Query黑名单");
            }else if(index=="webhint"){
                loadMainContentByIndex("hint_webpage_new.do?method=showRecordList","网页Hint黑名单");
            }else if(index=="weboutput"){
                loadMainContentByIndex("secadmin_output.do?method=showRecordList","信产部摘要黑名单");
            }else if(index=="webrecom"){
                loadMainContentByIndex("hint_webpage_recom.do?method=showRecordList","推荐词监控");
            }else if(index=="webcheck"){
                loadMainContentByIndex("hint_check.do?method=showRecordList","人工干预触发上线");
            }else{
                loadMainContentByIndex("ubs.do?method=showBlacklist&table="+index,index);
            }
        }
    });

    function loadMainContent(href){
        var loadUrl = href.attributes["url"].value;
        if(loadUrl.indexOf("uigs/")!=-1)
            loadUrl += "&r="+Math.random();
             
        var mainPanel = Ext.getCmp('mainContent');
        mainPanel.load({
            url: loadUrl,
            callback : function(){
                mainPanel.setTitle(href.className);
            },
            scripts: true
        });
    }

    function loadMainContentByUrl(loadUrl){

        if(loadUrl.indexOf("uigs/")!=-1)
            loadUrl += "&r="+Math.random();

        var mainPanel = Ext.getCmp('mainContent');
        mainPanel.load({
                        url: loadUrl,
                        callback : function(){
                            //var m=Ext.getCmp('mainContent');
                            //m.setTitle("");
                        },
                        scripts: true
        });
    }

</script>   
<div id="wrapper">
    <div id="logo">
        <h1><a href="#">UMIS  </a></h1>
        <p style="padding-left:150px;"><em> ―― <a href="http://www.freecsstemplates.org/">统一管理信息系统</a></em></p>
        <div style="position:absolute;top:10px;right:20px;color:black">
            <span style="color: #E5FFC4;font-weight:bold">欢迎您！<%=session.getAttribute("user")%></span>&nbsp;
            <a href="logout.jsp">登出</a>&nbsp;|&nbsp;<a href="mailto:longsiliang@sogou-inc.com">联系开发</a>&nbsp;|&nbsp;<a href="http://cvs.so.sohu.com/svn/websearch/trunk/FrontWeb/开发文档/前端应用/UMIS/【使用手册】UMIS系统V1.0.doc">使用手册</a>     
        </div>
    </div>
    <hr />
    <div id="header">
        <div id="menu">
        <%
            StringBuffer menuSb = new StringBuffer();
            menuSb.append(genMenuList(root,true));
            out.println(menuSb.toString());
            TimerSync.executeEightAtFourPerDay();//每天晚上4点定时同步pid
        %>
        </div>
    </div>

    <div id="page" style="height:800px;">
    
    </div>
    <div id="welcome" style='height:400px;;width:100%;padding-top:50px;'>
        <table style="width: 100%;" border="0">
            <tr>
                <td align="center">
                <div style="width: 600px; height: 420px; overflow: auto;" align="center">
                <font align="center" size="5">&nbsp;&nbsp;&nbsp;&nbsp;欢迎使用统一管理信息系统UMIS</font>
                <br/><br/>
                <p><img alt="logo" src="images/logo.bmp"/></p><br/>
                <font color="red" size="4">UMIS各权限申请表地址(请在线填写)：<a href="apply.jsp">apply.jsp</a></font><br/><br/>
                <!--
                <font color="blue">
                    UMIS新界面上线，如果有使用问题，想切换回老版本的，请点击 <a href="index_old.jsp">这里</a> <br/>
                </font>
                 -->
                </div>
                </td>
            </tr>
            <tr>
                <td align="center">
                    <div style="width: 800px;overflow: auto;" align="left">
                        <!-- ul>
                            <li>1.Ubs的hint改进需求包括：增加生效截止时间和白名单类型(封禁字段为否)</li>
                            <li>2.Ubs的前台限制词黑名单改进需求是：增加白名单类型(封禁字段为否)</li>
                            <li>3.Ubs将07-20 11:30 至07-24 17:00提交到旧query、snap库中的记录都导入新库</li>
                            <li>4.Umis新增需求是增加网页hint人工干预模块（原来的hint彩蛋系统）</li>
                        </ul> -->
                    </div>
                </td>
            </tr>
        </table>
    </div>
    
    <div id="footer-bgcontent">

    <div id="footer" >  
        <p>Copyright (c) 2010 sogou.com. All rights reserved. Design by <a href="mailto:longsiliang@sogou-inc.com">longsiliang</a>.<a href="http://apycom.com/"  style="display:none;">Apycom jQuery Menus</a></p>
    </div>

    </div>

    <!-- end #footer -->

</div>

</body>

</html>
