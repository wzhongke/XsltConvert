<%@ page language="java" contentType="text/html; charset=GBK" pageEncoding="GBK"%>
<html>
<head>
	<meta http-equiv="Content-Type" content="text/html; charset=GBK">
	<title>明医固排记录列表</title>
</head>
<script type="text/javascript">
tablename = "ubs_web_health_fix_rank";
syncHubType = "other";
pageSize = 18;
</script>
<script type="text/javascript" src="/WebRoot/js/quickSync.js"></script>
<script type="text/javascript" src="/WebRoot/js/tabinsert.js"></script>

<script type="text/javascript">
	Ext.namespace('Ext.exampledata');
	Ext.onReady(function(){
		var exportConditionUrl = 'mingyi_fixrank.do?method=getRecordList';
		
		//创建新增或单独修改表记录信息的form表单
		Ext.QuickTips.init();
		Ext.form.Field.prototype.msgTarget = 'side';//统一指定错误信息提示方式
		//定义数据集对象
		var store = new Ext.data.Store({//配置分组数据集
			reader: new Ext.data.XmlReader({
				totalRecords: "results",
				record: "MingyiFixrankRecord",
				id: "id"
			},
			Ext.data.Record.create([
				{name: 'id'},
				{name: 'keyword'},
				{name: 'classid'},
				{name: 'url'},
				{name: 'rank'},
				{name: 'classtag'},
				{name: 'tplid'},
				
				{name: 'start_time', type: 'date', dateFormat: 'Y-m-d H:i:s'},
				{name: 'end_time', type: 'date', dateFormat: 'Y-m-d H:i:s'},
				{name: 'lifecycle'},
				{name: 'synch_status'},
				{name: 'submitter'},
				{name: 'create_time', type: 'date', dateFormat: 'Y-m-d H:i:s'},
				{name: 'modify_time', type: 'date', dateFormat: 'Y-m-d H:i:s'},
				{name: 'sync_status'},
                {name: 'sync_message'},
                {name: 'sync_modify_time',type:'date',dateFormat:'Y-m-d H:i:s'}
			])
			),
			proxy : new Ext.data.HttpProxy({
				url : 'mingyi_fixrank.do?method=getRecordList'
			}),
			sortInfo: {field: 'id', direction: 'DESC'},
	  		remoteSort: true
		})
		//定义分组数据集对象
		var vrtypeStore = new Ext.data.Store({//配置分组数据集
			reader: new Ext.data.XmlReader({
				totalRecords: "results",
				record: "VRTypeRecord",
				id: "classid"
			},
			Ext.data.Record.create([
				{name: 'classtag'},
				{name: 'classid'},
				{name: 'chname'},
				{name: 'vrtemplate_tplid'}
			])
			),
			proxy : new Ext.data.HttpProxy({
				url : 'mingyi_fixrank.do?method=getVRTypeList'
			}),
			sortInfo: {field: 'VRType', direction: 'DESC'},
	  		remoteSort: true
		})
    	vrtypeStore.load({
    		callback: function() {
    			store.load({params:{start:0, limit:18}});
    		}
    	});

		<%//根据权限信息显示工具栏
			StringBuffer toolbar_str = new StringBuffer();
			toolbar_str.append("{text : '新增',iconCls:'add',handler : showAdd},");
			toolbar_str.append("{text : '修改',iconCls:'option',handler : showModify},");
			toolbar_str.append("{text : '删除',iconCls:'remove',handler : showDelete},");
			toolbar_str.append("'-',");
			//toolbar_str.append("{text : '上线',iconCls:'option',handler : synchronize},");
			toolbar_str.append("{text : '快速同步new',iconCls:'batch-remove',handler : doSync},");
			toolbar_str.append("{text : '取消同步',iconCls:'batch-remove',handler : doCancel},");

			toolbar_str.deleteCharAt(toolbar_str.length()-1);
	    %>
		//创建工具栏组件
		var toolbar = new Ext.Toolbar([
		    <%=toolbar_str.toString()%>
		]);
		//将 是否封禁首页和是否留首封站 的代码解析成 文本
		function booleantag(val){
	        if(val == 1){
	            return '是';
	        }else if(val == 0){
	            return '否';
	        }else
		        return '';
    	}
    	function keyword_renderer(val,cellmeta, record){
    		if(record.data["synch_status"]==1)
    			//return "<a href='http://10.10.120.38/web?query="+val+"&page=1&forceQuery=on' target='_blank'>"+val+"</a>";
    			return "<a href=\"#\" onclick=\"window.open('http://10.10.120.38/web?query="+val+"&page=1&forceQuery=on');window.open('http://10.11.89.18/web?query="+val+"&page=1&forceQuery=on');\">"+ val +"</a>";
    		else
    			return "<a href='#' onclick='Ext.MessageBox.alert(\"提示\",\"数据未同步，请稍后刷新页面后重试！\")'>"+val+"</a>";
    	}
    	
    	function url_renderer(val){
  			return "<a href='"+val+"' target='_blank'>"+val+"</a>";
    	}
    	
		function lifecycletag(val){
	        if(val == 0){
	            return '<font color="gray">未生效</font>';
	        }else if(val == 1){
	            return '<font color="green">生效中</font>';
	        }else if(val == 2){
		        return '<font color="red">已失效</font>';
	        }else{
	        	return '';
		    }
    	}
    	//创建分页工具栏
    	var pagingBar = new Ext.PagingToolbar({
    		pageSize: 18,
	        store: store,
	        displayInfo: true,
	        displayMsg: '显示 {0} - {1} , 共 {2} 条记录',
	        emptyMsg: "没有任何记录",
	        items:['-']
    	});
		//创建Grid表格组件
		var cb = new Ext.grid.CheckboxSelectionModel();

		//开始查询表单部分
		var dr = new Ext.FormPanel({
	    	labelWidth: 125,
	        frame: true,
	  	  	bodyStyle:'padding:5px 5px 0',
	  	 	autoScroll: true,
	  	  	autoWidth :true,
	  	  	//width: 1240,
	        defaults: {width: 175},
	      	//增加表单键盘事件
	        keys:[
	         {
	             key: [10,13],
	             fn:query
	         } ],
	        items: [{
	        	xtype:'textfield',
				width : 400,
				id : 'query_keyword',
				name : 'query_keyword',
				fieldLabel:'关键词'
	        },

	        {
	            layout:'column',
	            width : 800,
	            border:false,
	            items:[
	                {
	                    columnWidth:.5,
	                    layout: 'form',
	                    border:false,
	                    items: [{
	                        xtype:'radio',
	                        fieldLabel:'查找方式',
	                        checked: true,
	                        boxLabel:'精确查找',
	                        name:'query_matchType',
	                        anchor:'100%',
	                        inputValue: 1
	                    }]
	                },
	                {   
	                    columnWidth:.5,
	                    layout: 'form',
	                    border:false,
	                    items: [{
	                        xtype:'radio',
	                        boxLabel:'模糊查找',
	                        hideLabel: true,
	                        name:'query_matchType',
	                        anchor:'100%',
	                        inputValue: 0
	                    }]
	                }
	              ]
            }],
			buttons:[
				{
					text : '查询',
					handler : function(){
						query(true);
					}
				},
				{
					text : '返回',
					handler : function(){
						query(false);
					}
				}
			]
	      });
		
		var recordGrid = new Ext.grid.GridPanel({
			applyTo : 'grid-div',
			tbar : toolbar,
			frame:true,
			loadMask: true,
			autoScroll: true,
			autoWidth :true,
			//width: 1240,
			store: store,
			viewConfig : {
				autoFill : true
			},
			sm : cb,
			columns: [//配置表格列
		        new Ext.grid.RowNumberer({
					header : '行号',
					width : 40
				}),//表格行号组件
				cb,
				//{header: "编号", width: 40, dataIndex: 'id', sortable: true},
				{header: "关键词", width: 80, dataIndex: 'keyword',renderer: keyword_renderer},
				{header: "URL", width: 130, dataIndex: 'url',renderer: url_renderer},
				{header: "排位", width: 40, dataIndex: 'rank'},
				{header: "固排类型", width: 60, renderer: classid_renderer, dataIndex: 'classid'},
				
				{header: "上线时间", width: 100, dataIndex: 'start_time', renderer: Ext.util.Format.dateRenderer('Y-m-d H:i:s'),sortable: true},
				{header: "下线时间", width: 100, dataIndex: 'end_time', renderer: Ext.util.Format.dateRenderer('Y-m-d H:i:s'),sortable: true},
				{header: "生命周期", width: 60, renderer: lifecycletag, dataIndex: 'lifecycle'},
				{header: "同步状态", width: 60, renderer: booleantag, dataIndex: 'synch_status'},
				{header: "提交者", width: 100, dataIndex: 'submitter'},
				{header: "创建时间", width: 100, dataIndex: 'create_time', renderer: Ext.util.Format.dateRenderer('Y-m-d H:i:s'),sortable: true},
				{header: "最后更新时间", width: 100, dataIndex: 'modify_time', renderer: Ext.util.Format.dateRenderer('Y-m-d H:i:s'),sortable: true},
				{header: "快速同步状态", width: 75, dataIndex: 'sync_status',sortable: true,renderer:function(value,cellmeta,record){                  
                    if(value==1){cellmeta.attr="style=background-color:red";return "新增";}
                    if(value==2){cellmeta.attr="style=background-color:yellow";return "待同步";}
                    if(value==3){
                        var sync_modify_time = record.data['sync_modify_time'];
                        cellmeta.attr="style=background-color:yellow";
                        return "同步中";}
                    if(value==4){cellmeta.attr="style=background-color:green";return "同步成功";}
                    if(value==5){cellmeta.attr="style=background-color:red";return "同步失败";}
                    
                    var sync_modify_time = record.data['sync_modify_time'];
                    //return Ext.util.Format.date(sync_modify_time, 'Y-m-d H:i:s');
                    cellmeta.attr="style=background-color:red";
                    return "数据错误";}},
                {header: "同步信息", width: 75, dataIndex: 'sync_message'},
                {header: "同步修改时间", width: 75, dataIndex: 'sync_modify_time', renderer: Ext.util.Format.dateRenderer('Y-m-d H:i:s')}               
            ],
			
	        // paging bar on the bottom
	        bbar: pagingBar
			
		});
		var prevalue_comb;//保留选择前的值，为了修改时VR类别不可改
		
		function chgTpl(value){
			if( value=='12' ) {
				Ext.getCmp("datacontent_part1").getEl().dom.value =
					'<title><![CDATA[]]></title>\n'
					+ '<!--标题:长度限制为4-63字节-->\n\n'
					+ '<showurl><![CDATA[]]></showurl>\n'
					+ '<!--显示链接地址：截断后总长度不超过2-42字节。如果URL超过42字节，请去掉“http://”或“https://”，保留最后文件格式如“html”，例如http://dl.pconline.com.cn/html_2/1/77/id=37742&pn=0.html截为dl.pconline.com.cn/...n=0.html-->\n\n'
					+ '<pagesize>K</pagesize>\n'
					+ '<!--页面大小：以K为单位，长度为2-4字节-->\n\n'
					+ '<date><%="${sogouToday}"%></date>\n'
					+ '<!--最后更新日期：格式为yyyy-mm-dd-->\n\n'
					+ '<content1><![CDATA[]]></content1>\n'
					+ '<!--摘要第一段:文字长度限制为0-78字节-->\n\n'
					+ '<content2><![CDATA[]]></content2>\n'
					+ '<!--摘要第二段:文字长度限制为0-78字节-->\n\n'
					+ '<content3><![CDATA[]]></content3>\n'
					+ '<!--摘要第三段:文字长度限制为0-78字节-->'
			} else if( value=='14' ) {
				Ext.getCmp("datacontent_part1").getEl().dom.value =
					'<title><![CDATA[]]></title>\n'
					+ '<!--标题:长度限制为4-63字节-->\n\n'
					+ '<showurl><![CDATA[]]></showurl>\n'
					+ '<!--显示链接地址：截断后总长度不超过2-42字节。如果URL超过42字节，请去掉“http://”或“https://”，保留最后文件格式如“html”，例如http://dl.pconline.com.cn/html_2/1/77/id=37742&pn=0.html截为dl.pconline.com.cn/...n=0.html-->\n\n'
					+ '<pagesize>K</pagesize>\n'
					+ '<!--页面大小：以K为单位，长度为2-4字节-->\n\n'
					+ '<usenorm>0</usenorm>\n'
					+ '<!--0为优先使用固排摘要，1为优先使用自然网页摘要-->\n\n'
					+ '<date><%="${sogouToday}"%></date>\n'
					+ '<!--最后更新日期：格式为yyyy-mm-dd-->\n\n'
					+ '<content1><![CDATA[]]></content1>\n'
					+ '<!--摘要:文字长度限制为40-200字节-->';
			} else if( value=='17' ) {
				Ext.getCmp("datacontent_part1").getEl().dom.value =
					'<title><![CDATA[]]></title>\n'
					+ '<!--标题:长度限制为4-34字节-->\n\n'
					+ '<showurl><![CDATA[]]></showurl>\n'
					+ '<!--显示链接地址：截断后总长度不超过2-42字节。如果URL超过42字节，请去掉“http://”或“https://”，保留最后文件格式如“html”，例如http://dl.pconline.com.cn/html_2/1/77/id=37742&pn=0.html截为dl.pconline.com.cn/...n=0.html-->\n\n'
					+ '<pagesize>K</pagesize>\n'
					+ '<!--页面大小：以K为单位，长度为2-4字节-->\n\n'
					+ '<date><%="${sogouToday}"%></date>\n'
					+ '<!--最后更新日期：格式为yyyy-mm-dd-->\n\n'
					+ '<content1><![CDATA[]]></content1>\n'
					+ '<!--摘要:文字长度限制为40-160字节-->\n\n'
					+ '<imglink linkurl="" imageurl="" />\n'
					+ '<!--imglink标签的个数限制为0－1，linkurl指图片链接指向的地址，长度限制为6－512字节；imageurl指链接的图片地址（显示图片的url），其长度限制为6－512字节-->';
			} else if( value=='18' ) {
				Ext.getCmp("datacontent_part1").getEl().dom.value =
					'<title><![CDATA[]]></title>\n'
					+ '<!--标题:长度限制为1-63字节-->\n\n'
					+ '<content1><![CDATA[]]></content1>\n'
					+ '<!--摘要:文字长度限制为0-122字节-->\n\n'
					+ '<medianame></medianame>\n'
					+ '<!--首条结果的来源媒体：长度为2-16字节-->\n\n'
					+ '<showdate></showdate>\n'
					+ '<!--首条结果更新时间：xx天前、xx小时前、或xx分钟前，字符长度为5-8字节-->\n\n'
					+ '<eventlink linkurl="" linkcontent="" medianame="" showdate="" />\n'
					+ '<eventlink linkurl="" linkcontent="" medianame="" showdate="" />\n'
					+ '<!--eventlink标签的个数限制为2-3。linkurl指新闻的链接，长度限制为6-512字节；linkcontent指链接的文字描述，其长度限制为6-42字节；medianame指新闻来源的媒体名称，长度限制为2-16字节；showdate指该条新闻更新时间，显示内容为：xx天前、xx小时前，或xx分钟前，字符长度为5-8字节。-->\n\n'
					+ '<link linkurl=""  linkcontent="" />\n'
					+ '<!--link标签的个数限制为1。linkurl指链接指向的地址，长度限制为6-512字节；linkcontent指链接的文字描述，其长度限制为1-30字节-->';
			} else
				Ext.getCmp("datacontent_part1").getEl().dom.value = '暂时未添加此模板说明!';
		}		
		
		var comb = new Ext.form.ComboBox({
			xtype:'combo',
        	fieldLabel:'<font color=red>*</font>固排类型',
        	name : 'classid',
        	width : 150,
        	allowBlank : false,
        	blankText : '分类为必填项',
        	hiddenName : 'classid',
        	store: vrtypeStore,
        	displayField:'chname',
        	valueField: 'classid',
        	typeAhead: true,
        	forceSelection: true,
        	triggerAction: 'all',
        	emptyText:'请选择其中一种...',
        	selectOnFocus:true,
        	mode: 'remote',
        	listeners:{select:{fn:function(combo, value) {
            		if(inputForm.isAdd==true) {
            			prevalue_comb = value.get('classid');
		        		Ext.getCmp('btn_submmit').disable();
		        		Ext.getCmp('form_classtag').setValue( value.get('classtag') );
		        		Ext.getCmp('form_vrtemplate_num').setValue( value.get('vrtemplate_tplid') );
		        		chgTpl(value.get('vrtemplate_tplid'));

        			} else{//修改时禁用
        				combo.setValue( prevalue_comb );
                	}
                }}
             }
		});
		
		var inputForm = new Ext.FormPanel({
			labelSeparator : ":",
			frame:true,
			border:false,
			autoHeight: true,
			labelWidth : 130, 
			items : [
				{
					xtype:'label',
				    html:"<font color=red size=2>注：修改记录时以下三字段不可改――关键词、URL和固排类型</font><br>&nbsp;"
				},{
					xtype:'textfield',
					width : 150,
					allowBlank : false,
					blankText : '关键词不能为空',
					name : 'keyword',
					id : 'keyword',
					fieldLabel:'<font color=red>*</font>关键词(1-76字节)',
					enableKeyEvents : true,
					listeners:{
						keypress:{fn:function(txtcomp, eventobj ){Ext.getCmp('btn_submmit').disable();}},
						change:{fn:function(txtcomp, eventobj ){
							var keyword_var = Ext.getCmp('keyword').getValue();
							var url_var = Ext.getCmp('url').getValue();
							if(keyword_var!='' && url_var!=''){
								loadFormKeywordUrl(keyword_var,url_var);
							}
						}}//change ends
					}
				},{
					xtype:'textfield',
					width : 350,
					allowBlank : false,
					blankText : 'URL不能为空',
					name : 'url',
					id : 'url',
					fieldLabel:'<font color=red>*</font>URL(6-512字节)',
					vtype:'url',
					enableKeyEvents : true,
					listeners:{
						keypress:{fn:function(txtcomp, eventobj ){Ext.getCmp('btn_submmit').disable();}},
						change:{fn:function(txtcomp, eventobj ){
							var keyword_var = Ext.getCmp('keyword').getValue();
							var url_var = Ext.getCmp('url').getValue();
							if( url_var!=''){
								//后台请求二：到库中去取已有数据
								if( keyword_var!='')
								{
									loadFormKeywordUrl(keyword_var,url_var);
								}
								//后台请求一：给出此url是否已被干预过其他词的提示
								showOtherKeywordTip(url_var);
							}
						}}//change ends
					}
				},{
					xtype:'label',
					id:'urlconflict_tip',
				    html:"&nbsp;<br>&nbsp;"
				},
				comb,{
					xtype:'textarea',
					width : 550,
					height : 300,
					name : 'datacontent_part1',
					id : 'datacontent_part1',
					fieldLabel:'<font color=red>*</font>XML片段',
					allowBlank : false,
					value: '',
					enableKeyEvents : true,
					listeners:{
						keypress:{fn:function(txtcomp, eventobj ){
				            if(inputForm.isAdd==true){
    				            Ext.getCmp('btn_submmit').disable();
    				            Ext.getCmp("btn_preview").enable();
				            }else{
				                Ext.getCmp('btn_submmit').enable();
                                Ext.getCmp("btn_preview").disable();
				            }
				        }
					}}
				},{
					xtype:'numberfield',
					minValue: 1,
					maxValue: 50,
					allowDecimals: false,
					width : 150,
					allowBlank : false,
					blankText : '排名不能为空',
					name : 'rank',
					fieldLabel:'<font color=red>*</font>排名(1-10)',
					value:4
				},{
                	xtype:'textfield',
                	width : 150,
                	allowBlank : false,
                	id : 'start_time_string',
					name : 'start_time_string',
					fieldLabel:'<font color=red>*</font>上线日期',
					cls:'Wdate'
					//value: getTimeAfterNow(0)
                },{
					xtype:'textfield',
					width : 150,
					allowBlank : false,
					id : 'end_time_string',
					name : 'end_time_string',
					fieldLabel:'<font color=red>*</font>下线日期',
					cls:'Wdate'
					//value: getTimeAfterNow(1*24*60)
		        },{
					xtype:'hidden',
					name : 'id'
				},{
					xtype:'hidden',
					name : 'form_classtag',
					id : 'form_classtag'
				},{
					xtype:'hidden',
					name : 'form_vrtemplate_num',
					id : 'form_vrtemplate_num'
				},{//已预览确认过的标志
					xtype:'hidden',
					name : 'form_confirmed',
					id : 'form_confirmed'
				}
			],
			buttons:[
				{
					text : '验证并预览',
					id : 'btn_preview',
					handler : previewForm
				},{
					text : '提交',
					id : 'btn_submmit',
					handler : submitForm
				},
				{
					text : '关闭',
					handler : function(){
						win.hide();
					}
				}
			]
		});
		//删除原有窗口对象
		win = Ext.getCmp('input_window');
		if(win){
			win.destroy();
		}
		var win = new Ext.Window({
			id: 'input_window',
			layout:'fit',
		    width:750,
		    closeAction:'hide',
			resizable : false,
			shadow : true,
			modal :true,
		    closable:true,
		    bodyStyle:'padding:5 5 5 5',
		    animCollapse:true,
			items:[inputForm],
			y: 20
		});
		function reload(){
            store.load({params:{start:0, limit:pageSize}});
        }
        function doSync(){
            new_synchronize(reload);
        }
        function doCancel(){
            cancel_synchronize(reload);
        }
        
		//显示新建网页前台限制词记录窗口
		function showAdd(){
			inputForm.form.reset();
			inputForm.isAdd = true;
			win.setTitle("新增VR类数据批量固排");
			win.show();
			bindingPicker();
			
			comb.setValue(309901);
			Ext.getCmp('form_classtag').setValue("FIXRANK.WEB.ALL");
			Ext.getCmp('form_vrtemplate_num').setValue(14);
			chgTpl(14);
							
			
			Ext.getCmp("keyword").getEl().dom.value = document.getElementById("query_keyword").value ;
			Ext.getCmp('btn_submmit').disable();//默认不可点
			//表单前两个标签可变
			Ext.getCmp('keyword').getEl().dom.readOnly = false;
			Ext.getCmp('url').getEl().dom.readOnly = false;
			//url提示信息标签
			Ext.getCmp('urlconflict_tip').setText('&nbsp;<br>&nbsp;',false);
		}
		String.prototype.replaceAll  = function(s1,s2){    
			return this.replace(new RegExp(s1,"gm"),s2);    
		}
		//显示修改网页前台限制词记录窗口
		function showModify(){
			var recordList = getCheckedIdList();
			var num = recordList.length;
			if(num > 1){
				Ext.MessageBox.alert("提示","每次只能修改一条记录信息。")
			}else if(num == 1){
				inputForm.isAdd = false;
				win.setTitle("修改记录信息");
				win.show();
				bindingPicker();
				var recordId = recordList[0];
				loadForm(recordId);
			}
			//Ext.getCmp('btn_submmit').disable();//默认不可点
			Ext.getCmp('btn_submmit').enable();
			Ext.getCmp('btn_preview').disable();//验证不可点
			
			//表单两个隐藏字段进行设置，前两个标签不可变
			Ext.getCmp('keyword').getEl().dom.readOnly = true;
			Ext.getCmp('url').getEl().dom.readOnly = true;
			//url提示信息标签
			Ext.getCmp('urlconflict_tip').setText('&nbsp;<br>&nbsp;',false);
		}
		function bindingPicker(){
			//给上下线时间预置当前时间和翌日当前时间
			Ext.getCmp('start_time_string').setValue(getTimeAfterNow(0));
			Ext.getCmp('end_time_string').setValue(getTimeAfterNow(3*24*60));

			document.getElementById('start_time_string').onclick = function(){
				WdatePicker({skin:'ext',dateFmt:'yyyy-MM-dd HH:mm:ss',	maxDate:'#F{$dp.$D(\'end_time_string\')}'  });
			};
			document.getElementById('end_time_string').onclick = function(){
				WdatePicker({      skin:'ext',    dateFmt:'yyyy-MM-dd HH:mm:ss',    minDate:'#F{$dp.$D(\'start_time_string\')}' });
			};
		}
		//显示删除网页前台限制词记录对话框
		function showDelete(){
			var recordIdList = getCheckedIdList();
			var num = recordIdList.length;
			if(num > 1) {
				Ext.MessageBox.alert("提示","每次只能删除一条记录信息。")
			} else if(num == 1) {
				Ext.MessageBox.confirm("提示","您确定要删除所选记录吗？",function(btnId){
					if(btnId == 'yes')
						deleteRecord(recordIdList);
				});
			} else {//0
				return;
			}
		}
		//删除网页前台限制词记录
		function deleteRecord(recordIdList){
			var msgTip = Ext.MessageBox.show({
				title:'提示',
				width : 250,
				msg:'正在删除此记录信息请稍后......'
			});
			Ext.Ajax.request({
				url : 'mingyi_fixrank.do?method=deleteRecord',
				params : {recordIdList : recordIdList.toString()},
				method : 'GET',
				success : function(response,options){
					msgTip.hide();
					var result = Ext.util.JSON.decode(response.responseText);
					if(result.success){
						//服务器端数据成功删除后，同步删除客户端列表中的数据
						store.load({params:{start:0, limit:18}});
						Ext.Msg.alert('提示','删除记录成功。');
					}else{
						Ext.Msg.alert('提示','删除记录失败！');
					}
				},
				failure : function(response,options){
					msgTip.hide();
					Ext.Msg.alert('提示','删除记录失败！');
				}
			});
		}
		//后台请求一：给出此url是否已被干预过其他词的提示
		function showOtherKeywordTip(url_var){
			var msgTip = Ext.MessageBox.show({
				title:'提示',
				width : 250,
				msg:'记录信息请稍后......'
			});
			Ext.Ajax.request({
				url : 'mingyi_fixrank.do?method=getRecordByUrl',
				params : {url : url_var},
				method : 'GET',
				success : function(response,options){
					msgTip.hide();
					var result = Ext.util.JSON.decode(response.responseText);
					if(result.success){
						//Ext.Msg.alert('提示','如下关键词上被干预过：'+result.data + '。<br>如果继续添加，此URL对应的其他干预记录的摘要信息可能被覆盖');
						Ext.getCmp('urlconflict_tip').setText('<font color=red size=2>如下关键词上被干预过：'+result.data + '。如果继续添加，此URL对应的其他干预记录的摘要信息可能被覆盖</font><br>&nbsp;',false);
					}else{
						//Ext.Msg.alert('提示','删除记录失败！');
					}
					/*
					Ext.MessageBox.show({
			           title: '提示',
			           msg: '新增固排记录失败。原因是:<br>'+failcause,
			           buttons: Ext.MessageBox.OK,
			           icon: Ext.MessageBox.ERROR
			        });*/
				},
				failure : function(response,options){
					msgTip.hide();
					//Ext.Msg.alert('提示','删除记录失败！');
				}
			});
		}
		//加载表单数据
		function loadForm(recordId){
			inputForm.form.load({
				waitMsg : '正在加载数据请稍后',//提示信息
				waitTitle : '提示',//标题
				url : 'mingyi_fixrank.do?method=getRecordById',//请求的url地址
				params : {recordId : recordId},
				method:'GET',//请求方式
				success:function(form,action){//加载成功的处理函数
					Ext.getCmp('form_classtag').setValue( action.result.data.classtag );
					Ext.getCmp('form_vrtemplate_num').setValue( action.result.data.tplid );
					prevalue_comb = comb.getValue();//修改时不可改
				},
				failure:function(form,action){//加载失败的处理函数
					Ext.Msg.alert('提示','数据加载失败');
				}
			});
		}
		//加载表单数据
		function loadFormKeywordUrl(keyword_var,url_var){
			inputForm.form.load({
				waitMsg : '查找库中记录并加载数据，请稍后',//提示信息
				waitTitle : '提示',//标题
				url : 'mingyi_fixrank.do?method=getRecordByKeywordUrl',//请求的url地址
				params : {keyword : Ext.util.JSON.encode(keyword_var) , url : Ext.util.JSON.encode(url_var) },
				method:'POST',//请求方式
				success:function(form,action){//加载成功的处理函数
					Ext.Msg.alert('提示','此记录已被干预过并加载到表单中，请修改');
					inputForm.isAdd = false;
					//表单两个隐藏字段进行设置，前两个标签不可变
					Ext.getCmp('keyword').getEl().dom.readOnly = true;
					Ext.getCmp('url').getEl().dom.readOnly = true;
					win.setTitle("修改记录信息");
					Ext.getCmp('form_classtag').setValue( vrtypeStore.getById(comb.getValue()).get('classtag') );
					Ext.getCmp('form_vrtemplate_num').setValue( vrtypeStore.getById(comb.getValue()).get('vrtemplate_tplid') );
					prevalue_comb = comb.getValue();//修改时不可改
					//url提示信息标签
					Ext.getCmp('urlconflict_tip').setText('&nbsp;<br>&nbsp;',false);
				},
				failure:function(form,action){//加载失败的处理函数
				}
			});
		}
		//预览表单提交数据的效果
		function previewForm(){
		    //对xml数据进行校验
		    var datacontent = Ext.getCmp("datacontent_part1").getValue();
		    if(/\t/g.test(datacontent)){
		        alert("xml片段中不能包含tab键");
		        return;
		    }
			Ext.getCmp('form_confirmed').setValue('0');
			if( inputForm.form.isValid() ){
				inputForm.form.submit({
					clientValidation:true,//进行客户端验证
					waitMsg : '正在提交数据请稍后',//提示信息
					waitTitle : '提示',//标题
					url : 'mingyi_fixrank.do?method=addRecord',//请求的url地址
					method:'POST',//请求方式
					success:function(form,action){//加载成功的处理函数
						var previewCode = action.result.cause;
						//Ext.Msg.alert('预览效果',previewCode);
						Ext.MessageBox.show({
		                   title: '预览效果',
		                   msg: '如下效果满意吗？<br><br><br><br>' + previewCode ,
		                   buttons: Ext.MessageBox.YESNO,
		                   icon: Ext.MessageBox.QUESTION,
		                   fn: function(btnId){
		                       if(btnId == 'yes')
		                    	   Ext.getCmp('btn_submmit').enable();
		                       else
		                       	   Ext.getCmp('btn_submmit').disable();
		                   }
		                })
					},
					failure:function(form,action){//新增失败的处理函数
						var failcause = action.result.cause;
						Ext.MessageBox.show({
				           title: '提示',
				           msg: '新增固排记录失败。原因是：'+failcause,
				           buttons: Ext.MessageBox.OK,
				           icon: Ext.MessageBox.ERROR
				        });
					}
				});
			}else{
			    //添加修改逻辑
			    inputForm.form.submit({
                    clientValidation:true,//进行客户端验证
                    waitMsg : '正在提交数据请稍后',//提示信息
                    waitTitle : '提示',//标题
                    url : 'mingyi_fixrank.do?method=modifyRecord',//请求的url地址
                    method:'POST',//请求方式
                    success:function(form,action){//加载成功的处理函数
                        var previewCode = action.result.cause;
                        //Ext.Msg.alert('预览效果',previewCode);
                        Ext.MessageBox.show({
                           title: '预览效果',
                           msg: '如下效果满意吗？<br><br><br><br>' + previewCode ,
                           buttons: Ext.MessageBox.YESNO,
                           icon: Ext.MessageBox.QUESTION,
                           fn: function(btnId){
                               if(btnId == 'yes')
                                   Ext.getCmp('btn_submmit').enable();
                               else
                                   Ext.getCmp('btn_submmit').disable();
                           }
                        })
                    },
                    failure:function(form,action){//新增失败的处理函数
                        var failcause = action.result.cause;
                        Ext.MessageBox.show({
                           title: '提示',
                           msg: '新增固排记录失败。原因是：'+failcause,
                           buttons: Ext.MessageBox.OK,
                           icon: Ext.MessageBox.ERROR
                        });
                    }
                });
			}
		}
		
		//提交表单数据
		function submitForm(){
		    var dataContent = Ext.getCmp("datacontent_part1").getValue();
		    if(/\t/g.test(dataContent)){
		        alert("xml片段中不能包含tab键");
		        return;
		    }
			Ext.getCmp('form_confirmed').setValue('1');
			//判断当前执行的提交操作，isAdd为true表示执行网页前台限制词记录新增操作，false表示执行网页前台限制词记录修改操作
			if( inputForm.form.isValid() ){
				//设定上下线时间控件的范围
				var now_time = getTimeAfterNow(0);
				var end_time_var = Ext.getCmp('end_time_string').getValue();
				if( end_time_var < now_time){//下线时间不能在当前时间之前
					Ext.MessageBox.show({
			           title: '提示',
			           msg: '下线时间不能在当前时间之前!',
			           buttons: Ext.MessageBox.OK,
			           icon: Ext.MessageBox.WARNING
			        });
				}
				else{
					if(inputForm.isAdd){
						//新增网页前台限制词记录信息
						inputForm.form.submit({
							clientValidation:true,//进行客户端验证
							waitMsg : '正在提交数据请稍后',//提示信息
							waitTitle : '提示',//标题
							url : 'mingyi_fixrank.do?method=addRecord',//请求的url地址
							method:'POST',//请求方式
							success:function(form,action){//加载成功的处理函数
								win.hide();
								store.load({params:{start:0, limit:18}});
								Ext.Msg.alert('提示','新增固排记录成功');
							},
							failure:function(form,action){//新增失败的处理函数
								var failcause = action.result.cause;
								Ext.MessageBox.show({
						           title: '提示',
						           msg: '新增固排记录失败。原因是:<br>'+failcause,
						           buttons: Ext.MessageBox.OK,
						           icon: Ext.MessageBox.ERROR
						        });
							}
						});
					}//if
					else{
						//修改网页前台限制词记录信息
						inputForm.form.submit({
							clientValidation:true,//进行客户端验证
							waitMsg : '正在提交数据请稍后',//提示信息
							waitTitle : '提示',//标题
							url : 'mingyi_fixrank.do?method=modifyRecord',//请求的url地址
							method:'POST',//请求方式
							success:function(form,action){//加载成功的处理函数
								win.hide();
								store.load({params:{start:0, limit:18}});
								Ext.Msg.alert('提示','修改固排记录成功');
							},
							failure:function(form,action){//加载失败的处理函数
								var failcause = action.result.cause;
								Ext.MessageBox.show({
						           title: '提示',
						           msg: '修改固排记录失败。原因是:<br>'+failcause,
						           buttons: Ext.MessageBox.OK,
						           icon: Ext.MessageBox.ERROR
						        });
							}
						});
					}//else
				}//else
			}//if( inputForm.form.isValid() )
		}
		//取得表单数据
		function getFormFieldsObj(domainRecordId){
			var fields = inputForm.items;
			var obj = {};
			for(var i = 0 ; i < fields.length ; i++){
				var item = 	fields.itemAt(i);
				var value = item.getValue();
				obj[item.name] = value;
			}
			if(Ext.isEmpty(obj['id'])){
				obj['id'] = domainRecordId;
			}
			//补充另外两个属性tag_block和tag_reversible
			if( Ext.getCmp('tag_block_group').items.get(0).checked )
				obj['tag_block'] = 1 ;
			else
				obj['tag_block'] = 0 ;
			if( Ext.getCmp('tag_reversible_group').items.get(0).checked )
				obj['tag_reversible'] = 1 ;
			else
				obj['tag_reversible'] = 0 ;
			return obj;
		}
		//取得所选域名记录信息
		function getCheckedIdList(){
			var recs = recordGrid.getSelectionModel().getSelections();
			var list = [];
			if(recs.length == 0){
				Ext.MessageBox.alert('提示','请选择要进行操作的记录！');
			}else{
				for(var i = 0 ; i < recs.length ; i++){
					var rec = recs[i];
					list.push(rec.get('id'));
				}
			}
			return list;
		}

		//线上同步词表
		function synchronize(){
			
			var msgTip = Ext.MessageBox.show({
				title:'提示',
				width : 250,
				msg:'正在向线上发送同步信号，请稍候......'
			});
			Ext.Ajax.request({
				url : 'xml?act=sync&product=web',
				//params : {deploytype : 'front'},
				method : 'GET',
				timeout :300000,
				success : function(response,options){
					msgTip.hide();
					var result = Ext.util.JSON.decode(response.responseText);
					if(result.success){
						//服务器端数据成功删除后，同步删除客户端列表中的数据
						store.load({params:{start:0, limit:18}});
						Ext.Msg.alert('提示','词表上线成功！');
					}else{
						Ext.Msg.alert('提示','词表上线失败！');
					}						
				},
				failure : function(response,options){
					msgTip.hide();
					Ext.Msg.alert('提示','词表线上同步失败！');
				}
			});
			//alert('上线中...');
		}
		function compareDate(d1, d2) {  // 比较时间的方法，d1时间比d2时间大，则返回true
		    return Date.parse(d1.replace(/-/g, "/")) > Date.parse(d2.replace(/-/g, "/"))  
		} 
		function biggerDate(d1, d2) {  // 得到较大日期
			if(compareDate(d1,d2))
				return d1;
			else
				return d2;
		} 
		function getTimeAfterNow(after_mnt){ //当前日期后after_mnt分钟
			var clock = '';
		    var now = new Date();
		    now.setMinutes(now.getMinutes()+after_mnt);
		    
		    var yy = now.getFullYear(); 
		    var month = now.getMonth()+1;
		    var dd = now.getDate();

		    clock = yy + '-';
		    if (month < 10) clock += '0'; 
		    clock += month+'-'; 
		    if (dd < 10) clock += '0'; 
		    clock += dd+' '; 
		    
		    var hh = now.getHours(); 
		    var mm = now.getMinutes(); 
		    var ss = now.getTime() % 60000; 
		    ss = (ss - (ss % 1000)) / 1000; 

		    if (hh < 10) clock += '0'; 
		    clock += hh+':'; 
		    if (mm < 10) clock += '0'; 
		    clock += mm+':'; 
		    if (ss < 10) clock += '0'; 
		    clock += ss; 
		    return(clock); 
		}

		function classid_renderer(val, p, record){
			if(vrtypeStore.getById(val)!=null)
				return vrtypeStore.getById(val).get('chname');
			else
				return '加载中...';
		}
		
		var escapespecial={"¤":"%A1%E8","§":"%A1%EC","¨":"%A1%A7","°":"%A1%E3","±":"%A1%C0","・":"%A1%A4","×":"%A1%C1","à":"%A8%A4","á":"%A8%A2","è":"%A8%A8","é":"%A8%A6","ê":"%A8%BA","ì":"%A8%AC","í":"%A8%AA","ò":"%A8%B0","ó":"%A8%AE","÷":"%A1%C2","ù":"%A8%B4","ú":"%A8%B2","ü":"%A8%B9","+":"%2B"};
		function rescape(s) {
	        var r = ""
	        if (typeof(s) == "undefined")
	                return r
	        for (var i=0;i<s.length; i++) {
	                var c = s.charAt(i);
	                if( typeof(escapespecial[c]) != "undefined")
	                        r=r+escapespecial[c];
	                else
	                        r=r+escape(c);
	        }
	        return r;
		}
			
		//开始查询代码
		function query(tag){
			var query_keyword ;
			if(tag)
				query_keyword = document.getElementById("query_keyword").value;
			else{
				query_keyword = '';
				document.getElementById("query_keyword").value='';
			}
			var query_matchType;
			if(document.getElementsByName("query_matchType")[0].checked)
				query_matchType = 1;
			else
				query_matchType = 0;
			var url = "mingyi_fixrank.do?method=getRecordList&query_keyword="+encodeURIComponent(query_keyword)+"&query_matchType="+query_matchType;
			store.proxy.conn.url = url;
			store.load({params:{start:0, limit:18}});
		}
		
		dr.render('dr');
		
	});
</script>
<body>

<div id="dr" style="width:100%;height:20%;"></div>
<div id="progress-div" style="width:100%;height:4%;display:none"></div>
<div id='grid-div' style="width:100%; height:63%;"></div>
</body>
</html>
<style type="text/css">
	.vrnews {
		color:#9C9C9C;
		font-size:13px;
		line-height:1.4;
	}
	.vrnews ul {
		list-style-image:none;
		list-style-position:outside;
		list-style-type:none;
		padding-left:16px;
	}
	#content {
		clear:left;
		margin-bottom:28px;
		width:533px;
	}
	#content DIV {	
		PADDING-RIGHT: 10px;	
		PADDING-LEFT: 10px;	
		MARGIN-BOTTOM: 19px;	
		PADDING-BOTTOM: 0px;	
		PADDING-TOP: 0px
	}
	#content h2, #content h3 {
		color:#9C9C9C;
		font-weight:normal;
	}
	#content h2 a, #content h3 a {
		font-size:16px;
	}
	a:link {
		color:#0000CC;
		text-decoration:underline;
	}
	#content p {
		font-size:13px;
		font-family:Arial,Helvetica,sans-serif;
		line-height:1.4;
		text-align:justify;
	}
	.url, .agentads .url, .agentads .url a:link, .agentads .url a:visited {
		color:#008000;
	}
</style>
